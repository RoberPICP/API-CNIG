{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/templates/information_popup.html","webpack:///./src/templates/information_layers.html","webpack:///./src/templates/information.html","webpack:///./src/facade/js/i18n/language.js","webpack:///./src/impl/ol/js/informationcontrol.js","webpack:///./src/facade/js/informationcontrol.js","webpack:///./src/facade/js/information.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","translations","en","es","getLang","res","M","language","getTranslation","lang","information","getValue","keyPath","arguments","length","undefined","translation","utils","isNullOrEmpty","console","warn","concat","split","reduce","prev","current","regExs","gsResponse","msNewFeature","gsNewFeature","gsGeometry","msGeometry","msUnsupportedFormat","POPUP_TITLE","InformationControl","_M$impl$Control","_inherits","impl","Control","_super","_createSuper","format","featureCount","buffer","opened","_this","_classCallCheck","format_","normalize","featureCount_","buffer_","opened_","facadeMap_","popupMove_","info","formato","infoContainer","document","createElement","innerHTML","content","Array","forEach","querySelectorAll","element","trim","test","ol","WFS","readFeatures","unsupported","map","html","_get","_getPrototypeOf","this","getMapImpl","addControl","addOnClickEvent_","deleteOnClickEvent_","deactivate","removeControl","Observable","unByKey","clickEventKey_","querySelector","classList","remove","_this2","olMap","on","e","buildUrl_","dialog","add","dialogParam","evt","wmsInfoURLS","buildWMSInfoURL","getWMS","wmtsInfoURLS","buildWMTSInfoURL","getWMTS","layerNamesUrls","_toConsumableArray","filter","layer","showInfoFromURL_","coordinate","wmsLayers","_this3","viewResolution","getView","getResolution","srs","getProjection","code","param","olLayer","getImpl","getOL3Layer","isVisible","isQueryable","informationParams","INFO_FORMAT","FEATURE_COUNT","source","getSource","coord","url","BUFFER","getFeatureInfoUrl","legend","wmtsLayers","_this4","infoFormat","getZoom","replace","layerName","formatedInfo","features","feature","attr","getKeys","beautifyAttribute","ilen","attrName","attrValue","txtToHtmlGeoserver","txtToHtmlMapserver","infoVar","attrValuesString","attrValueString","indexOf","htmlHeader","nextAttrValueString","_this5","htmlAsText","template","compileSync","informationPopupTemplate","vars","parseToHtml","infos","String","contFull","loadingInfoTab","icon","title","popup","getPopup","config","MOVE_MAP_EXTRACT","Popup","addTab","addPopup","getTabs","some","tab","removePopup","layerNameUrl","remote","then","response","parseCSSInfo","text","insert","formatInfo","push","unsupportedFormat","removeTab","popupContent","informationLayersTemplate","layers","info_of","listeners","selector","all","type","callback","toogleSection","setTimeout","elem","movePopup_","err","popup_","target","parentElement","contains","coordinates","getCoordinate","panIntoView","_this6","window","innerWidth","center","returnPositionHtmlElement","animate","zoom","duration","newText","init","style","finish","newStyle","term","part1","part2","join","newTerm","_M$Control","tooltip","order","isUndefined","InformationImplControl","exception","Promise","success","fail","invokeEscKey","activate","body","cursor","addEventListener","checkEscKey","removeEventListener","click","dispatchEvent","KeyboardEvent","keyCode","which","shiftKey","ctrlKey","metaKey","error","control","Information","_M$Plugin","Plugin","options","map_","controls_","position_","position","tooltip_","name_","metadata_","api","metadata","fc","ctrl","panel_","ui","Panel","className","collapsedButtonClass","addControls","addPanels","cadena","encodeBase64","plugin","removeControls","_ref","M$plugin$Information","M$control$InformationControl","M$impl$control$InformationControl"],"mappings":"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","file":"information.ol.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n","module.exports = \"<div class=\\\"m-information-content\\\">\\n   {{{info}}}\\n</div>\\n\";","module.exports = \"  {{#each layers}}\\n      <div class='m-information-content-info'>\\n          <div class='m-information-content-info-header'>\\n              <div class=\\\"m-arrow-right\\\"></div>\\n              <div>\\n                  <p> {{../info_of}} <strong>{{layerName}}</strong></p>\\n              </div>\\n          </div>\\n          <div class='m-information-content-info-body m-content-collapsed'>\\n              {{{formatedInfo}}}\\n          </div>\\n      </div>\\n  {{/each}}\\n\";","module.exports = \"<div class=\\\"m-control m-container m-information-container\\\">\\n  <button tabindex=\\\"{{order}}\\\" id='m-information-btn' class=\\\"m-information-btn g-cartografia-info\\\" title=\\\"{{translations.tooltip}}\\\"></button>\\n</div>\\n\";","import en from './en';\nimport es from './es';\n\n/**\n * Default object with es and en translate.\n *\n * @const\n * @type {object}\n */\nconst translations = {\n  en,\n  es,\n};\n\nconst getLang = () => {\n  let res = 'es';\n  if (typeof M.language.getLang === 'function') {\n    res = M.language.getLang();\n  }\n\n  return res;\n};\n\n/**\n * This function sets a new language translate.\n * @param {string} lang\n * @param {JSON} json\n * @public\n * @api\n */\nexport const addTranslation = (lang, json) => {\n  translations[lang] = json;\n};\n\n/**\n * This function gets a language translate.\n *\n * @param {string} lang\n * @return {JSON}\n * @public\n * @api\n */\nexport const getTranslation = (lang) => {\n  if (lang === 'es' || lang === 'en') {\n    return translations[lang];\n  }\n  return M.language.getTranslation(lang).information;\n};\n\n/**\n * This function gets a language value from key\n *\n * @public\n * @param {string}\n * @param {string}\n * @return {string}\n * @public\n * @api\n */\n\nexport const getValue = (keyPath, lang = getLang()) => {\n  const translation = getTranslation(lang);\n  let value = '';\n  if (M.utils.isNullOrEmpty(translation)) {\n    /* eslint-disable no-console */\n    console.warn(`The translation '${lang}' has not been defined.`);\n  } else {\n    value = keyPath.split('.').reduce((prev, current) => prev[current], translation);\n  }\n\n  return value;\n};\n","/**\n * @module M/impl/control/InformationControl\n */\n\nimport informationPopupTemplate from '../../../templates/information_popup';\nimport informationLayersTemplate from '../../../templates/information_layers';\nimport { getValue } from '../../../facade/js/i18n/language';\n\n/**\n * Regular expressions of Information\n * @type {object}\n * @public\n * @api\n */\nconst regExs = {\n  gsResponse: /^results[\\w\\s\\S]*'http:/i,\n  msNewFeature: /feature(\\s*)(\\w+)(\\s*):/i,\n  gsNewFeature: /#newfeature#/,\n  gsGeometry: /geom$/i,\n  msGeometry: /boundedby$/i,\n  msUnsupportedFormat: /error(.*)unsupported(.*)info_format/i,\n};\n\nconst POPUP_TITLE = getValue('title');\n\nexport default class InformationControl extends M.impl.Control {\n  constructor(format, featureCount, buffer, opened) {\n    super({});\n\n    /**\n     * Format to request information\n     *\n     * @type {string}\n     * @private\n     */\n    this.format_ = format;\n\n    if ((M.utils.normalize(this.format_) === 'plain') || (M.utils.normalize(this.format_) === 'text/plain')) {\n      this.format_ = 'text/plain';\n    } else if ((M.utils.normalize(this.format_) === 'gml') || (M.utils.normalize(this.format_) === 'application/vnd.ogc.gml')) {\n      this.format_ = 'application/vnd.ogc.gml';\n    } else {\n      this.format_ = 'text/html';\n    }\n\n    /**\n     * Maximum feature count\n     *\n     * @private\n     * @type {Integer}\n     */\n    this.featureCount_ = featureCount;\n\n    /**\n     * Buffer for click information\n     *\n     * @private\n     * @type {Integer}\n     */\n    this.buffer_ = buffer;\n\n    /**\n     * Information opened all, only if there is one layer, or not opened\n     *\n     * @private\n     * @type {string}\n     */\n    this.opened_ = opened;\n\n    /**\n     * Facade of the map\n     * @private\n     * @type {M.Map}\n     */\n    this.facadeMap_ = null;\n\n    /**\n     * Define si el popup se mueve o no\n     * @private\n     * @type {boolean}\n     * @default false\n     * @api stable\n     */\n    this.popupMove_ = false;\n  }\n\n  /**\n   * This function adds the control to the specified map\n   *\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the plugin\n   * @param {HTMLElement} html of the plugin\n   * @api\n   */\n  addTo(map, html) {\n    super.addTo(map, html);\n    this.facadeMap_ = map;\n    map.getMapImpl().addControl(this);\n  }\n\n  /**\n   * This function adds the event singleclick to the specified map\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  activate() {\n    this.addOnClickEvent_();\n  }\n\n  /**\n   * This function remove the event singleclick to the specified map\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  deactivate() {\n    this.deleteOnClickEvent_();\n  }\n\n  /**\n   * This function destroys this control, cleaning the HTML\n   * and unregistering all events\n   *\n   * @public\n   * @function\n   * @api\n   * @export\n   */\n  destroy() {\n    this.deactivate();\n    this.facadeMap_.getMapImpl().removeControl(this);\n    this.facadeMap_ = null;\n  }\n\n  /**\n   * This function remove the event singleclick to the specified map\n   *\n   * @private\n   * @function\n   */\n  deleteOnClickEvent_() {\n    ol.Observable.unByKey(this.clickEventKey_);\n    document.querySelector('.m-control.m-container.m-information-container').classList.remove('activated');\n  }\n\n  /**\n   * This function adds the event singleclick to the specified map\n   *\n   * @private\n   * @function\n   */\n  addOnClickEvent_() {\n    const olMap = this.facadeMap_.getMapImpl();\n    this.clickEventKey_ = olMap.on('singleclick', e => this.buildUrl_(M.dialog, e));\n    document.querySelector('.m-control.m-container.m-information-container').classList.add('activated');\n  }\n\n  /**\n   * This function builds the query URL and show results\n   *\n   * @private\n   * @function\n   * @param {ol.MapBrowserPointerEvent} evt - Browser point event\n   */\n  buildUrl_(dialogParam, evt) {\n    this.evt = evt;\n    const olMap = this.facadeMap_.getMapImpl();\n    const wmsInfoURLS = this.buildWMSInfoURL(this.facadeMap_.getWMS());\n    const wmtsInfoURLS = this.buildWMTSInfoURL(this.facadeMap_.getWMTS());\n    const layerNamesUrls = [...wmtsInfoURLS, ...wmsInfoURLS]\n      .filter(layer => !M.utils.isNullOrEmpty(layer));\n    if (layerNamesUrls.length > 0) {\n      this.showInfoFromURL_(layerNamesUrls, evt.coordinate, olMap);\n    } else {\n      dialogParam.info(getValue('not_queryable'));\n    }\n  }\n\n  /**\n   * @function\n   * @public\n   * @api\n   */\n  buildWMSInfoURL(wmsLayers) {\n    const olMap = this.facadeMap_.getMapImpl();\n    const viewResolution = olMap.getView().getResolution();\n    const srs = this.facadeMap_.getProjection().code;\n    return wmsLayers.map((layer) => {\n      const olLayer = layer.getImpl().getOL3Layer();\n      let param;\n      if (layer.isVisible() && layer.isQueryable() && !M.utils.isNullOrEmpty(olLayer)) {\n        param = {};\n        const informationParams = {\n          INFO_FORMAT: this.format_,\n          FEATURE_COUNT: this.featureCount_,\n        };\n        const regexBuffer = /buffer/i;\n        const source = olLayer.getSource();\n        const coord = this.evt.coordinate;\n        // const url = source.getGetFeatureInfoUrl(coord, viewResolution, srs, informationParams);\n        if (!regexBuffer.test(layer.url)) {\n          informationParams.BUFFER = this.buffer_;\n        }\n        const url = source.getFeatureInfoUrl(coord, viewResolution, srs, informationParams);\n        param = { layer: layer.legend || layer.name, url };\n      }\n      return param;\n    });\n  }\n\n  /**\n   * @function\n   * @public\n   * @api\n   */\n  buildWMTSInfoURL(wmtsLayers) {\n    return wmtsLayers.map((layer) => {\n      let param;\n      if (layer.isVisible() && layer.isQueryable() && !M.utils.isNullOrEmpty(layer)) {\n        param = {};\n        const infoFormat = this.format_;\n        const coord = this.evt.coordinate;\n        const url = layer.getFeatureInfoUrl(coord, this.facadeMap_.getZoom(), infoFormat).replace('row=-', 'row=');\n        param = { layer: layer.legend || layer.name, url };\n      }\n      return param;\n    });\n  }\n\n  /**\n   * This function specifies whether the information is valid\n   *\n   * @param {string} info - Information to validate\n   * @param {string} formato - Specific format to validate\n   * @returns {boolean} res - Is valid or not format\n   * @private\n   * @function\n   */\n  static insert(info, formato) {\n    let res = false;\n    switch (formato) {\n      case 'text/html':\n        // ex\n        const infoContainer = document.createElement('div');\n        infoContainer.innerHTML = info;\n        // content\n        let content = '';\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('body'), (element) => {\n          content += element.innerHTML.trim();\n        });\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('div'), (element) => {\n          content += element.innerHTML.trim();\n        });\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('table'), (element) => {\n          content += element.innerHTML.trim();\n        });\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('b'), (element) => {\n          content += element.innerHTML.trim();\n        });\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('span'), (element) => {\n          content += element.innerHTML.trim();\n        });\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('input'), (element) => {\n          content += element.innerHTML.trim();\n        });\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('a'), (element) => {\n          content += element.innerHTML.trim();\n        });\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('img'), (element) => {\n          content += element.innerHTML.trim();\n        });\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('p'), (element) => {\n          content += element.innerHTML.trim();\n        });\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('ul'), (element) => {\n          content += element.innerHTML.trim();\n        });\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('li'), (element) => {\n          content += element.innerHTML.trim();\n        });\n\n        if ((content.length > 0) && !/WMS\\s+server\\s+error/i.test(info)) {\n          res = true;\n        }\n        break;\n\n      case 'application/vnd.ogc.gml': // ol.format.GML (http://openlayers.org/en/v3.9.0/apidoc/ol.format.GML.html)\n        const formater = new ol.format.WFS();\n        const features = formater.readFeatures(info);\n        res = (features.length > 0);\n        break;\n\n      case 'text/plain': // exp reg\n        if (!/returned\\s+no\\s+results/i.test(info) && !/features\\s+were\\s+found/i.test(info) && !/:$/i.test(info)) {\n          res = true;\n        }\n        break;\n      default:\n    }\n    return res;\n  }\n\n  /**\n   * This function formats the response\n   *\n   * @param {string} info - Information to formatting\n   * @param {string} formato - Specific format\n   * @param {string} layername - Layer name\n   * @returns {string} information - Formatted information\n   * @private\n   * @function\n   */\n  formatInfo(info, formato, layerName) {\n    let formatedInfo = null;\n    switch (formato) {\n      case 'text/html': // ex\n        formatedInfo = info;\n        break;\n      case 'application/vnd.ogc.gml': // ol.format.GML (http://openlayers.org/en/v3.9.0/apidoc/ol.format.GML.html)\n        // let formater = new ol.format.GML();\n        // let feature = formater.readFeatures(info)[0];\n        const formater = new ol.format.WFS();\n        const features = formater.readFeatures(info);\n        formatedInfo = '';\n        features.forEach((feature) => {\n          const attr = feature.getKeys();\n          formatedInfo += '<div class=\\'divinfo\\'>';\n          formatedInfo += `<table class='mapea-table'><tbody><tr><td class='header' colspan='3'>' ${M.utils.beautifyAttribute(layerName)} '</td></tr>'`;\n          for (let i = 0, ilen = attr.length; i < ilen; i += 1) {\n            const attrName = attr[i];\n            const attrValue = feature.get(attrName);\n\n            formatedInfo += '<tr><td class=\"key\"><b>';\n            formatedInfo += M.utils.beautifyAttribute(attrName);\n            formatedInfo += '</b></td><td class=\"value\">';\n            formatedInfo += attrValue;\n            formatedInfo += '</td></tr>';\n          }\n          formatedInfo += '</tbody></table></div>';\n        });\n        break;\n      case 'text/plain': // exp reg\n        if (regExs.gsResponse.test(info)) {\n          formatedInfo = this.txtToHtmlGeoserver(info, layerName);\n        } else {\n          formatedInfo = this.txtToHtmlMapserver(info, layerName);\n        }\n        break;\n      default:\n    }\n    return formatedInfo;\n  }\n\n  /**\n   * This function indicates whether the format is accepted by the layer - Specific format text/html\n   *\n   * @param {string} info - Response to consult layer\n   * @param {string} formato - Specific format\n   * @returns {boolean} unsupported - It indicates whether the format is accepted\n   * @private\n   * @function\n   */\n  static unsupportedFormat(info, formato) {\n    let unsupported = false;\n    if (formato === 'text/html') {\n      unsupported = regExs.msUnsupportedFormat.test(info);\n    }\n    return unsupported;\n  }\n\n  /**\n   * This function return formatted information. Specific Geoserver\n   *\n   * @private\n   * @function\n   * @param {string} info - Information to formatting\n   * @param {string} layername - Layer name\n   * @returns {string} html - Information formated\n   */\n  txtToHtmlGeoserver(info, layerName) {\n    // get layer name from the header\n    // let layerName = info.replace(/[\\w\\s\\S]*\\:(\\w*)\\'\\:[\\s\\S\\w]*/i, \"$1\");\n    // remove header\n    let infoVar = info;\n\n    infoVar = infoVar.replace(/[\\w\\s\\S]*':/i, '');\n\n    infoVar = infoVar.replace(/---(-*)(n+)---(-*)/g, '#newfeature#');\n\n    const attrValuesString = infoVar.split('\\n');\n\n    let html = '<div class=\\'divinfo\\'>';\n\n    // build the table\n    html += `<table class='mapea-table'><tbody><tr><td class='header' colspan='3'>${M.utils.beautifyAttribute(layerName)}</td></tr>`;\n\n    for (let i = 0, ilen = attrValuesString.length; i < ilen; i += 1) {\n      const attrValueString = attrValuesString[i].trim();\n      if (attrValueString.indexOf('=') !== -1) {\n        const attrValue = attrValueString.split('=');\n        const attr = attrValue[0].trim();\n        let value = '-';\n        if (attrValue.length > 1) {\n          value = attrValue[1].trim();\n          if (value.length === 0 || value === 'null') {\n            value = '-';\n          }\n        }\n\n        if (regExs.gsGeometry.test(attr) === false) {\n          html += '<tr><td class=\"key\"><b>';\n          html += M.utils.beautifyAttribute(attr);\n          html += '</b></td><td class=\"value\">';\n          html += value;\n          html += '</td></tr>';\n        }\n      } else if (regExs.gsNewFeature.test(attrValueString)) {\n        // set new header\n        html += `<tr><td class=\"header\" colspan=\"3\">${M.utils.beautifyAttribute(layerName)}</td></tr>`;\n      }\n    }\n\n    html += '</tbody></table></div>';\n\n    return html;\n  }\n\n  /**\n   * This function return formatted information. Specific Mapserver\n   *\n   * @private\n   * @function\n   * @param {string} info - Information to formatting\n   * @returns {string} html - Information formated\n   */\n  txtToHtmlMapserver(info) {\n    let infoVar = info;\n    // remove header\n    infoVar = infoVar.replace(/[\\w\\s\\S]*(layer)/i, '$1');\n\n    // get layer name\n    const layerName = infoVar.replace(/layer(\\s*)'(\\w+)'[\\w\\s\\S]*/i, '$2');\n\n    // remove layer name\n    infoVar = infoVar.replace(/layer(\\s*)'(\\w+)'([\\w\\s\\S]*)/i, '$3');\n\n    // remove feature number\n    infoVar = infoVar.replace(/feature(\\s*)(\\w*)(\\s*)(:)([\\w\\s\\S]*)/i, '$5');\n\n    // remove simple quotes\n    infoVar = infoVar.replace(/'/g, '');\n\n    // replace the equal (=) with (;)\n    infoVar = infoVar.replace(/=/g, ';');\n\n    const attrValuesString = infoVar.split('\\n');\n\n    let html = '';\n    const htmlHeader = `<table class='mapea-table'><tbody><tr><td class='header' colspan='3'>${M.utils.beautifyAttribute(layerName)}</td></tr>`;\n\n    for (let i = 0, ilen = attrValuesString.length; i < ilen; i += 1) {\n      const attrValueString = attrValuesString[i].trim();\n      const nextAttrValueString = attrValuesString[i] ? attrValuesString[i].trim() : '';\n\n      const attrValue = attrValueString.split(';');\n      const attr = attrValue[0].trim();\n      let value = '-';\n      if (attrValue.length > 1) {\n        value = attrValue[1].trim();\n        if (value.length === 0) {\n          value = '-';\n        }\n      }\n\n      if (attr.length > 0) {\n        if (regExs.msNewFeature.test(attr)) {\n          if ((nextAttrValueString.length > 0) &&\n            !regExs.msNewFeature.test(nextAttrValueString)) {\n            // set new header\n            html += `<tr><td class='header' colspan='3'>${M.utils.beautifyAttribute(layerName)}</td><td></td></tr>`;\n          }\n        } else {\n          html += '<tr><td class=\"key\"><b>';\n          html += M.utils.beautifyAttribute(attr);\n          html += '</b></td><td class=\"value\">';\n          html += value;\n          html += '</td></tr>';\n        }\n      }\n    }\n\n    if (html.length > 0) {\n      html = `${htmlHeader + html}</tbody></table>`;\n    }\n\n    return html;\n  }\n\n  /**\n   * This function displays information in a popup\n   *\n   * @private\n   * @function\n   * @param {array<object>} layerNamesUrls - Consulted layers\n   * @param {array} coordinate - Coordinate position onClick\n   * @param {olMap} olMap - Map\n\n   */\n  showInfoFromURL_(layerNamesUrls, coordinate, olMap) {\n    const htmlAsText = M.template.compileSync(informationPopupTemplate, {\n      vars: {\n        info: getValue('querying'),\n      },\n      parseToHtml: false,\n    });\n\n    const infos = [];\n    const formato = String(this.format_);\n    let contFull = 0;\n    const loadingInfoTab = {\n      icon: 'g-cartografia-info',\n      title: POPUP_TITLE,\n      content: htmlAsText,\n    };\n    let popup = this.facadeMap_.getPopup();\n    // Se desactiva el movimiento para los casos que no encuentra\n    // información y se muestra el mensaje de no hay información\n    if (M.config.MOVE_MAP_EXTRACT) {\n      M.config('MOVE_MAP_EXTRACT', false);\n      this.popupMove_ = true;\n    }\n    if (M.utils.isNullOrEmpty(popup)) {\n      popup = new M.Popup();\n      popup.addTab(loadingInfoTab);\n      this.facadeMap_.addPopup(popup, coordinate);\n    } else {\n      const hasExternalContent =\n        popup.getTabs().some(tab => tab.title !== POPUP_TITLE);\n      if (!hasExternalContent) {\n        this.facadeMap_.removePopup();\n        popup = new M.Popup();\n        popup.addTab(loadingInfoTab);\n        this.facadeMap_.addPopup(popup, coordinate);\n      } else {\n        popup.addTab(loadingInfoTab);\n      }\n    }\n    layerNamesUrls.forEach((layerNameUrl) => {\n      const url = layerNameUrl.url.replace('row=-', 'row=').replace('col=-', 'col=');\n      const layerName = layerNameUrl.layer;\n      // M.proxy(false);\n      M.remote.get(url).then((response) => {\n        popup = this.facadeMap_.getPopup();\n        if (response.code === 200) {\n          const info = this.parseCSSInfo(response.text);\n          if (InformationControl.insert(info, formato) === true) {\n            const formatedInfo = this.formatInfo(info, formato, layerName);\n            infos.push({ formatedInfo, layerName });\n          } else if (InformationControl.unsupportedFormat(info, formato)) {\n            infos.push({\n              formatedInfo: getValue('unsupported_format'),\n              layerName,\n            });\n          }\n        }\n\n        contFull += 1;\n        if (layerNamesUrls.length === contFull && !M.utils.isNullOrEmpty(popup)) {\n          popup.removeTab(loadingInfoTab);\n          if (infos.length === 0) {\n            popup.addTab({\n              icon: 'g-cartografia-info',\n              title: POPUP_TITLE,\n              content: getValue('no_info'),\n            });\n          } else {\n            const popupContent = M.template.compileSync(informationLayersTemplate, {\n              vars: {\n                layers: infos,\n                info_of: getValue('info_of'),\n              },\n              parseToHtml: false,\n            });\n            popup.addTab({\n              icon: 'g-cartografia-info',\n              title: POPUP_TITLE,\n              content: popupContent,\n              listeners: [{\n                selector: '.m-information-content-info div.m-arrow-right',\n                all: true,\n                type: 'click',\n                callback: e => this.toogleSection(e),\n              }, {\n                selector: '.m-information-content-info div:nth-child(2) p',\n                all: true,\n                type: 'click',\n                callback: e => this.toogleSection(e),\n              }],\n            });\n            if (this.opened_ === 'all') {\n              setTimeout(() => {\n                document.querySelectorAll('.m-information-content-info-body').forEach((elem) => {\n                  elem.classList.remove('m-content-collapsed');\n                });\n              }, 100);\n            } else if (this.opened_ === 'one' && layerNamesUrls.length === 1) {\n              setTimeout(() => {\n                document.querySelector('.m-information-content-info-body').classList.remove('m-content-collapsed');\n              }, 100);\n            }\n            this.movePopup_(this.facadeMap_);\n          }\n          // M.proxy(true);\n        }\n      }).catch((err) => {\n        // M.proxy(true);\n      });\n    });\n    this.popup_ = popup;\n  }\n\n\n  /**\n   * This functions handle the close/open beahaviour of the sections feature info\n   * @function\n   */\n  toogleSection(e) {\n    let { target } = e;\n    let { parentElement } = target.parentElement;\n    if (!parentElement.classList.contains('m-information-content-info')) {\n      if (parentElement.classList.contains('m-information-content-info-header')) {\n        parentElement = parentElement.parentElement;\n      } else {\n        parentElement = parentElement.parentElement.parentElement;\n      }\n\n      target = parentElement.querySelector('.m-information-content-info-header div:nth-child(1)');\n    }\n\n    const content = parentElement.querySelector('.m-information-content-info-body');\n    if (content.classList.contains('m-content-collapsed')) {\n      content.classList.remove('m-content-collapsed');\n      target.classList.remove('m-arrow-right');\n      target.classList.add('m-arrow-down');\n      const coordinates = this.popup_.getCoordinate();\n      // if (!M.utils.isNullOrEmpty(this.popup_.getImpl().panIntoView)) {\n      this.popup_.getImpl().panIntoView(coordinates);\n      // }\n    } else {\n      content.classList.add('m-content-collapsed');\n      target.classList.add('m-arrow-right');\n      target.classList.remove('m-arrow-down');\n    }\n  }\n\n  /**\n   * Mueve el popup cuando esta configurado\n   * en M.config('MOVE_MAP_EXTRACT', true);\n   * @function\n   */\n  movePopup_(map) {\n    if (this.popupMove_ && window.innerWidth > 768) {\n      const center = M.utils.returnPositionHtmlElement('m-popup', map);\n      setTimeout(() => {\n        map.getMapImpl()\n          .getView()\n          .animate({ zoom: map.getZoom(), center, duration: 1000 });\n\n        // Se vuelve a poner el M.config como estaba\n        if (this.popupMove_) M.config('MOVE_MAP_EXTRACT', true);\n        this.popupMove_ = false;\n      }, 100);\n    }\n  }\n\n  /**\n   * function remove the event 'click'\n   *\n   * @public\n   * @function\n   * @api stable\n   * @export\n   */\n  getElement() {\n    return this.element;\n  }\n\n  parseCSSInfo(text) {\n    let newText = text;\n    try {\n      if (text.indexOf('<style type=\"text/css\">') > -1) {\n        const init = text.split('<style type=\"text/css\">')[0];\n        const style = text.split('<style type=\"text/css\">')[1].split('</style>')[0].trim();\n        const finish = text.split('<style type=\"text/css\">')[1].split('</style>')[1];\n        let newStyle = '';\n        style.split('{').forEach((term) => {\n          if (term.indexOf('}') > -1) {\n            const part1 = term.split('}')[0];\n            let part2 = term.split('}')[1].trim();\n            if (part2.length === 0) {\n              newStyle += `${part1} }`;\n            } else {\n              part2 = part2.split(',').join(', .m-information-content-info .m-information-content-info-body');\n              newStyle += `${part1} } .m-information-content-info .m-information-content-info-body ${part2} {`;\n            }\n          } else {\n            const newTerm = term.split(',').join(', .m-information-content-info .m-information-content-info-body');\n            newStyle += `.m-information-content-info .m-information-content-info-body ${newTerm} {`;\n          }\n        });\n\n        newText = `${init} <style type=\"text/css\"> ${newStyle} </style> ${finish}`;\n      }\n\n      if (newText.indexOf('<link rel=\"stylesheet\"') > -1) {\n        const init = newText.split('<link rel=\"stylesheet\"')[0];\n        const finish = newText.split('<link rel=\"stylesheet\"')[1].split('.css\">')[1];\n        newText = init + finish;\n      }\n    } catch (err) {\n      newText = text;\n    }\n\n    return newText;\n  }\n}\n","/**\n * @module M/control/InformationControl\n */\n\nimport InformationImplControl from '../../impl/ol/js/informationcontrol';\nimport template from '../../templates/information';\nimport { getValue } from './i18n/language';\n\nexport default class InformationControl extends M.Control {\n  /**\n   * @classdesc\n   * Main constructor of the class. Creates a PluginControl\n   * control\n   *\n   * @constructor\n   * @extends {M.Control}\n   * @api\n   */\n  constructor(format, featureCount, buffer, tooltip, opened, order) {\n    if (M.utils.isUndefined(InformationImplControl)) {\n      M.exception('');\n    }\n    const impl = new InformationImplControl(format, featureCount, buffer, opened);\n    super(impl, 'Information');\n    this.tooltip = tooltip;\n    this.order = order;\n  }\n\n  /**\n   * This function creates the view\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the control\n   * @api\n   */\n  createView(map) {\n    return new Promise((success, fail) => {\n      const html = M.template.compileSync(template, {\n        vars: {\n          translations: {\n            tooltip: this.tooltip || getValue('tooltip'),\n          },\n          order: this.order,\n        },\n      });\n      success(html);\n    });\n  }\n\n  /**\n   * This function is called on the control activation\n   *\n   * @public\n   * @function\n   * @api\n   */\n  activate() {\n    this.invokeEscKey();\n    this.getImpl().activate();\n    document.body.style.cursor = 'url(\\'https://i.ibb.co/HBtH3Qs/click-info.png\\') 1 7, auto';\n    document.addEventListener('keyup', this.checkEscKey.bind(this));\n  }\n  /**\n   * This function is called on the control deactivation\n   *\n   * @public\n   * @function\n   * @api\n   */\n  deactivate() {\n    this.getImpl().deactivate();\n    document.body.style.cursor = 'default';\n    document.removeEventListener('keyup', this.checkEscKey.bind(this));\n  }\n\n  checkEscKey(evt) {\n    const contains = document.querySelector('.m-control.m-container.m-information-container').classList.contains('activated');\n    if (evt.key === 'Escape' && contains) {\n      document.removeEventListener('keyup', this.checkEscKey.bind(this));\n      document.querySelector('#m-information-btn').click();\n    }\n  }\n\n  invokeEscKey() {\n    try {\n      document.dispatchEvent(new window.KeyboardEvent('keyup', {\n        key: 'Escape',\n        keyCode: 27,\n        code: '',\n        which: 69,\n        shiftKey: false,\n        ctrlKey: false,\n        metaKey: false,\n      }));\n    } catch (err) {\n      /* eslint-disable no-console */\n      console.error(err);\n    }\n  }\n\n  /**\n   * This function gets activation button\n   *\n   * @public\n   * @function\n   * @param {HTML} html of control\n   * @api\n   */\n  getActivationButton(html) {\n    return html.querySelector('#m-information-btn');\n  }\n\n  /**\n   * This function compares controls\n   *\n   * @public\n   * @function\n   * @param {M.Control} control to compare\n   * @api\n   */\n  equals(control) {\n    return control instanceof InformationControl;\n  }\n}\n","/**\n * @module M/plugin/Information\n */\nimport '../assets/css/information';\nimport '../assets/css/fonts';\nimport api from '../../api';\nimport InformationControl from './informationcontrol';\nimport { getValue } from './i18n/language';\n\nimport es from './i18n/es';\nimport en from './i18n/en';\n\nexport default class Information extends M.Plugin {\n  /**\n   * @classdesc\n   * Main facade plugin object. This class creates a plugin\n   * object which has an implementation Object\n   *\n   * @constructor\n   * @extends {M.Plugin}\n   * @param {Object} impl implementation object\n   * @api stable\n   */\n  constructor(options) {\n    super();\n    /**\n     * Facade of the map\n     * @private\n     * @type {M.Map}\n     */\n    this.map_ = null;\n\n    /**\n     * Array of controls\n     * @private\n     * @type {Array<M.Control>}\n     */\n    this.controls_ = [];\n\n    /**\n     * Position of the plugin\n     *\n     * @private\n     * @type {string} - TL | TR | BL | BR\n     */\n    this.position_ = options.position || 'TR';\n\n    /**\n     * Plugin tooltip\n     *\n     * @private\n     * @type {string}\n     */\n    this.tooltip_ = options.tooltip || getValue('tooltip');\n\n    /**\n     * Information format\n     *\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format || 'text/html';\n\n    /**\n     * Maximum feature count\n     *\n     * @private\n     * @type {Integer}\n     */\n    this.featureCount_ = options.featureCount || 10;\n\n    /**\n     * Buffer for click information\n     *\n     * @private\n     * @type {Integer}\n     */\n    this.buffer_ = options.buffer || 10;\n\n    /**\n     * Information opened all, only if there is one layer, or not opened\n     *\n     * @private\n     * @type {string}\n     */\n    this.opened_ = options.opened || 'closed';\n\n    /**\n     * Plugin name\n     *\n     * @private\n     * @type {string}\n     */\n    this.name_ = 'information';\n\n    /**\n     * Metadata from api.json\n     * @private\n     * @type {Object}\n     */\n    this.metadata_ = api.metadata;\n\n    /**\n     *@private\n     *@type { Number }\n     */\n    this.order = options.order >= -1 ? options.order : null;\n\n    /**\n     * Plugin parameters\n     * @public\n     * @type {object}\n     */\n    this.options = options;\n  }\n\n  /**\n   * Return plugin language\n   *\n   * @public\n   * @function\n   * @param {string} lang type language\n   * @api stable\n   */\n  static getJSONTranslations(lang) {\n    if (lang === 'en' || lang === 'es') {\n      return (lang === 'en') ? en : es;\n    }\n    return M.language.getTranslation(lang).information;\n  }\n\n  /**\n   * This function adds this plugin into the map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map the map to add the plugin\n   * @api stable\n   */\n  addTo(map) {\n    const fc = this.featureCount_;\n    this.ctrl = new InformationControl(\n      this.format_, fc, this.buffer_,\n      this.tooltip_, this.opened_, this.order,\n    );\n    this.controls_.push(this.ctrl);\n    this.map_ = map;\n    this.panel_ = new M.ui.Panel('Information', {\n      className: 'm-plugin-information',\n      position: M.ui.position[this.position_],\n      tooltip: this.tooltip_,\n      collapsedButtonClass: 'g-cartografia-info',\n      order: this.order,\n    });\n    this.panel_.addControls(this.controls_);\n    map.addPanels(this.panel_);\n  }\n\n  /**\n   * Name of the plugin\n   *\n   * @getter\n   * @function\n   */\n  get name() {\n    return 'information';\n  }\n\n  /**\n   * This function returns the position\n   *\n   * @public\n   * @return {string}\n   * @api\n   */\n  get position() {\n    return this.position_;\n  }\n\n  /**\n   * Get the API REST Parameters of the plugin\n   *\n   * @function\n   * @public\n   * @api\n   */\n  getAPIRest() {\n    let cadena = `${this.name_}=${this.position_}*${this.tooltip_}*${this.format_}*${this.featureCount_}`;\n\n    if (this.buffer_ === undefined || this.buffer_ === null || this.buffer_ === '') {\n      cadena += '*';\n    } else {\n      cadena += `*${this.buffer_}`;\n    }\n\n    if (this.opened_ === undefined || this.opened_ === null || this.opened_ === '') {\n      cadena += '*';\n    } else {\n      cadena += `*${this.opened_}`;\n    }\n\n    return cadena;\n  }\n\n  /**\n   * Gets the API REST Parameters in base64 of the plugin\n   *\n   * @function\n   * @public\n   * @api\n   */\n  getAPIRestBase64() {\n    return `${this.name}=base64=${M.utils.encodeBase64(this.options)}`;\n  }\n\n  /**\n   * This function compares plugins\n   *\n   * @public\n   * @function\n   * @param {M.Plugin} plugin to compare\n   * @api\n   */\n  equals(plugin) {\n    return plugin instanceof Information;\n  }\n\n  /**\n   * This function gets metadata plugin\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  getMetadata() {\n    return this.metadata_;\n  }\n\n  /**\n   * This function destroys this plugin\n   *\n   * @public\n   * @function\n   * @api\n   */\n  destroy() {\n    this.ctrl.deactivate();\n    this.map_.removeControls(this.controls_);\n    [this.map_, this.controls_, this.panel_] = [null, null, null];\n  }\n}\n","import M$plugin$Information from './/facade/js/information';\nimport M$control$InformationControl from './/facade/js/informationcontrol';\nimport M$impl$control$InformationControl from './/impl/ol/js/informationcontrol';\n\nif (!window.M.plugin) window.M.plugin = {};\nif (!window.M.control) window.M.control = {};\nif (!window.M.impl) window.M.impl = {};\nif (!window.M.impl.control) window.M.impl.control = {};\nwindow.M.plugin.Information = M$plugin$Information;\nwindow.M.control.InformationControl = M$control$InformationControl;\nwindow.M.impl.control.InformationControl = M$impl$control$InformationControl;\n"],"sourceRoot":""}