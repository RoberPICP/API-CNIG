{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/templates/information_popup.html","webpack:///./src/templates/information_layers.html","webpack:///./src/templates/information.html","webpack:///./src/facade/js/i18n/language.js","webpack:///./src/impl/ol/js/informationcontrol.js","webpack:///./src/facade/js/informationcontrol.js","webpack:///./src/facade/js/information.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","translations","en","es","getLang","res","M","language","getTranslation","lang","information","getValue","keyPath","translation","utils","isNullOrEmpty","console","warn","split","reduce","prev","current","regExs","gsResponse","msNewFeature","gsNewFeature","gsGeometry","msGeometry","msUnsupportedFormat","POPUP_TITLE","InformationControl","impl","Control","format","featureCount","buffer","opened","format_","normalize","featureCount_","buffer_","opened_","facadeMap_","info","formato","infoContainer","document","createElement","innerHTML","content","Array","forEach","querySelectorAll","element","trim","length","test","ol","WFS","readFeatures","unsupported","map","html","this","getMapImpl","addControl","addOnClickEvent_","deleteOnClickEvent_","deactivate","removeControl","Observable","unByKey","clickEventKey_","querySelector","classList","remove","olMap","on","e","buildUrl_","dialog","add","dialogParam","evt","wmsInfoURLS","buildWMSInfoURL","getWMS","wmtsInfoURLS","buildWMTSInfoURL","getWMTS","layerNamesUrls","filter","layer","showInfoFromURL_","coordinate","wmsLayers","viewResolution","getView","getResolution","srs","getProjection","code","param","olLayer","getImpl","getOL3Layer","isVisible","isQueryable","informationParams","INFO_FORMAT","FEATURE_COUNT","source","getSource","coord","url","BUFFER","getFeatureInfoUrl","legend","wmtsLayers","infoFormat","getZoom","replace","layerName","formatedInfo","features","feature","attr","getKeys","beautifyAttribute","ilen","attrName","attrValue","txtToHtmlGeoserver","txtToHtmlMapserver","infoVar","attrValuesString","attrValueString","indexOf","htmlHeader","nextAttrValueString","htmlAsText","template","compileSync","informationPopupTemplate","vars","parseToHtml","infos","String","contFull","loadingInfoTab","icon","title","popup","getPopup","Popup","addTab","addPopup","getTabs","some","tab","removePopup","layerNameUrl","remote","then","response","parseCSSInfo","text","insert","formatInfo","push","unsupportedFormat","removeTab","popupContent","informationLayersTemplate","layers","info_of","listeners","selector","all","type","callback","toogleSection","setTimeout","elem","click","err","popup_","target","parentElement","contains","coordinates","getCoordinate","panIntoView","newText","init","style","finish","newStyle","term","part1","part2","join","newTerm","tooltip","isUndefined","InformationImplControl","exception","Promise","success","fail","invokeEscKey","activate","body","cursor","addEventListener","checkEscKey","removeEventListener","dispatchEvent","window","KeyboardEvent","keyCode","which","shiftKey","ctrlKey","metaKey","error","control","Information","Plugin","options","map_","controls_","position_","position","tooltip_","name_","metadata_","api","metadata","fc","ctrl","panel_","ui","Panel","className","collapsedButtonClass","addControls","addPanels","cadena","undefined","plugin","removeControls","M$plugin$Information","M$control$InformationControl","M$impl$control$InformationControl"],"mappings":"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","file":"information.ol.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 7);\n","module.exports = \"<div class=\\\"m-information-content\\\">\\n   {{{info}}}\\n</div>\\n\";","module.exports = \"  {{#each layers}}\\n      <div class='m-information-content-info'>\\n          <div class='m-information-content-info-header'>\\n              <div class=\\\"m-arrow-right\\\"></div>\\n              <div>\\n                  <p> {{../info_of}} <strong>{{layerName}}</strong></p>\\n              </div>\\n          </div>\\n          <div class='m-information-content-info-body m-content-collapsed'>\\n              {{{formatedInfo}}}\\n          </div>\\n      </div>\\n  {{/each}}\\n\";","module.exports = \"<div class=\\\"m-control m-container m-information-container\\\">\\n  <button id='m-information-btn' class=\\\"m-information-btn g-cartografia-info\\\" title=\\\"{{translations.tooltip}}\\\"></button>\\n</div>\\n\";","import en from './en';\nimport es from './es';\n\n/**\n * Default object with es and en translate.\n *\n * @const\n * @type {object}\n */\nconst translations = {\n  en,\n  es,\n};\n\nconst getLang = () => {\n  let res = 'es';\n  if (typeof M.language.getLang === 'function') {\n    res = M.language.getLang();\n  }\n\n  return res;\n};\n\n/**\n * This function sets a new language translate.\n * @param {string} lang\n * @param {JSON} json\n * @public\n * @api\n */\nexport const addTranslation = (lang, json) => {\n  translations[lang] = json;\n};\n\n/**\n * This function gets a language translate.\n *\n * @param {string} lang\n * @return {JSON}\n * @public\n * @api\n */\nexport const getTranslation = (lang) => {\n  if (lang === 'es' || lang === 'en') {\n    return translations[lang];\n  }\n  return M.language.getTranslation(lang).information;\n};\n\n/**\n * This function gets a language value from key\n *\n * @public\n * @param {string}\n * @param {string}\n * @return {string}\n * @public\n * @api\n */\n\nexport const getValue = (keyPath, lang = getLang()) => {\n  const translation = getTranslation(lang);\n  let value = '';\n  if (M.utils.isNullOrEmpty(translation)) {\n    /* eslint-disable no-console */\n    console.warn(`The translation '${lang}' has not been defined.`);\n  } else {\n    value = keyPath.split('.').reduce((prev, current) => prev[current], translation);\n  }\n\n  return value;\n};\n","/**\n * @module M/impl/control/InformationControl\n */\n\nimport informationPopupTemplate from '../../../templates/information_popup';\nimport informationLayersTemplate from '../../../templates/information_layers';\nimport { getValue } from '../../../facade/js/i18n/language';\n\n/**\n * Regular expressions of Information\n * @type {object}\n * @public\n * @api\n */\nconst regExs = {\n  gsResponse: /^results[\\w\\s\\S]*'http:/i,\n  msNewFeature: /feature(\\s*)(\\w+)(\\s*):/i,\n  gsNewFeature: /#newfeature#/,\n  gsGeometry: /geom$/i,\n  msGeometry: /boundedby$/i,\n  msUnsupportedFormat: /error(.*)unsupported(.*)info_format/i,\n};\n\nconst POPUP_TITLE = getValue('title');\n\nexport default class InformationControl extends M.impl.Control {\n  constructor(format, featureCount, buffer, opened) {\n    super({});\n\n    /**\n     * Format to request information\n     *\n     * @type {string}\n     * @private\n     */\n    this.format_ = format;\n\n    if ((M.utils.normalize(this.format_) === 'plain') || (M.utils.normalize(this.format_) === 'text/plain')) {\n      this.format_ = 'text/plain';\n    } else if ((M.utils.normalize(this.format_) === 'gml') || (M.utils.normalize(this.format_) === 'application/vnd.ogc.gml')) {\n      this.format_ = 'application/vnd.ogc.gml';\n    } else {\n      this.format_ = 'text/html';\n    }\n\n    /**\n     * Maximum feature count\n     *\n     * @private\n     * @type {Integer}\n     */\n    this.featureCount_ = featureCount;\n\n    /**\n     * Buffer for click information\n     *\n     * @private\n     * @type {Integer}\n     */\n    this.buffer_ = buffer;\n\n    /**\n     * Information opened all, only if there is one layer, or not opened\n     *\n     * @private\n     * @type {string}\n     */\n    this.opened_ = opened;\n\n    /**\n     * Facade of the map\n     * @private\n     * @type {M.Map}\n     */\n    this.facadeMap_ = null;\n  }\n\n  /**\n   * This function adds the control to the specified map\n   *\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the plugin\n   * @param {HTMLElement} html of the plugin\n   * @api\n   */\n  addTo(map, html) {\n    super.addTo(map, html);\n    this.facadeMap_ = map;\n    map.getMapImpl().addControl(this);\n  }\n\n  /**\n   * This function adds the event singleclick to the specified map\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  activate() {\n    this.addOnClickEvent_();\n  }\n\n  /**\n   * This function remove the event singleclick to the specified map\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  deactivate() {\n    this.deleteOnClickEvent_();\n  }\n\n  /**\n   * This function destroys this control, cleaning the HTML\n   * and unregistering all events\n   *\n   * @public\n   * @function\n   * @api\n   * @export\n   */\n  destroy() {\n    this.deactivate();\n    this.facadeMap_.getMapImpl().removeControl(this);\n    this.facadeMap_ = null;\n  }\n\n  /**\n   * This function remove the event singleclick to the specified map\n   *\n   * @private\n   * @function\n   */\n  deleteOnClickEvent_() {\n    ol.Observable.unByKey(this.clickEventKey_);\n    document.querySelector('.m-control.m-container.m-information-container').classList.remove('activated');\n  }\n\n  /**\n   * This function adds the event singleclick to the specified map\n   *\n   * @private\n   * @function\n   */\n  addOnClickEvent_() {\n    const olMap = this.facadeMap_.getMapImpl();\n    this.clickEventKey_ = olMap.on('singleclick', e => this.buildUrl_(M.dialog, e));\n    document.querySelector('.m-control.m-container.m-information-container').classList.add('activated');\n  }\n\n  /**\n   * This function builds the query URL and show results\n   *\n   * @private\n   * @function\n   * @param {ol.MapBrowserPointerEvent} evt - Browser point event\n   */\n  buildUrl_(dialogParam, evt) {\n    this.evt = evt;\n    const olMap = this.facadeMap_.getMapImpl();\n    const wmsInfoURLS = this.buildWMSInfoURL(this.facadeMap_.getWMS());\n    const wmtsInfoURLS = this.buildWMTSInfoURL(this.facadeMap_.getWMTS());\n    const layerNamesUrls = [...wmtsInfoURLS, ...wmsInfoURLS]\n      .filter(layer => !M.utils.isNullOrEmpty(layer));\n    if (layerNamesUrls.length > 0) {\n      this.showInfoFromURL_(layerNamesUrls, evt.coordinate, olMap);\n    } else {\n      dialogParam.info(getValue('not_queryable'));\n    }\n  }\n\n  /**\n   * @function\n   * @public\n   * @api\n   */\n  buildWMSInfoURL(wmsLayers) {\n    const olMap = this.facadeMap_.getMapImpl();\n    const viewResolution = olMap.getView().getResolution();\n    const srs = this.facadeMap_.getProjection().code;\n    return wmsLayers.map((layer) => {\n      const olLayer = layer.getImpl().getOL3Layer();\n      let param;\n      if (layer.isVisible() && layer.isQueryable() && !M.utils.isNullOrEmpty(olLayer)) {\n        param = {};\n        const informationParams = {\n          INFO_FORMAT: this.format_,\n          FEATURE_COUNT: this.featureCount_,\n        };\n        const regexBuffer = /buffer/i;\n        const source = olLayer.getSource();\n        const coord = this.evt.coordinate;\n        // const url = source.getGetFeatureInfoUrl(coord, viewResolution, srs, informationParams);\n        if (!regexBuffer.test(layer.url)) {\n          informationParams.BUFFER = this.buffer_;\n        }\n        const url = source.getFeatureInfoUrl(coord, viewResolution, srs, informationParams);\n        param = { layer: layer.legend || layer.name, url };\n      }\n      return param;\n    });\n  }\n\n  /**\n   * @function\n   * @public\n   * @api\n   */\n  buildWMTSInfoURL(wmtsLayers) {\n    return wmtsLayers.map((layer) => {\n      let param;\n      if (layer.isVisible() && layer.isQueryable() && !M.utils.isNullOrEmpty(layer)) {\n        param = {};\n        const infoFormat = this.format_;\n        const coord = this.evt.coordinate;\n        const url = layer.getFeatureInfoUrl(coord, this.facadeMap_.getZoom(), infoFormat).replace('row=-', 'row=');\n        param = { layer: layer.legend || layer.name, url };\n      }\n      return param;\n    });\n  }\n\n  /**\n   * This function specifies whether the information is valid\n   *\n   * @param {string} info - Information to validate\n   * @param {string} formato - Specific format to validate\n   * @returns {boolean} res - Is valid or not format\n   * @private\n   * @function\n   */\n  static insert(info, formato) {\n    let res = false;\n    switch (formato) {\n      case 'text/html':\n        // ex\n        const infoContainer = document.createElement('div');\n        infoContainer.innerHTML = info;\n        // content\n        let content = '';\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('body'), (element) => {\n          content += element.innerHTML.trim();\n        });\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('div'), (element) => {\n          content += element.innerHTML.trim();\n        });\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('table'), (element) => {\n          content += element.innerHTML.trim();\n        });\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('b'), (element) => {\n          content += element.innerHTML.trim();\n        });\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('span'), (element) => {\n          content += element.innerHTML.trim();\n        });\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('input'), (element) => {\n          content += element.innerHTML.trim();\n        });\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('a'), (element) => {\n          content += element.innerHTML.trim();\n        });\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('img'), (element) => {\n          content += element.innerHTML.trim();\n        });\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('p'), (element) => {\n          content += element.innerHTML.trim();\n        });\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('ul'), (element) => {\n          content += element.innerHTML.trim();\n        });\n        Array.prototype.forEach.call(infoContainer.querySelectorAll('li'), (element) => {\n          content += element.innerHTML.trim();\n        });\n\n        if ((content.length > 0) && !/WMS\\s+server\\s+error/i.test(info)) {\n          res = true;\n        }\n        break;\n\n      case 'application/vnd.ogc.gml': // ol.format.GML (http://openlayers.org/en/v3.9.0/apidoc/ol.format.GML.html)\n        const formater = new ol.format.WFS();\n        const features = formater.readFeatures(info);\n        res = (features.length > 0);\n        break;\n\n      case 'text/plain': // exp reg\n        if (!/returned\\s+no\\s+results/i.test(info) && !/features\\s+were\\s+found/i.test(info) && !/:$/i.test(info)) {\n          res = true;\n        }\n        break;\n      default:\n    }\n    return res;\n  }\n\n  /**\n   * This function formats the response\n   *\n   * @param {string} info - Information to formatting\n   * @param {string} formato - Specific format\n   * @param {string} layername - Layer name\n   * @returns {string} information - Formatted information\n   * @private\n   * @function\n   */\n  formatInfo(info, formato, layerName) {\n    let formatedInfo = null;\n    switch (formato) {\n      case 'text/html': // ex\n        formatedInfo = info;\n        break;\n      case 'application/vnd.ogc.gml': // ol.format.GML (http://openlayers.org/en/v3.9.0/apidoc/ol.format.GML.html)\n        // let formater = new ol.format.GML();\n        // let feature = formater.readFeatures(info)[0];\n        const formater = new ol.format.WFS();\n        const features = formater.readFeatures(info);\n        formatedInfo = '';\n        features.forEach((feature) => {\n          const attr = feature.getKeys();\n          formatedInfo += '<div class=\\'divinfo\\'>';\n          formatedInfo += `<table class='mapea-table'><tbody><tr><td class='header' colspan='3'>' ${M.utils.beautifyAttribute(layerName)} '</td></tr>'`;\n          for (let i = 0, ilen = attr.length; i < ilen; i += 1) {\n            const attrName = attr[i];\n            const attrValue = feature.get(attrName);\n\n            formatedInfo += '<tr><td class=\"key\"><b>';\n            formatedInfo += M.utils.beautifyAttribute(attrName);\n            formatedInfo += '</b></td><td class=\"value\">';\n            formatedInfo += attrValue;\n            formatedInfo += '</td></tr>';\n          }\n          formatedInfo += '</tbody></table></div>';\n        });\n        break;\n      case 'text/plain': // exp reg\n        if (regExs.gsResponse.test(info)) {\n          formatedInfo = this.txtToHtmlGeoserver(info, layerName);\n        } else {\n          formatedInfo = this.txtToHtmlMapserver(info, layerName);\n        }\n        break;\n      default:\n    }\n    return formatedInfo;\n  }\n\n  /**\n   * This function indicates whether the format is accepted by the layer - Specific format text/html\n   *\n   * @param {string} info - Response to consult layer\n   * @param {string} formato - Specific format\n   * @returns {boolean} unsupported - It indicates whether the format is accepted\n   * @private\n   * @function\n   */\n  static unsupportedFormat(info, formato) {\n    let unsupported = false;\n    if (formato === 'text/html') {\n      unsupported = regExs.msUnsupportedFormat.test(info);\n    }\n    return unsupported;\n  }\n\n  /**\n   * This function return formatted information. Specific Geoserver\n   *\n   * @private\n   * @function\n   * @param {string} info - Information to formatting\n   * @param {string} layername - Layer name\n   * @returns {string} html - Information formated\n   */\n  txtToHtmlGeoserver(info, layerName) {\n    // get layer name from the header\n    // let layerName = info.replace(/[\\w\\s\\S]*\\:(\\w*)\\'\\:[\\s\\S\\w]*/i, \"$1\");\n    // remove header\n    let infoVar = info;\n\n    infoVar = infoVar.replace(/[\\w\\s\\S]*':/i, '');\n\n    infoVar = infoVar.replace(/---(-*)(n+)---(-*)/g, '#newfeature#');\n\n    const attrValuesString = infoVar.split('\\n');\n\n    let html = '<div class=\\'divinfo\\'>';\n\n    // build the table\n    html += `<table class='mapea-table'><tbody><tr><td class='header' colspan='3'>${M.utils.beautifyAttribute(layerName)}</td></tr>`;\n\n    for (let i = 0, ilen = attrValuesString.length; i < ilen; i += 1) {\n      const attrValueString = attrValuesString[i].trim();\n      if (attrValueString.indexOf('=') !== -1) {\n        const attrValue = attrValueString.split('=');\n        const attr = attrValue[0].trim();\n        let value = '-';\n        if (attrValue.length > 1) {\n          value = attrValue[1].trim();\n          if (value.length === 0 || value === 'null') {\n            value = '-';\n          }\n        }\n\n        if (regExs.gsGeometry.test(attr) === false) {\n          html += '<tr><td class=\"key\"><b>';\n          html += M.utils.beautifyAttribute(attr);\n          html += '</b></td><td class=\"value\">';\n          html += value;\n          html += '</td></tr>';\n        }\n      } else if (regExs.gsNewFeature.test(attrValueString)) {\n        // set new header\n        html += `<tr><td class=\"header\" colspan=\"3\">${M.utils.beautifyAttribute(layerName)}</td></tr>`;\n      }\n    }\n\n    html += '</tbody></table></div>';\n\n    return html;\n  }\n\n  /**\n   * This function return formatted information. Specific Mapserver\n   *\n   * @private\n   * @function\n   * @param {string} info - Information to formatting\n   * @returns {string} html - Information formated\n   */\n  txtToHtmlMapserver(info) {\n    let infoVar = info;\n    // remove header\n    infoVar = infoVar.replace(/[\\w\\s\\S]*(layer)/i, '$1');\n\n    // get layer name\n    const layerName = infoVar.replace(/layer(\\s*)'(\\w+)'[\\w\\s\\S]*/i, '$2');\n\n    // remove layer name\n    infoVar = infoVar.replace(/layer(\\s*)'(\\w+)'([\\w\\s\\S]*)/i, '$3');\n\n    // remove feature number\n    infoVar = infoVar.replace(/feature(\\s*)(\\w*)(\\s*)(:)([\\w\\s\\S]*)/i, '$5');\n\n    // remove simple quotes\n    infoVar = infoVar.replace(/'/g, '');\n\n    // replace the equal (=) with (;)\n    infoVar = infoVar.replace(/=/g, ';');\n\n    const attrValuesString = infoVar.split('\\n');\n\n    let html = '';\n    const htmlHeader = `<table class='mapea-table'><tbody><tr><td class='header' colspan='3'>${M.utils.beautifyAttribute(layerName)}</td></tr>`;\n\n    for (let i = 0, ilen = attrValuesString.length; i < ilen; i += 1) {\n      const attrValueString = attrValuesString[i].trim();\n      const nextAttrValueString = attrValuesString[i] ? attrValuesString[i].trim() : '';\n\n      const attrValue = attrValueString.split(';');\n      const attr = attrValue[0].trim();\n      let value = '-';\n      if (attrValue.length > 1) {\n        value = attrValue[1].trim();\n        if (value.length === 0) {\n          value = '-';\n        }\n      }\n\n      if (attr.length > 0) {\n        if (regExs.msNewFeature.test(attr)) {\n          if ((nextAttrValueString.length > 0) &&\n            !regExs.msNewFeature.test(nextAttrValueString)) {\n            // set new header\n            html += `<tr><td class='header' colspan='3'>${M.utils.beautifyAttribute(layerName)}</td><td></td></tr>`;\n          }\n        } else {\n          html += '<tr><td class=\"key\"><b>';\n          html += M.utils.beautifyAttribute(attr);\n          html += '</b></td><td class=\"value\">';\n          html += value;\n          html += '</td></tr>';\n        }\n      }\n    }\n\n    if (html.length > 0) {\n      html = `${htmlHeader + html}</tbody></table>`;\n    }\n\n    return html;\n  }\n\n  /**\n   * This function displays information in a popup\n   *\n   * @private\n   * @function\n   * @param {array<object>} layerNamesUrls - Consulted layers\n   * @param {array} coordinate - Coordinate position onClick\n   * @param {olMap} olMap - Map\n\n   */\n  showInfoFromURL_(layerNamesUrls, coordinate, olMap) {\n    const htmlAsText = M.template.compileSync(informationPopupTemplate, {\n      vars: {\n        info: getValue('querying'),\n      },\n      parseToHtml: false,\n    });\n\n    const infos = [];\n    const formato = String(this.format_);\n    let contFull = 0;\n    const loadingInfoTab = {\n      icon: 'g-cartografia-info',\n      title: POPUP_TITLE,\n      content: htmlAsText,\n    };\n    let popup = this.facadeMap_.getPopup();\n\n    if (M.utils.isNullOrEmpty(popup)) {\n      popup = new M.Popup();\n      popup.addTab(loadingInfoTab);\n      this.facadeMap_.addPopup(popup, coordinate);\n    } else {\n      const hasExternalContent =\n        popup.getTabs().some(tab => tab.title !== POPUP_TITLE);\n      if (!hasExternalContent) {\n        this.facadeMap_.removePopup();\n        popup = new M.Popup();\n        popup.addTab(loadingInfoTab);\n        this.facadeMap_.addPopup(popup, coordinate);\n      } else {\n        popup.addTab(loadingInfoTab);\n      }\n    }\n    layerNamesUrls.forEach((layerNameUrl) => {\n      const url = layerNameUrl.url.replace('row=-', 'row=').replace('col=-', 'col=');\n      const layerName = layerNameUrl.layer;\n      // M.proxy(false);\n      M.remote.get(url).then((response) => {\n        popup = this.facadeMap_.getPopup();\n        if (response.code === 200) {\n          const info = this.parseCSSInfo(response.text);\n          if (InformationControl.insert(info, formato) === true) {\n            const formatedInfo = this.formatInfo(info, formato, layerName);\n            infos.push({ formatedInfo, layerName });\n          } else if (InformationControl.unsupportedFormat(info, formato)) {\n            infos.push({\n              formatedInfo: getValue('unsupported_format'),\n              layerName,\n            });\n          }\n        }\n\n        contFull += 1;\n        if (layerNamesUrls.length === contFull && !M.utils.isNullOrEmpty(popup)) {\n          popup.removeTab(loadingInfoTab);\n          if (infos.length === 0) {\n            popup.addTab({\n              icon: 'g-cartografia-info',\n              title: POPUP_TITLE,\n              content: getValue('no_info'),\n            });\n          } else {\n            const popupContent = M.template.compileSync(informationLayersTemplate, {\n              vars: {\n                layers: infos,\n                info_of: getValue('info_of'),\n              },\n              parseToHtml: false,\n            });\n            popup.addTab({\n              icon: 'g-cartografia-info',\n              title: POPUP_TITLE,\n              content: popupContent,\n              listeners: [{\n                selector: '.m-information-content-info div.m-arrow-right',\n                all: true,\n                type: 'click',\n                callback: e => this.toogleSection(e),\n              }, {\n                selector: '.m-information-content-info div:nth-child(2) p',\n                all: true,\n                type: 'click',\n                callback: e => this.toogleSection(e),\n              }],\n            });\n\n            if (this.opened_ === 'all') {\n              setTimeout(() => {\n                document.querySelectorAll('div.m-arrow-right').forEach((elem) => {\n                  elem.click();\n                });\n              }, 100);\n            } else if (this.opened_ === 'one' && layerNamesUrls.length === 1) {\n              setTimeout(() => {\n                document.querySelector('div.m-arrow-right').click();\n              }, 100);\n            }\n          }\n          // M.proxy(true);\n        }\n      }).catch((err) => {\n        // M.proxy(true);\n      });\n    });\n    this.popup_ = popup;\n  }\n\n  /**\n   * This functions handle the close/open beahaviour of the sections feature info\n   * @function\n   */\n  toogleSection(e) {\n    let { target } = e;\n    let { parentElement } = target.parentElement;\n    if (!parentElement.classList.contains('m-information-content-info')) {\n      if (parentElement.classList.contains('m-information-content-info-header')) {\n        parentElement = parentElement.parentElement;\n      } else {\n        parentElement = parentElement.parentElement.parentElement;\n      }\n\n      target = parentElement.querySelector('.m-information-content-info-header div:nth-child(1)');\n    }\n\n    const content = parentElement.querySelector('.m-information-content-info-body');\n    if (content.classList.contains('m-content-collapsed')) {\n      content.classList.remove('m-content-collapsed');\n      target.classList.remove('m-arrow-right');\n      target.classList.add('m-arrow-down');\n      const coordinates = this.popup_.getCoordinate();\n      // if (!M.utils.isNullOrEmpty(this.popup_.getImpl().panIntoView)) {\n      this.popup_.getImpl().panIntoView(coordinates);\n      // }\n    } else {\n      content.classList.add('m-content-collapsed');\n      target.classList.add('m-arrow-right');\n      target.classList.remove('m-arrow-down');\n    }\n  }\n\n  /**\n   * function remove the event 'click'\n   *\n   * @public\n   * @function\n   * @api stable\n   * @export\n   */\n  getElement() {\n    return this.element;\n  }\n\n  parseCSSInfo(text) {\n    let newText = text;\n    try {\n      if (text.indexOf('<style type=\"text/css\">') > -1) {\n        const init = text.split('<style type=\"text/css\">')[0];\n        const style = text.split('<style type=\"text/css\">')[1].split('</style>')[0].trim();\n        const finish = text.split('<style type=\"text/css\">')[1].split('</style>')[1];\n        let newStyle = '';\n        style.split('{').forEach((term) => {\n          if (term.indexOf('}') > -1) {\n            const part1 = term.split('}')[0];\n            let part2 = term.split('}')[1].trim();\n            if (part2.length === 0) {\n              newStyle += `${part1} }`;\n            } else {\n              part2 = part2.split(',').join(', .m-information-content-info .m-information-content-info-body');\n              newStyle += `${part1} } .m-information-content-info .m-information-content-info-body ${part2} {`;\n            }\n          } else {\n            const newTerm = term.split(',').join(', .m-information-content-info .m-information-content-info-body');\n            newStyle += `.m-information-content-info .m-information-content-info-body ${newTerm} {`;\n          }\n        });\n\n        newText = `${init} <style type=\"text/css\"> ${newStyle} </style> ${finish}`;\n      }\n\n      if (newText.indexOf('<link rel=\"stylesheet\"') > -1) {\n        const init = newText.split('<link rel=\"stylesheet\"')[0];\n        const finish = newText.split('<link rel=\"stylesheet\"')[1].split('.css\">')[1];\n        newText = init + finish;\n      }\n    } catch (err) {\n      newText = text;\n    }\n\n    return newText;\n  }\n}\n","/**\n * @module M/control/InformationControl\n */\n\nimport InformationImplControl from '../../impl/ol/js/informationcontrol';\nimport template from '../../templates/information';\nimport { getValue } from './i18n/language';\n\nexport default class InformationControl extends M.Control {\n  /**\n   * @classdesc\n   * Main constructor of the class. Creates a PluginControl\n   * control\n   *\n   * @constructor\n   * @extends {M.Control}\n   * @api\n   */\n  constructor(format, featureCount, buffer, tooltip, opened) {\n    if (M.utils.isUndefined(InformationImplControl)) {\n      M.exception('');\n    }\n    const impl = new InformationImplControl(format, featureCount, buffer, opened);\n    super(impl, 'Information');\n    this.tooltip = tooltip;\n  }\n\n  /**\n   * This function creates the view\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the control\n   * @api\n   */\n  createView(map) {\n    return new Promise((success, fail) => {\n      const html = M.template.compileSync(template, {\n        vars: {\n          translations: {\n            tooltip: this.tooltip || getValue('tooltip'),\n          },\n        },\n      });\n      success(html);\n    });\n  }\n\n  /**\n   * This function is called on the control activation\n   *\n   * @public\n   * @function\n   * @api\n   */\n  activate() {\n    this.invokeEscKey();\n    this.getImpl().activate();\n    document.body.style.cursor = 'url(\\'https://i.ibb.co/HBtH3Qs/click-info.png\\') 1 7, auto';\n    document.addEventListener('keyup', this.checkEscKey.bind(this));\n  }\n  /**\n   * This function is called on the control deactivation\n   *\n   * @public\n   * @function\n   * @api\n   */\n  deactivate() {\n    this.getImpl().deactivate();\n    document.body.style.cursor = 'default';\n    document.removeEventListener('keyup', this.checkEscKey.bind(this));\n  }\n\n  checkEscKey(evt) {\n    const contains = document.querySelector('.m-control.m-container.m-information-container').classList.contains('activated');\n    if (evt.key === 'Escape' && contains) {\n      document.removeEventListener('keyup', this.checkEscKey.bind(this));\n      document.querySelector('#m-information-btn').click();\n    }\n  }\n\n  invokeEscKey() {\n    try {\n      document.dispatchEvent(new window.KeyboardEvent('keyup', {\n        key: 'Escape',\n        keyCode: 27,\n        code: '',\n        which: 69,\n        shiftKey: false,\n        ctrlKey: false,\n        metaKey: false,\n      }));\n    } catch (err) {\n      /* eslint-disable no-console */\n      console.error(err);\n    }\n  }\n\n  /**\n   * This function gets activation button\n   *\n   * @public\n   * @function\n   * @param {HTML} html of control\n   * @api\n   */\n  getActivationButton(html) {\n    return html.querySelector('#m-information-btn');\n  }\n\n  /**\n   * This function compares controls\n   *\n   * @public\n   * @function\n   * @param {M.Control} control to compare\n   * @api\n   */\n  equals(control) {\n    return control instanceof InformationControl;\n  }\n}\n","/**\n * @module M/plugin/Information\n */\nimport '../assets/css/information';\nimport api from '../../api';\nimport InformationControl from './informationcontrol';\nimport { getValue } from './i18n/language';\n\nimport es from './i18n/es';\nimport en from './i18n/en';\n\nexport default class Information extends M.Plugin {\n  /**\n   * @classdesc\n   * Main facade plugin object. This class creates a plugin\n   * object which has an implementation Object\n   *\n   * @constructor\n   * @extends {M.Plugin}\n   * @param {Object} impl implementation object\n   * @api stable\n   */\n  constructor(options) {\n    super();\n    /**\n     * Facade of the map\n     * @private\n     * @type {M.Map}\n     */\n    this.map_ = null;\n\n    /**\n     * Array of controls\n     * @private\n     * @type {Array<M.Control>}\n     */\n    this.controls_ = [];\n\n    /**\n     * Position of the plugin\n     *\n     * @private\n     * @type {string} - TL | TR | BL | BR\n     */\n    this.position_ = options.position || 'TR';\n\n    /**\n     * Plugin tooltip\n     *\n     * @private\n     * @type {string}\n     */\n    this.tooltip_ = options.tooltip || getValue('tooltip');\n\n    /**\n     * Information format\n     *\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format || 'text/html';\n\n    /**\n     * Maximum feature count\n     *\n     * @private\n     * @type {Integer}\n     */\n    this.featureCount_ = options.featureCount || 10;\n\n    /**\n     * Buffer for click information\n     *\n     * @private\n     * @type {Integer}\n     */\n    this.buffer_ = options.buffer || 10;\n\n    /**\n     * Information opened all, only if there is one layer, or not opened\n     *\n     * @private\n     * @type {string}\n     */\n    this.opened_ = options.opened || 'closed';\n\n    /**\n     * Plugin name\n     *\n     * @private\n     * @type {string}\n     */\n    this.name_ = 'information';\n\n    /**\n     * Metadata from api.json\n     * @private\n     * @type {Object}\n     */\n    this.metadata_ = api.metadata;\n  }\n\n  /**\n   * Return plugin language\n   *\n   * @public\n   * @function\n   * @param {string} lang type language\n   * @api stable\n   */\n  static getJSONTranslations(lang) {\n    if (lang === 'en' || lang === 'es') {\n      return (lang === 'en') ? en : es;\n    }\n    return M.language.getTranslation(lang).information;\n  }\n\n  /**\n   * This function adds this plugin into the map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map the map to add the plugin\n   * @api stable\n   */\n  addTo(map) {\n    const fc = this.featureCount_;\n    this.ctrl = new InformationControl(this.format_, fc, this.buffer_, this.tooltip_, this.opened_);\n    this.controls_.push(this.ctrl);\n    this.map_ = map;\n    this.panel_ = new M.ui.Panel('panelInformation', {\n      className: 'm-plugin-information',\n      position: M.ui.position[this.position_],\n      tooltip: this.tooltip_,\n      collapsedButtonClass: 'g-cartografia-info',\n    });\n    this.panel_.addControls(this.controls_);\n    map.addPanels(this.panel_);\n  }\n\n  /**\n   * Name of the plugin\n   *\n   * @getter\n   * @function\n   */\n  get name() {\n    return 'information';\n  }\n\n  /**\n   * This function returns the position\n   *\n   * @public\n   * @return {string}\n   * @api\n   */\n  get position() {\n    return this.position_;\n  }\n\n  /**\n   * Get the API REST Parameters of the plugin\n   *\n   * @function\n   * @public\n   * @api\n   */\n  getAPIRest() {\n    let cadena = `${this.name_}=${this.position_}*${this.tooltip_}*${this.format_}*${this.featureCount_}`;\n\n    if (this.buffer_ === undefined || this.buffer_ === null || this.buffer_ === '') {\n      cadena += '*';\n    } else {\n      cadena += `*${this.buffer_}`;\n    }\n\n    if (this.opened_ === undefined || this.opened_ === null || this.opened_ === '') {\n      cadena += '*';\n    } else {\n      cadena += `*${this.opened_}`;\n    }\n\n    return cadena;\n  }\n\n  /**\n   * This function compares plugins\n   *\n   * @public\n   * @function\n   * @param {M.Plugin} plugin to compare\n   * @api\n   */\n  equals(plugin) {\n    return plugin instanceof Information;\n  }\n\n  /**\n   * This function gets metadata plugin\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  getMetadata() {\n    return this.metadata_;\n  }\n\n  /**\n   * This function destroys this plugin\n   *\n   * @public\n   * @function\n   * @api\n   */\n  destroy() {\n    this.ctrl.deactivate();\n    this.map_.removeControls(this.controls_);\n    [this.map_, this.controls_, this.panel_] = [null, null, null];\n  }\n}\n","import M$plugin$Information from './/facade/js/information';\nimport M$control$InformationControl from './/facade/js/informationcontrol';\nimport M$impl$control$InformationControl from './/impl/ol/js/informationcontrol';\n\nif (!window.M.plugin) window.M.plugin = {};\nif (!window.M.control) window.M.control = {};\nif (!window.M.impl) window.M.impl = {};\nif (!window.M.impl.control) window.M.impl.control = {};\nwindow.M.plugin.Information = M$plugin$Information;\nwindow.M.control.InformationControl = M$control$InformationControl;\nwindow.M.impl.control.InformationControl = M$impl$control$InformationControl;\n"],"sourceRoot":""}