{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/templates/ignsearch.html","webpack:///./src/templates/results.html","webpack:///./src/impl/ol/js/ignsearchcontrol.js","webpack:///./src/facade/js/ignsearchcontrol.js","webpack:///./src/facade/js/i18n/language.js","webpack:///./src/facade/js/constants.js","webpack:///./src/facade/js/ignsearch.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","typingTimer","IGNSearchControl","M","impl","Control","map","html","scale","wmts3857scales","newScale","reduce","prev","curr","Math","abs","olView","this","facadeMap_","getMapImpl","getView","newResolution","getMaxResolution","indexOf","setResolution","coordinates","source","destiny","ol","proj","getTransform","transformFunc","translations","en","es","getLang","res","language","getTranslation","lang","ignsearch","getValue","keyPath","translation","utils","isNullOrEmpty","console","warn","split","current","servicesToSearch","maxResults","noProcess","countryCode","urlCandidates","urlFind","urlReverse","urlPrefix","urlAssistant","urlDispatcher","resultVisibility","reverse","locationID","requestStreet","geocoderCoords","zoom","searchPosition","pointStyle","nomenclatorSearchType","isUndefined","IGNSearchImplControl","exception","resultVisibility_","reverseActivated","urlParse","destroyMapLayers","Promise","success","template","compileSync","vars","deleteresults","obtener","direccion","tooltip_input","resultsBox","querySelector","searchInput","addEventListener","clearResultsAndGeometry","e","createTimeout","clearTimeout","activateDeactivateReverse","document","clearResults","clickReverseEvent","on","evt","CLICK","showReversePopUp","changePlaceholder","style","display","ADDED_TO_MAP","length","point","Point","radius","icon","form","class","rotation","rotate","offset","color","opacity","simple","Polygon","fill","drawNomenclatorResult","proxy","remote","then","geoJsonData","text","substring","removeLayers","clickedElementLayer","featureJSON","JSON","parse","geometry","fixCoordinatesPath","properties","lat","lng","layer","GeoJSON","type","features","displayInLayerSwitcher","createGeometryStyles","setStyle","setZIndex","addLayers","fullAddress","createFullAddress","perfectResult","state","showSearchPopUp","fake","err","reprojCoords","getImpl","reproject","getProjection","code","coord","getLayers","removePopup","origin","etrs89pointCoordinates","params","urlToGet","mapCoordinates","dataCoordinates","returnData","showPopUp","setTimeout","searchInputValue","control","firstResult","target","replace","searchValue","innerHTML","classList","add","fontSize","nomenclatorCandidates","geocoderCandidates","regExpCoord","test","searchCoordinates","nomenclatorFinished","candidatesFinished","getNomenclatorData","showCandidatesResults","getCandidatesData","allCandidates","j","push","remove","parragraph","createElement","infoMsg","createTextNode","appendChild","compiledResult","results","places","elementList","querySelectorAll","forEach","listElement","goToLocation","item","click","datosCoordenadas","urlSinJSON","geoJsonData2","includes","hol","concat","numFirstValue","val","stroke","width","zoomInLocation","undefined","popup","jsonResult","via","tip_via","address","portal","portalNumber","muni","toUpperCase","locationId","zoomIn","requestPlace","addParameters","request","query","sourcename","outputformat","latLngString","location","resultTitle","title","latLngArray","latitude","parseFloat","longitude","newGeojson","inputValue","resultsArray","newInputVal","window","encodeURIComponent","resolve","thisElement","splice","elem","cps","elementsData","id","element","getAttribute","parenthesisIndex","currentElement","selectedObject","findClickedItem","getFindData","drawGeocoderResultProv","drawGeocoderResult","service","resultsList","getElementById","Vector","calculateMaxExtent","extent","setBbox","setScale","setZoom","fire","filter","feature","setOfCoordinates","flag","placeholder","border","src","concatUrlPaths","config","THEME_URL","exactResult","exitState","destinyProj","destinySource","newCoordinates","mapcoords","featureCoordinates","addTab","featureTabOpts","content","toFixed","getPopup","Popup","myPopUp","panMapIfOutOfView","addPopup","geographicNameType","IGNSearch","Plugin","options","map_","controls_","IGNSEARCH_TYPES_CONFIGURATION","isCollapsed","collapsible","position","tooltip_","tooltip","reverse_","locationID_","requestStreet_","isString","Number","geocoderCoords_","zoom_","parseInt","panel_","ui","Panel","collapsed","className","collapsedButtonClass","addControls","addPanels","setResultVisibility","removeControls","control_","plugin","M$plugin$IGNSearch","M$control$IGNSearchControl","M$impl$control$IGNSearchControl"],"mappings":"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","file":"ignsearch.ol.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","module.exports = \"<div id=\\\"div-contenedor\\\" class=\\\"m-control m-container m-ignsearch\\\" title=\\\"\\\">\\n    <div class=\\\"search-panel\\\">\\n        <input type=\\\"text\\\" id=\\\"m-ignsearch-search-input\\\" class=\\\"m-input-search\\\" title=\\\"{{translations.tooltip_input}}\\\" placeholder=\\\"{{translations.direccion}}\\\" />\\n        <button id=\\\"m-ignsearch-locate-button\\\" title=\\\"{{translations.obtener}}\\\">\\n            <span class=\\\"icon-locate\\\" />\\n        </button>\\n        <button id=\\\"m-ignsearch-clear-button\\\" class=\\\"m-button-limpiar\\\" title=\\\"{{translations.deleteresults}}\\\">\\n            <span class=\\\"icon-remove\\\" />\\n        </button>\\n    </div>\\n    <div id=\\\"m-ignsearch-results\\\">\\n        <!-- Here goes the list of search results -->\\n    </div>\\n</div>\\n\";","module.exports = \"<ul id=\\\"m-ignsearch-results-list\\\">\\n    {{#each places}}\\n        {{#if this.address}}\\n            {{#printType this.type this.address this.id this.municipality this.cps}}\\n            {{/printType}}\\n        {{else}}\\n            {{#printType this.type this.title this.id this.municipality this.cps}}\\n            {{/printType}}\\n        {{/if}}\\n    {{/each}}\\n</ul>\\n\";","/**\n * @module M/impl/control/IGNSearchControl\n */\nexport default class IGNSearchControl extends M.impl.Control {\n  /**\n   * This function adds the control to the specified map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the plugin\n   * @param {HTMLElement} html of the plugin\n   * @api stable\n   */\n  addTo(map, html) {\n    super.addTo(map, html);\n  }\n  /**\n   * This function sets a new scale to the map.\n   * Developed for WGS 84 / Pseudo - Mercator 3857 projection.\n   * @private\n   * @function\n   */\n  setScale(scale) {\n    const wmts3857scales = [\n      559082264.0287178,\n      279541132.0143589,\n      139770566.0071794,\n      69885283.00358972,\n      34942641.50179486,\n      17471320.75089743,\n      8735660.375448715,\n      4367830.187724357,\n      2183915.093862179,\n      1091957.546931089,\n      545978.7734655447,\n      272989.3867327723,\n      136494.6933663862,\n      68247.34668319309,\n      34123.67334159654,\n      17061.83667079827,\n      8530.918335399136,\n      4265.459167699568,\n      2132.729583849784,\n    ];\n    // const wmts3857resolutions = [\n    //   156543.0339280410,\n    //   78271.51696402048,\n    //   39135.75848201023,\n    //   19567.87924100512,\n    //   9783.939620502561,\n    //   4891.969810251280,\n    //   2445.984905125640,\n    //   1222.992452562820,\n    //   611.4962262814100,\n    //   305.7481131407048,\n    //   152.8740565703525,\n    //   76.43702828517624,\n    //   38.21851414258813,\n    //   19.10925707129406,\n    //   9.554628535647032,\n    //   4.777314267823516,\n    //   2.388657133911758,\n    //   1.194328566955879,\n    //   0.5971642834779395,\n    // ];\n    // Finds closest standard scale\n    const newScale = wmts3857scales.reduce((prev, curr) => {\n      return (Math.abs(curr - scale) < Math.abs(prev - scale) ? curr : prev);\n    });\n    const olMap = this.facadeMap_.getMapImpl();\n    const olView = olMap.getView();\n    const newResolution = olView.getMaxResolution() / (2 ** wmts3857scales.indexOf(newScale));\n    olView.setResolution(newResolution);\n    // 4.777314267823516); // resolution for scale 17016, table page 120\n    // const dpiToCM = M.units.DOTS_PER_INCH / 2.54;\n    // const resolution = (scale / dpiToCM) / 100;\n    // olView.setResolution(resolution);\n  }\n  /**\n   * This function reprojects given coordinates to given projection.\n   * @private\n   * @function\n   * @param { Array <number> } coordinates - [x,y]\n   * @param { string } source - 'EPSG:4326'\n   * @param { string } destiny - 'EPSG:4326'\n   */\n  reproject(coordinates, source, destiny) {\n    const transformFunc = ol.proj.getTransform(source, destiny);\n    return transformFunc(coordinates);\n  }\n}\n","/**\n * @module M/control/IGNSearchControl\n */\nimport IGNSearchImplControl from '../../impl/ol/js/ignsearchcontrol';\nimport template from '../../templates/ignsearch';\nimport results from '../../templates/results';\nimport { getValue } from './i18n/language';\n\nlet typingTimer;\n/**\n * @classdesc\n * This class creates an input for searching locations on a map.\n * It uses Instituto Geográfico Nacional services Geocoder and Nomenclator\n * to search user's input location and return coordinates on click.\n */\nexport default class IGNSearchControl extends M.Control {\n  /*\n   * @constructor\n   * @extends {M.Control}\n   * @api\n   */\n  constructor(\n    servicesToSearch,\n    maxResults,\n    noProcess,\n    countryCode,\n    urlCandidates,\n    urlFind,\n    urlReverse,\n    urlPrefix,\n    urlAssistant,\n    urlDispatcher,\n    resultVisibility,\n    reverse,\n    locationID,\n    requestStreet,\n    geocoderCoords,\n    zoom,\n    searchPosition,\n    pointStyle,\n    nomenclatorSearchType,\n  ) {\n    if (M.utils.isUndefined(IGNSearchImplControl)) {\n      M.exception('La implementación usada no puede crear controles IGNSearchControl');\n    }\n    const impl = new IGNSearchImplControl();\n    super(impl, 'IGNSearch');\n    // Class properties\n    /**\n     * This variable indicates which services should be searched\n     * (geocoder, nomenclator or both)\n     * @private\n     * @type {string} - 'g' | 'n' | 'gn'\n     */\n    this.servicesToSearch = servicesToSearch;\n    /**\n     * This variable sets the maximun results returned by a service\n     * (if both services are searched the maximum results will be twice this number)\n     * @private\n     * @type {number}\n     */\n    this.maxResults = maxResults;\n    /**\n     * This variables indicates which entities shouldn't be searched\n     * @private\n     * @type {string} - 'municipio' | 'poblacion' | 'toponimo' | 'municipio,poblacion' | etc\n     */\n    this.noProcess = noProcess;\n    /**\n     * This variable indicates the country code.\n     * @private\n     * @type {string} - 'es'\n     */\n    this.countryCode = countryCode;\n    /**\n     * This variable indicates Geocoder Candidates service url\n     * @private\n     * @type {string}\n     */\n    this.urlCandidates = urlCandidates;\n    /**\n     * This variable indicates Geocoder Find service url\n     * @private\n     * @type {string}\n     */\n    this.urlFind = urlFind;\n    /**\n     * This variable indicates Geocoder Reverse service url\n     * @private\n     * @type {string}\n     */\n    this.urlReverse = urlReverse;\n    /**\n     * This variable indicates Nomenclator url prefix\n     * @private\n     * @type {string}\n     */\n    this.urlPrefix = urlPrefix;\n    /**\n     * This variable indicates Nomenclator SearchAssistant service url\n     * @private\n     * @type {string}\n     */\n    this.urlAssistant = urlAssistant;\n    /**\n     * This variable indicates Nomenclator Dispatcher service url\n     * @private\n     * @type {string}\n     */\n    this.urlDispatcher = urlDispatcher;\n    /**\n     * This variable indicates whether result geometry should be drawn on map.\n     * @private\n     * @type {boolean}\n     */\n    this.resultVisibility_ = resultVisibility;\n    /**\n     * This variable indicates which entity types should be searched on Nomenclator service.\n     * @private\n     * @type {Array<string>}\n     */\n    this.nomenclatorSearchType = nomenclatorSearchType;\n    /**\n     * Text to search\n     * @private\n     * @type {string}\n     */\n    this.searchPosition = searchPosition;\n    /**\n     * This variable indicates whether reverse geocoder button should be available.\n     * @private\n     * @type {Boolean}\n     */\n    this.reverse = reverse;\n    /**\n     * This variable indicates whether reverse geocoder button is activated.\n     * @private\n     * @type {Boolean}\n     */\n    this.reverseActivated = false;\n    /**\n     * Text to search\n     * @private\n     * @type {string}\n     */\n    this.locationID = locationID;\n    /**\n     * Text to search\n     * @private\n     * @type {string}\n     */\n    this.requestStreet = requestStreet;\n    /**\n     * Reverse geocoder coordinates\n     * @private\n     * @type {string}\n     */\n    this.geocoderCoords = geocoderCoords;\n\n    /**\n     * Zoom\n     *\n     * @private\n     * @type {number}\n     */\n    this.zoom = zoom;\n\n    /**\n     * Reverse geocoder coordinates\n     * @private\n     * @type {string}\n     */\n    this.urlParse = null;\n\n    /**\n     * This variable indicates Nomenclator url prefix\n     * @private\n     * @type {string}\n     */\n    this.pointStyle = pointStyle;\n  }\n  /**\n   * This function creates the view\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the control\n   * @api\n   */\n  createView(map) {\n    this.map = map;\n    this.destroyMapLayers();\n    return new Promise((success) => {\n      const html = M.template.compileSync(template, {\n        vars: {\n          translations: {\n            deleteresults: getValue('deleteresults'),\n            obtener: getValue('obtener'),\n            direccion: getValue('direccion'),\n            tooltip_input: getValue('tooltip_input'),\n          },\n        },\n      });\n      this.html = html;\n      this.resultsBox = html.querySelector('#m-ignsearch-results');\n      this.searchInput = this.html.querySelector('#m-ignsearch-search-input');\n      html.querySelector('#m-ignsearch-clear-button').addEventListener('click', this.clearResultsAndGeometry.bind(this));\n      html.querySelector('#m-ignsearch-search-input').addEventListener('keyup', e => this.createTimeout(e));\n      html.querySelector('#m-ignsearch-search-input').addEventListener('keydown', () => {\n        clearTimeout(typingTimer);\n      });\n      html.querySelector('#m-ignsearch-search-input').addEventListener('keydown', () => {\n        clearTimeout(typingTimer);\n      });\n      html.querySelector('#m-ignsearch-locate-button').addEventListener('click', this.activateDeactivateReverse.bind(this));\n      document.querySelector('.ign-search-panel>.m-panel-btn').addEventListener('click', this.clearResults.bind(this));\n      this.clickReverseEvent = this.map.on(M.evt.CLICK, e => this.showReversePopUp(e));\n      this.changePlaceholder();\n      if (!this.reverse) {\n        html.querySelector('#m-ignsearch-locate-button').style.display = 'none';\n      }\n      this.on(M.evt.ADDED_TO_MAP, () => {\n        if (this.locationID && this.locationID.length > 0) {\n          this.point = new M.style.Point({\n            radius: 5,\n            icon: {\n              form: 'none',\n              class: 'g-cartografia-pin',\n              radius: 12,\n              rotation: 0,\n              rotate: false,\n              offset: [0, -12],\n              color: '#f00',\n              opacity: 1,\n            },\n          });\n          this.simple = new M.style.Polygon({\n            fill: {\n              color: 'black',\n              opacity: 0,\n            },\n          });\n          this.drawNomenclatorResult(this.locationID, false);\n        }\n        if (this.requestStreet && this.requestStreet.length > 0) {\n          M.proxy(false);\n          M.remote.get(this.requestStreet).then((res) => {\n            const geoJsonData = res.text.substring(9, res.text.length - 1);\n            this.map.removeLayers(this.clickedElementLayer);\n            const featureJSON = JSON.parse(geoJsonData);\n            featureJSON.geometry.coordinates = this.fixCoordinatesPath(featureJSON);\n            // Center coordinates\n            this.coordinates = `${featureJSON.properties.lat}, ${featureJSON.properties.lng}`;\n            // New layer with geometry\n            this.clickedElementLayer = new M.layer.GeoJSON({\n              name: getValue('searchresult'),\n              source: {\n                type: 'FeatureCollection',\n                features: [featureJSON],\n              },\n            });\n            this.clickedElementLayer.displayInLayerSwitcher = false;\n\n            this.createGeometryStyles();\n\n            if (featureJSON.geometry.type === 'Point') {\n              this.clickedElementLayer.setStyle(this.point);\n            }\n\n            // Change zIndex value\n            this.clickedElementLayer.setZIndex(9999999999999999999);\n\n            // Stops showing polygon geometry\n            if (!this.resultVisibility_) {\n              this.clickedElementLayer.setStyle(this.simple);\n            }\n            this.map.addLayers(this.clickedElementLayer);\n            // show popup for streets\n            if (featureJSON.properties.type === 'callejero' || featureJSON.properties.type === 'portal') {\n              const fullAddress = this.createFullAddress(featureJSON.properties);\n\n              const coordinates = [featureJSON.properties.lat, featureJSON.properties.lng];\n              const perfectResult = featureJSON.properties.state;\n              this.showSearchPopUp(fullAddress, coordinates, perfectResult, { fake: true });\n            }\n\n            M.proxy(true);\n          }).catch((err) => {\n            M.proxy(true);\n          });\n        }\n\n        if (this.geocoderCoords && this.geocoderCoords.length === 2) {\n          this.activateDeactivateReverse();\n          const reprojCoords = this.getImpl().reproject(this.geocoderCoords, 'EPSG:4326', map.getProjection().code);\n          this.showReversePopUp({\n            coord: reprojCoords,\n            fake: true,\n          });\n        }\n      });\n      success(html);\n    });\n  }\n\n  /**\n   * This function remove search layers.\n   *\n   * @public\n   * @function\n   * @api\n   *\n   */\n  destroyMapLayers() {\n    for (let i = 0; i < this.map.getLayers().length; i += 1) {\n      if (this.map.getLayers()[i].name === getValue('searchresult')) {\n        this.map.removeLayers(this.map.getLayers()[i]);\n        this.map.removePopup();\n      }\n    }\n  }\n\n\n  /**\n   * This function toggles reverse geocoder button activation.\n   *\n   * @public\n   * @function\n   * @api\n   *\n   */\n  activateDeactivateReverse() {\n    if (!this.reverseActivated) {\n      this.reverseActivated = true;\n      document.querySelector('#m-ignsearch-locate-button span').style.color = '#71a7d3';\n    } else {\n      this.reverseActivated = false;\n      document.querySelector('#m-ignsearch-locate-button span').style.color = '#7A7A73';\n    }\n  }\n  /**\n   * This function shows information tooltip on clicked point.\n   * @param {Event} e - Event\n   */\n  showReversePopUp(e) {\n    if (this.reverseActivated) {\n      // Reproject coordinates to ETRS89 on decimal grades (+ North latitude and East longitude)\n      const origin = this.map.getProjection().code;\n      const destiny = 'EPSG:4258';\n      const etrs89pointCoordinates = this.getImpl()\n        .reproject([e.coord[0], e.coord[1]], origin, destiny);\n      // Params:\n      // lon, lat\n      // type (only if refcatastral) = 'refcatastral'\n      const params = `lon=${etrs89pointCoordinates[0]}&lat=${etrs89pointCoordinates[1]}`;\n      const urlToGet = `${this.urlReverse}?${params}`;\n      const mapCoordinates = e.coord;\n      this.geocoderCoords = etrs89pointCoordinates;\n      const dataCoordinates = [etrs89pointCoordinates[1], etrs89pointCoordinates[0]];\n      let fullAddress = '';\n      M.proxy(false);\n      M.remote.get(urlToGet).then((res) => {\n        if (res.text !== null) {\n          const returnData = JSON.parse(res.text);\n          fullAddress = this.createFullAddress(returnData);\n        } else {\n          fullAddress = getValue('exception.exists');\n        }\n        this.showPopUp(fullAddress, mapCoordinates, dataCoordinates, null, true, e);\n      });\n\n      M.proxy(true);\n    }\n  }\n\n  /**\n   * This function sets a timeout between keypress and search.\n   * @public\n   * @function\n   * @param {e} event that triggers the method\n   * @api\n   */\n  createTimeout(e) {\n    clearTimeout(typingTimer);\n    typingTimer = setTimeout(() => this.searchInputValue(e), 500);\n  }\n  /**\n   * This function gets activation button\n   *\n   * @public\n   * @function\n   * @param {HTML} html of control\n   * @api\n   */\n  getActivationButton(html) {\n    return html.querySelector('.m-ignsearch button');\n  }\n  /**\n   * This function compares controls\n   *\n   * @public\n   * @function\n   * @param {M.Control} control to compare\n   * @api\n   */\n  equals(control) {\n    return control instanceof IGNSearchControl;\n  }\n  /**\n   * This function\n   * 1.- Takes user's input\n   * 2.- Searches for ocurrences on IGN sources\n   * 3.- Returns results as items in a drop-down list (returns address)\n   * 4.- Onclick on an item goes to its coordinates\n   * @public\n   * @function\n   * @param {event} e - event that triggers this method\n   * @api\n   */\n  searchInputValue(e, firstResult = false) {\n    // const { value } = e.target;\n    const value = e.target.value.replace(',', ' ');\n    this.searchValue = value;\n    if (value.length <= 2) {\n      this.resultsBox.innerHTML = '';\n    } else {\n      this.resultsBox.innerHTML = '';\n      // Adds animation class during loading\n      this.resultsBox.classList.add('g-cartografia-spinner');\n      this.resultsBox.style.fontSize = '24px';\n\n      this.nomenclatorCandidates = [];\n      this.geocoderCandidates = [];\n\n      const regExpCoord = /[+-]?\\d+\\.\\d+(\\s|,|(,\\s))[+-]?\\d+\\.\\d+/;\n      // Checks if input content represents coordinates, else searches text\n      if (regExpCoord.test(value)) {\n        // searches coordinates point (TO DO) if coordinates are entered\n        this.searchCoordinates(value);\n      } else {\n        // saves on allCandidates search results from Nomenclator (CommunicationPoolservlet)\n        this.nomenclatorFinished = false;\n        this.candidatesFinished = false;\n        this.getNomenclatorData(value, this.nomenclatorCandidates).then(() => {\n          // saves on allCandidates search results from CartoCiudad (geocoder)\n          this.nomenclatorFinished = true;\n          this.showCandidatesResults(firstResult);\n        });\n\n        this.getCandidatesData(value, this.geocoderCandidates).then(() => {\n          this.candidatesFinished = true;\n          this.showCandidatesResults(firstResult);\n        });\n      }\n    }\n  }\n\n  showCandidatesResults(firstResult) {\n    this.allCandidates = [];\n    for (let i = 0; i < this.searchPosition.split(',').length; i += 1) {\n      if (this.searchPosition.split(',')[i] === 'nomenclator') {\n        for (let j = 0; j < this.nomenclatorCandidates.length; j += 1) {\n          this.allCandidates.push(this.nomenclatorCandidates[j]);\n        }\n      }\n      if (this.searchPosition.split(',')[i] === 'geocoder') {\n        for (let j = 0; j < this.geocoderCandidates.length; j += 1) {\n          this.allCandidates.push(this.geocoderCandidates[j]);\n        }\n      }\n    }\n\n    // Service doesn't find results\n    if (this.allCandidates.length === 0 && this.nomenclatorFinished && this.candidatesFinished) {\n      // Clears previous search\n      this.resultsBox.innerHTML = '';\n      // remove animation class and return to normal font size after loading\n      this.resultsBox.classList.remove('g-cartografia-spinner');\n      this.resultsBox.style.fontSize = '1em';\n      const parragraph = document.createElement('p');\n      const infoMsg = document.createTextNode(getValue('exception.results'));\n      parragraph.classList.add('m-ignsearch-noresults');\n      parragraph.appendChild(infoMsg);\n      this.resultsBox.appendChild(parragraph);\n    } else if (this.allCandidates.length > 0) {\n      // Clears previous search\n      this.resultsBox.innerHTML = '';\n      // remove animation class and return to normal font size after loading\n      this.resultsBox.classList.remove('g-cartografia-spinner');\n      this.resultsBox.style.fontSize = '1em';\n      const compiledResult = M.template.compileSync(results, {\n        vars: {\n          places: this.allCandidates,\n        },\n      });\n\n      const elementList = compiledResult.querySelectorAll('li');\n      elementList.forEach((listElement) => {\n        listElement.addEventListener('click', () => {\n          this.goToLocation(listElement);\n        });\n      });\n      if (firstResult === true && elementList.length > 0) {\n        elementList.item(0).click();\n      }\n\n      this.resultsBox.appendChild(compiledResult);\n    }\n  }\n\n  /**\n   * This function removes last search layer and adds new layer with current result (from geocoder)\n   * features to map, zooms in result, edits popup information and shows a message saying\n   *  if it's a perfect result or an approximation.\n   * @public\n   * @function\n   * @param {Object} geoJsonData - clicked result object\n   * @api\n   */\n  drawGeocoderResultProv(geoJsonData) {\n    this.map.removeLayers(this.clickedElementLayer);\n    M.proxy(false);\n    M.remote.get(this.urlParse).then((res) => {\n      const urlSinJSON = res.text.substring(9, res.text.length - 1);\n\n      let geoJsonData2 = geoJsonData;\n\n      let datosGeometria;\n      let datosCoordenadas;\n      if (urlSinJSON.includes('MULTIPOLYGON (((')) {\n        if (geoJsonData2.includes('\"type\":\"MultiPolygon\"')) {\n          datosGeometria = urlSinJSON.split('(((');\n          datosCoordenadas = datosGeometria[1].split('), (');\n\n\n          if (geoJsonData2.includes(']]]')) {\n            geoJsonData2 = geoJsonData2.replace(']]]', ']]]]');\n          }\n\n          for (let i = 0; i < datosCoordenadas.length; i += 1) {\n            const hol = datosCoordenadas[i].substring(0, 9).replace('(', '');\n\n            if (geoJsonData.includes('[[['.concat(hol))) {\n              geoJsonData2 = geoJsonData2.replace('[[['.concat(hol), '[[[['.concat(hol));\n            } else if (geoJsonData.includes(']],[['.concat(hol))) {\n              geoJsonData2 = geoJsonData2.replace(']],[['.concat(hol), ']]],[[['.concat(hol));\n            } else if (geoJsonData.includes('],['.concat(hol))) {\n              geoJsonData2 = geoJsonData2.replace('],['.concat(hol), ']],[['.concat(hol));\n            }\n          }\n        }\n      } else if (urlSinJSON.includes('POLYGON ((')) {\n        if (geoJsonData2.includes('\"type\":\"Polygon\"')) {\n          datosGeometria = urlSinJSON.split('((');\n          datosCoordenadas = datosGeometria[1].split('), (');\n\n\n          if (geoJsonData2.includes(']]')) {\n            geoJsonData2 = geoJsonData2.replace(']]', ']]]');\n          }\n\n          geoJsonData2 = geoJsonData2.replace('Polygon', 'MultiPolygon');\n\n          for (let i = 0; i < datosCoordenadas.length; i += 1) {\n            const numFirstValue = datosCoordenadas[i].split(' ');\n            const val = datosCoordenadas[i].substring(0, numFirstValue[0].length).replace('(', '');\n\n            if (geoJsonData.includes('[[['.concat(val))) {\n              geoJsonData2 = geoJsonData2.replace('[[['.concat(val), '[[[['.concat(val));\n            } else if (geoJsonData.includes('],['.concat(val))) {\n              geoJsonData2 = geoJsonData2.replace('],['.concat(val), ']],[['.concat(val));\n            }\n          }\n        } else if (geoJsonData2.includes('\"type\":\"MultiPolygon\"')) {\n          geoJsonData2 = geoJsonData2.replace(']]],[[', ']],[[');\n          geoJsonData2 = geoJsonData2.replace('\"type\":\"MultiPolygon\"', '\"type\":\"Polygon\"');\n        }\n      }\n\n      if (geoJsonData2.includes('MultiMultiPolygon')) {\n        geoJsonData2 = geoJsonData2.replace('MultiMultiPolygon', 'MultiPolygon');\n      }\n      const featureJSON = JSON.parse(geoJsonData2);\n\n      // featureJSON.geometry.coordinates = this.fixCoordinatesPath(featureJSON);\n      // Center coordinates\n      this.coordinates = `${featureJSON.properties.lat}, ${featureJSON.properties.lng}`;\n      // New layer with geometry\n      this.clickedElementLayer = new M.layer.GeoJSON({\n        name: getValue('searchresult'),\n        source: {\n          type: 'FeatureCollection',\n          features: [featureJSON],\n        },\n      });\n      this.clickedElementLayer.displayInLayerSwitcher = false;\n\n      if (featureJSON.geometry.type === 'Point') {\n        this.clickedElementLayer.setStyle(this.point);\n      }\n\n      if (featureJSON.geometry.type.indexOf('Polygon') > -1) {\n        this.clickedElementLayer.setStyle(new M.style.Polygon({\n          fill: {\n            color: '#3399CC',\n            opacity: 0,\n          },\n          stroke: {\n            color: '#3399CC',\n            width: 2,\n          },\n          radius: 5,\n        }));\n      }\n\n      // Change zIndex value\n      this.clickedElementLayer.setZIndex(9999999999999999999);\n\n      // Stops showing polygon geometry\n      if (!this.resultVisibility_) {\n        this.clickedElementLayer.setStyle(this.simple);\n      }\n      this.map.addLayers(this.clickedElementLayer);\n      this.zoomInLocation('g', featureJSON.geometry.type, this.zoom);\n      // show popup for streets\n      if (featureJSON.properties.type === 'callejero' ||\n        featureJSON.properties.type === 'portal') {\n        const fullAddress = this.createFullAddress(featureJSON.properties);\n\n        const coordinates = [featureJSON.properties.lat, featureJSON.properties.lng];\n        const perfectResult = featureJSON.properties.state;\n        this.showSearchPopUp(fullAddress, coordinates, perfectResult);\n      }\n    });\n\n    M.proxy(true);\n  }\n\n  drawGeocoderResult(geoJsonData) {\n    this.map.removeLayers(this.clickedElementLayer);\n    const featureJSON = JSON.parse(geoJsonData);\n    featureJSON.geometry.coordinates = this.fixCoordinatesPath(featureJSON);\n    // Center coordinates\n    this.coordinates = `${featureJSON.properties.lat}, ${featureJSON.properties.lng}`;\n    // New layer with geometry\n    this.clickedElementLayer = new M.layer.GeoJSON({\n      name: getValue('searchresult'),\n      source: {\n        type: 'FeatureCollection',\n        features: [featureJSON],\n      },\n    });\n    this.clickedElementLayer.displayInLayerSwitcher = false;\n    if (featureJSON.geometry.type === 'Point') {\n      this.clickedElementLayer.setStyle(this.point);\n    }\n\n    // Change zIndex value\n    this.clickedElementLayer.setZIndex(9999999999999999999);\n\n    // Stops showing polygon geometry\n    if (!this.resultVisibility_) {\n      this.clickedElementLayer.setStyle(this.simple);\n    } else if (featureJSON.geometry.type.indexOf('Polygon') > -1) {\n      this.clickedElementLayer.setStyle(new M.style.Polygon({\n        fill: {\n          color: '#3399CC',\n          opacity: 0,\n        },\n        stroke: {\n          color: '#3399CC',\n          width: 2,\n        },\n        radius: 5,\n      }));\n    }\n\n    this.map.addLayers(this.clickedElementLayer);\n    this.zoomInLocation('g', featureJSON.geometry.type, this.zoom);\n    // show popup for streets\n    if (featureJSON.properties.type === 'callejero' ||\n      featureJSON.properties.type === 'portal') {\n      const fullAddress = this.createFullAddress(featureJSON.properties);\n      const coordinates = [featureJSON.properties.lat, featureJSON.properties.lng];\n      const perfectResult = featureJSON.properties.state;\n      this.showSearchPopUp(fullAddress, coordinates, perfectResult);\n    } else if (this.popup !== undefined) {\n      this.map.removePopup(this.popup);\n    }\n  }\n\n\n  /**\n   * This function takes data from an entity and returns the complete address\n   * @param {string} jsonResult - json string with entity data\n   */\n  createFullAddress(jsonResult) {\n    const via = (jsonResult.tip_via === null ||\n      jsonResult.tip_via === undefined) ? '' : jsonResult.tip_via;\n    const address = (jsonResult.address === null ||\n      jsonResult.address === undefined) ? '' : jsonResult.address;\n    const portal = (jsonResult.portalNumber === null ||\n      jsonResult.portalNumber === undefined ||\n      jsonResult.portalNumber === 0) ? '' : jsonResult.portalNumber;\n    const muni = (jsonResult.muni === null ||\n      jsonResult.muni === undefined) ? '' : jsonResult.muni;\n    return `${via} ${address} ${portal}, ${muni.toUpperCase()}`;\n  }\n  /**\n   * This function removes last search layer and adds new layer\n   * with current result (from nomenclator) features to map and zooms in result.\n   * @public\n   * @function\n   * @param {string} locationId - id of the location object\n   * @api\n   */\n  drawNomenclatorResult(locationId, zoomIn = true) {\n    this.requestStreet = '';\n    this.requestPlace = M.utils.addParameters(this.urlDispatcher, {\n      request: 'OpenQuerySource',\n      query: `<ogc:Filter><ogc:FeatureId fid=\"${locationId}\"/></ogc:Filter>`,\n      sourcename: `${this.urlPrefix}communicationsPoolServlet/sourceAccessWFS-INSPIRE-NGBE.rdf`,\n      outputformat: 'application/json',\n    });\n    this.locationID = locationId;\n    M.proxy(true);\n    M.remote.get(this.requestPlace).then((res) => {\n      const latLngString = JSON.parse(res.text).results[0].location;\n      const resultTitle = JSON.parse(res.text).results[0].title;\n      const latLngArray = latLngString.split(' ');\n      const latitude = parseFloat(latLngArray[0]);\n      const longitude = parseFloat(latLngArray[1]);\n      this.map.removeLayers(this.clickedElementLayer);\n      const newGeojson = {\n        name: getValue('searchresult'),\n        source: {\n          type: 'FeatureCollection',\n          features: [{\n            type: 'Feature',\n            geometry: {\n              type: 'Point',\n              coordinates: [\n                longitude, latitude,\n              ],\n            },\n            properties: {\n              name: resultTitle,\n            },\n          }],\n        },\n      };\n      this.clickedElementLayer = new M.layer.GeoJSON(newGeojson);\n      this.clickedElementLayer.displayInLayerSwitcher = false;\n      this.clickedElementLayer.setStyle(this.point);\n\n      // Change zIndex value\n      this.clickedElementLayer.setZIndex(9999999999999999999);\n      // Stops showing polygon geometry\n      if (!this.resultVisibility_) {\n        this.clickedElementLayer.setStyle(this.simple);\n      }\n      this.map.addLayers(this.clickedElementLayer);\n      if (zoomIn === true) {\n        this.zoomInLocation('n', 'Point', this.zoom);\n      }\n    });\n  }\n  /**\n   * This function gets user input, searches for coincidences and adds each one to the given array.\n   * @public\n   * @function\n   * @param {string} inputValue search text written by user\n   * @param { Array < Object > } resultsArray search result candidates from IGN services\n   * @api\n   */\n  getCandidatesData(inputValue, resultsArray) {\n    const newInputVal = window.encodeURIComponent(inputValue);\n    return new Promise((resolve) => {\n      if (this.servicesToSearch !== 'n') {\n        let params = `q=${newInputVal}&limit=${this.maxResults + 5}&no_process=${this.noProcess}`;\n        params += `&countrycode=${this.countryCode}&autocancel=true`;\n        const urlToGet = `${this.urlCandidates}?${params}`;\n        M.proxy(false);\n        M.remote.get(urlToGet).then((res) => {\n          const returnData = JSON.parse(res.text.substring(9, res.text.length - 1));\n          for (let i = 0; i < returnData.length; i += 1) {\n            resultsArray.push(returnData[i]);\n          }\n          resolve();\n        });\n\n        M.proxy(true);\n      } else {\n        resolve();\n      }\n    });\n  }\n  /**\n   * This function adds search coincidences on Nomenclator to array\n   * @public\n   * @function\n   * @param {string} inputValue location searched by user\n   * @param {Array <Object>} resultsArray search results\n   * @api\n   */\n  getNomenclatorData(inputValue, resultsArray) {\n    const newInputVal = window.encodeURIComponent(inputValue);\n    return new Promise((resolve) => {\n      if (this.servicesToSearch !== 'g') {\n        const params = `maxresults=${this.maxResults - 5}&name_equals=${newInputVal}`;\n        const urlToGet = `${this.urlAssistant}?${params}`;\n        M.proxy(true);\n        M.remote.get(urlToGet).then((res) => {\n          const temporalData = (res.text !== '' && res.text !== null) ? JSON.parse(res.text) : { results: [] };\n          const returnData = temporalData.results;\n          for (let i = 0; i < returnData.length; i += 1) {\n            // avoid nameplaces not included in this.nomenclatorSearchType\n            if (this.nomenclatorSearchType.indexOf(returnData[i].type) >= 0) {\n              resultsArray.push(returnData[i]);\n            }\n          }\n          // move 'Núcleos de población' to start\n          for (let i = 0; i < resultsArray.length; i += 1) {\n            if (resultsArray[i].type === 'Núcleos de población') {\n              const thisElement = resultsArray.splice(i, 1);\n              resultsArray.splice(0, 0, thisElement);\n            }\n          }\n\n          resultsArray.forEach((elem) => {\n            // eslint-disable-next-line no-param-reassign\n            elem.cps = true;\n          });\n\n          resolve();\n        });\n      } else {\n        resolve();\n      }\n    });\n  }\n  /**\n   * This function gets address of selected item and returns geojson data (with coordinates)\n   * Only for Geocoder service\n   * @public\n   * @function\n   * @param {string} listElement element from drop-down list(\"li\")\n   * @param {Array <Object> } elementsData search results\n   * @api\n   */\n  getFindData(listElement, elementsData) {\n    return new Promise((resolve) => {\n      let id;\n      let type;\n      let portal;\n      let via;\n      let address;\n      elementsData.forEach((element) => {\n        if (listElement.getAttribute('id') === element.id) {\n          id = `&id=${element.id}`;\n          type = `&type=${element.type}`;\n          portal = (element.portalNumber !== 0 && element.portalNumber !== undefined) ?\n            `&portal=${element.portalNumber}` : '';\n          via = element.tip_via !== '' ? `&tip_via=${element.tip_via}` : '';\n        }\n      });\n      address = listElement.innerHTML;\n      if (listElement.innerHTML.includes('(')) {\n        const parenthesisIndex = listElement.innerHTML.indexOf('(');\n        address = listElement.innerHTML.substring(0, parenthesisIndex);\n      }\n      const params = `${type}${via}${id}${portal}&outputformat=geojson`;\n      // const params = `${type}${via}${id}${portal}`;\n\n      const urlToGet = `${this.urlFind}?q=${address}${params}`;\n\n      this.urlParse = urlToGet.replace('&outputformat=geojson', '');\n\n      this.requestStreet = urlToGet;\n      this.locationID = '';\n      M.proxy(false);\n      M.remote.get(urlToGet).then((res) => {\n        const geoJsonData = res.text.substring(9, res.text.length - 1);\n        resolve(geoJsonData);\n      });\n\n      M.proxy(true);\n    });\n  }\n  /**\n   * This function zooms in clicked location and draws geometry\n   * @public\n   * @function\n   * @param {Object} listElement clicked result information\n   * @api\n   */\n  goToLocation(listElement) {\n    const text = listElement.querySelector('#info').innerHTML;\n    this.html.querySelector('#m-ignsearch-search-input').value = text;\n    this.currentElement = listElement; // <li>\n    const selectedObject = this.findClickedItem(listElement, this.allCandidates); // json\n    this.createGeometryStyles();\n    // if item comes from geocoder\n    if (Object.prototype.hasOwnProperty.call(selectedObject, 'address')) {\n      this.getFindData(listElement, this.allCandidates).then((geoJsonData) => {\n        if (geoJsonData.includes('\"tip_via\":null') && (geoJsonData.includes('\"type\":\"Municipio\"') || geoJsonData.includes('\"type\":\"municipio\"') || geoJsonData.includes('\"type\":\"Provincia\"') || geoJsonData.includes('\"type\":\"provincia\"') || geoJsonData.includes('\"type\":\"comunidad autonoma\"'))) {\n          this.drawGeocoderResultProv(geoJsonData);\n          this.map.removePopup();\n        } else {\n          this.drawGeocoderResult(geoJsonData);\n        }\n      });\n    } else { // if item comes from nomenclator\n      this.drawNomenclatorResult(selectedObject.id);\n    }\n    this.resultsBox.innerHTML = '';\n  }\n  /**\n   * This function zooms in MaxExtent of clicked element\n   * @public\n   * @function\n   * @param {string} service { 'g' | 'n' }\n   * @param { string } type of geometry in which we zoom\n   * @api\n   */\n  zoomInLocation(service, type, zoom) {\n    this.resultsList = document.getElementById('m-ignsearch-results-list');\n    if (this.clickedElementLayer instanceof M.layer.Vector) {\n      this.clickedElementLayer.calculateMaxExtent().then((extent) => {\n        this.map.setBbox(extent);\n        if (service === 'n' || type === 'Point') {\n          this.setScale(17061); // last scale requested by our client: 2000\n        }\n        // En el caso de que se haga una búsqueda de Provincias o CCAA, se dejaría el zoom que\n        // calcula el servicio para no afectar en la visualización de la geometría.\n        if (type === 'Point') {\n          this.map.setZoom(zoom);\n        }\n        this.fire('ignsearch:entityFound', [extent]);\n      });\n    }\n  }\n  /**\n   * This function returns clicked location object\n   * @public\n   * @function\n   * @param { string } listElement <li>Location</li>\n   * @param { Array < Object > } allCandidates possible locations\n   * @api\n   */\n  findClickedItem(listElement, allCandidates) {\n    return allCandidates.filter(element => element.id === listElement.getAttribute('id'))[0];\n  }\n  /**\n   * This function fixes path to get to this feature's coordinates\n   * @public\n   * @function\n   * @param {feature} feature with geometry information for the given location\n   * @api\n   */\n  fixCoordinatesPath(feature) {\n    let coordinates;\n    if (feature.geometry.type === 'Point') {\n      coordinates = feature.geometry.coordinates[0][0];\n    } else if (feature.geometry.type === 'MultiPolygon') {\n      coordinates = [feature.geometry.coordinates];\n    } else if (feature.geometry.type === 'LineString') {\n      coordinates = feature.geometry.coordinates[0];\n    } else {\n      coordinates = feature.geometry.coordinates;\n    }\n    return coordinates;\n  }\n\n  /* Given a set of coordinates (lat, long),\n    searches for the corresponding place\n  */\n  searchCoordinates(setOfCoordinates) {\n    // const latLongSeparationRegExp = /(\\s+|,|,\\s)/;\n    // setOfCoordinates.replace(latLongSeparationRegExp, ' ');\n    // const latFromSet = setOfCoordinates.split(' ')[0];\n    // const longFromSet = setOfCoordinates.split(' ')[1];\n    return new Promise((resolve) => {\n      // TODO\n      // if lat,long separation character/s are not a space, it turns into a space\n      // const latLongSeparationRegExp = /(\\s+|,|,\\s)/;\n      // setOfCoordinates.replace(latLongSeparationRegExp, ' ');\n      // const latFromSet = setOfCoordinates.split(' ')[0];\n      // const longFromSet = setOfCoordinates.split(' ')[1];\n      // // geocoder service\n      // const urlToGet = `${this.urlReverse}?lat=${latFromSet}&lon=${longFromSet}`;\n      // M.remote.get(urlToGet).then((res) => {\n      //   const parsedResponse = JSON.parse(res.text);\n      //   const coordinatesSetAddress = parsedResponse.address;\n      //   resolve();\n      // });\n      resolve();\n    });\n  }\n  /**\n   * This function clears drawn geometry from map.\n   * @public\n   * @function\n   * @api\n   */\n  clearResults() {\n    this.searchInput.value = '';\n    this.resultsBox.innerHTML = '';\n    this.searchValue = '';\n  }\n  /**\n   * This function clears input content, results box, popup and shown geometry.\n   * @public\n   * @function\n   * @api\n   */\n  clearResultsAndGeometry() {\n    this.clearResults();\n    if (this.clickedElementLayer !== undefined) {\n      this.clickedElementLayer.setStyle(this.simple);\n      this.map.removeLayers(this.clickedElementLayer);\n    }\n    this.map.removePopup(this.popup, [\n      this.lng,\n      this.lat,\n    ]);\n  }\n  /**\n   * This function sets geometry visibility on map (visible|invisible).\n   * @public\n   * @function\n   * @param {boolean} flag\n   * @api\n   */\n  setResultVisibility(flag) {\n    this.resultVisibility_ = flag;\n  }\n  /**\n   * This function changes input placeholder based on services choice\n   * @public\n   * @function\n   * @api\n   */\n  changePlaceholder() {\n    if (this.servicesToSearch === 'g') {\n      this.searchInput.placeholder = getValue('direccion');\n    } else if (this.servicesToSearch === 'n') {\n      this.searchInput.placeholder = 'Topónimo';\n    }\n  }\n  /**\n   * This function creates some geometry styles.\n   * @public\n   * @function\n   * @api\n   */\n  createGeometryStyles() {\n    // Shows pin on drawn point\n\n    if (this.pointStyle === 'pinBlanco') {\n      this.point = new M.style.Point({\n        radius: 5,\n        icon: {\n          form: 'none',\n          class: 'g-cartografia-pin',\n          radius: 12,\n          rotation: 0,\n          rotate: false,\n          offset: [0, -12],\n          color: '#f00',\n          border: '5px solid green',\n          opacity: 1,\n        },\n      });\n    } else if (this.pointStyle === 'pinRojo') {\n      this.point = new M.style.Point({\n        radius: 5,\n        icon: {\n          src: M.utils.concatUrlPaths([M.config.THEME_URL, '/img/pinign.svg']),\n        },\n      });\n    } else if (this.pointStyle === 'pinMorado') {\n      this.point = new M.style.Point({\n        radius: 5,\n        icon: {\n          src: M.utils.concatUrlPaths([M.config.THEME_URL, '/img/m-pin-24.svg']),\n        },\n      });\n    }\n\n    // Style for hiding geometry\n    this.simple = new M.style.Polygon({\n      fill: {\n        color: 'black',\n        opacity: 0,\n      },\n    });\n  }\n  /**\n    * This\n    function inserts a popUp with information about the searched location\n      (and whether it 's an exact result or an approximation)\n    * @param { string } fullAddress location address(street, portal, etc.)\n    * @param { Array } coordinates latitude[0] and longitude[1] coordinates\n    * @param { boolean } exactResult indicating\n    if the given result is a perfect match\n    */\n  showSearchPopUp(fullAddress, coordinates, exactResult, e = {}) {\n    const destinyProj = this.map.getProjection().code;\n    const destinySource = 'EPSG:4326';\n    const newCoordinates = this.getImpl()\n      .reproject([coordinates[1], coordinates[0]], destinySource, destinyProj);\n\n    let exitState;\n    if (exactResult !== 1) {\n      exitState = getValue('aprox');\n    } else {\n      exitState = getValue('exact');\n    }\n    this.showPopUp(fullAddress, newCoordinates, coordinates, exitState, false, e);\n  }\n  /**\n   * This function inserts a popup on the map with information about its location.\n   * @param { string } fullAddress location address(street, portal, etc.)\n   * @param { Array } mapCoordinates latitude[0] and longitude[1] coordinates on map projection\n   * @param { Array } featureCoordinates latitude[0] and longitude[1] coordinates from feature\n   * @param { string } exitState indicating if the given result is a perfect match\n   */\n  showPopUp(fullAddress, mapcoords, featureCoordinates, exitState = null, addTab = true, e = {}) {\n    const featureTabOpts = { content: '', icon: 'icon-locate' };\n    if (exitState !== null) {\n      featureTabOpts.content += `<div><b>${exitState}</b></div>`;\n    }\n    featureTabOpts.content += `<div>${fullAddress}</div>\n                <div class='ignsearch-popup'>Lat: ${featureCoordinates[0].toFixed(6)}</div>\n                <div class='ignsearch-popup'> Lon: ${featureCoordinates[1].toFixed(6)} </div>`;\n    if (this.map.getPopup() instanceof M.Popup && addTab === true) {\n      this.popup = this.map.getPopup();\n      this.popup.addTab(featureTabOpts);\n    } else {\n      const myPopUp = new M.Popup({ panMapIfOutOfView: !e.fake });\n      myPopUp.addTab(featureTabOpts);\n\n      this.map.addPopup(myPopUp, [\n        mapcoords[0],\n        mapcoords[1],\n      ]);\n      this.popup = myPopUp;\n    }\n    this.lat = mapcoords[1];\n    this.lng = mapcoords[0];\n  }\n  /**\n   * This function sets given scale to map\n   * @public\n   * @function\n   * @param { number } scale to which the map will zoom in\n   *   (5000 if we want 1: 5000)\n   * @api\n   */\n  setScale(scale) {\n    this.getImpl().setScale(scale);\n  }\n}\n","import en from './en';\nimport es from './es';\n\n/**\n * Default object with es and en translate.\n *\n * @const\n * @type {object}\n */\nconst translations = {\n  en,\n  es,\n};\n\nconst getLang = () => {\n  let res = 'es';\n  if (typeof M.language.getLang === 'function') {\n    res = M.language.getLang();\n  }\n\n  return res;\n};\n\n/**\n * This function sets a new language translate.\n * @param {string} lang\n * @param {JSON} json\n * @public\n * @api\n */\nexport const addTranslation = (lang, json) => {\n  translations[lang] = json;\n};\n\n/**\n * This function gets a language translate.\n *\n * @param {string} lang\n * @return {JSON}\n * @public\n * @api\n */\nexport const getTranslation = (lang) => {\n  if (lang === 'es' || lang === 'en') {\n    return translations[lang];\n  }\n  return M.language.getTranslation(lang).ignsearch;\n};\n\n/**\n * This function gets a language value from key\n *\n * @public\n * @param {string}\n * @param {string}\n * @return {string}\n * @public\n * @api\n */\n\nexport const getValue = (keyPath, lang = getLang()) => {\n  const translation = getTranslation(lang);\n  let value = '';\n  if (M.utils.isNullOrEmpty(translation)) {\n    /* eslint-disable no-console */\n    console.warn(`The translation '${lang}' has not been defined.`);\n  } else {\n    value = keyPath.split('.').reduce((prev, current) => prev[current], translation);\n  }\n\n  return value;\n};\n","const geographicNameType = [\n  'Estado',\n  // 'Comunidad autónoma',\n  // 'Ciudad con estatuto de autonomía',\n  // 'Provincia',\n  // 'Municipio',\n  // 'EATIM',\n  'Isla administrativa',\n  'Comarca administrativa',\n  'Jurisdicción',\n  // 'Capital de Estado',\n  // 'Capital de comunidad autónoma y ciudad con estatuto de autonomía',\n  // 'Capital de provincia',\n  // 'Capital de municipio',\n  // 'Capital de EATIM',\n  // 'Entidad colectiva',\n  // 'Entidad menor de población',\n  'Distrito municipal',\n  // 'Barrio',\n  // 'Entidad singular',\n  'Construcción/instalación abierta',\n  'Edificación',\n  'Vértice Geodésico',\n  // 'Hitos de demarcación territorial',\n  // 'Hitos en vías de comunicación',\n  'Alineación montañosa',\n  'Montaña',\n  'Paso de montaña',\n  'Llanura',\n  'Depresión',\n  'Vertientes',\n  'Comarca geográfica',\n  'Paraje',\n  'Elemento puntual del paisaje',\n  'Saliente costero',\n  'Playa',\n  'Isla',\n  'Otro relieve costero',\n  // 'Parque Nacional y Natural',\n  'Espacio protegido restante',\n  // 'Aeropuerto',\n  // 'Aeródromo',\n  // 'Pista de aviación y helipuerto',\n  // 'Puerto de Estado',\n  'Instalación portuaria',\n  // 'Carretera',\n  'Camino y vía pecuaria',\n  // 'Vía urbana',\n  // 'Ferrocarril',\n  'Curso natural de agua',\n  'Masa de agua',\n  'Curso artificial de agua',\n  'Embalse',\n  'Hidrónimo puntual',\n  'Glaciares',\n  'Mar',\n  'Entrante costero y estrecho marítimo',\n  'Relieve submarino',\n];\nexport default geographicNameType;\n","/**\n * @module M/plugin/IGNSearch\n */\nimport '../assets/css/ignsearch';\nimport '../assets/css/fonts';\nimport IGNSearchControl from './ignsearchcontrol';\nimport geographicNameType from './constants';\nimport { getValue } from './i18n/language';\n\nimport es from './i18n/es';\nimport en from './i18n/en';\n\nexport default class IGNSearch extends M.Plugin {\n  /**\n   * @classdesc\n   * Main facade plugin object. This class creates a plugin\n   * object which has an implementation Object\n   *\n   * @constructor\n   * @extends {M.Plugin}\n   * @param {Object} impl implementation object\n   * @api\n   */\n  constructor(options) {\n    super();\n    /**\n     * Facade of the map\n     * @private\n     * @type {M.Map}\n     */\n    this.map_ = null;\n\n    /**\n     * Array of controls\n     * @private\n     * @type {Array<M.Control>}\n     */\n    this.controls_ = [];\n\n    /**\n     * This variable indicates which services should be searched\n     * (geocoder, nomenclator or both)\n     * @private\n     * @type {string} - 'g' | 'n' | 'gn'\n     */\n    this.servicesToSearch = options.servicesToSearch || 'gn';\n\n    /**\n     * This variable sets the maximun results returned by a service\n     * (if both services are searched the maximum results will be twice this number)\n     * @private\n     * @type {number}\n     */\n    this.maxResults = options.maxResults || 10;\n\n    /**\n     * This variables indicates which entities shouldn't be searched\n     * @private\n     * @type {string} - 'municipio' | 'poblacion' | 'toponimo' | 'municipio,poblacion' | etc\n     */\n    this.noProcess = options.noProcess || 'poblacion';\n\n    /**\n     * This variable indicates the country code.\n     * @private\n     * @type {string} - 'es'\n     */\n    this.countryCode = options.countryCode || 'es';\n\n    /**\n     * This variable indicates Geocoder Candidates service url\n     * @private\n     * @type {string}\n     */\n    this.urlCandidates = options.urlCandidates || 'https://www.cartociudad.es/geocoder/api/geocoder/candidatesJsonp';\n\n    /**\n     * This variable indicates Geocoder Find service url\n     * @private\n     * @type {string}\n     */\n    this.urlFind = options.urlFind || 'https://www.cartociudad.es/geocoder/api/geocoder/findJsonp';\n\n    /**\n     * This variable indicates Geocoder Reverse service url\n     * @private\n     * @type {string}\n     */\n    this.urlReverse = options.urlReverse || 'https://www.cartociudad.es/geocoder/api/geocoder/reverseGeocode';\n\n    /**\n     * This variable indicates Nomenclator url prefix\n     * @private\n     * @type {string}\n     */\n    this.urlPrefix = options.urlPrefix || 'http://www.idee.es/';\n\n    /**\n     * This variable indicates Nomenclator SearchAssistant service url\n     * @private\n     * @type {string}\n     */\n    this.urlAssistant = options.urlAssistant || 'https://www.idee.es/communicationsPoolServlet/SearchAssistant';\n\n    /**\n     * This variable indicates Nomenclator Dispatcher service url\n     * @private\n     * @type {string}\n     */\n    this.urlDispatcher = options.urlDispatcher || 'https://www.idee.es/communicationsPoolServlet/Dispatcher';\n\n    /**\n     * This variable indicates which entity types should be searched on Nomenclator service.\n     * @private\n     * @type {Array<string>}\n     */\n    this.nomenclatorSearchType = M.config.IGNSEARCH_TYPES_CONFIGURATION || geographicNameType;\n\n    /**\n     * This variable indicates whether result geometry should be drawn on map.\n     * @private\n     * @type {boolean}\n     */\n    this.resultVisibility = options.resultVisibility || true;\n\n    /**\n     * This variable indicates whether the plugin can be collapsed.\n     * @private\n     * @type {boolean}\n     */\n    this.isCollapsed = options.isCollapsed || false;\n\n    /**\n     * This variable indicates whether the plugin can be collapsible.\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible = options.collapsible || false;\n\n\n    /**\n     * This variable indicates plugin's position on window\n     * @private\n     * @type {string} { 'TL' | 'TR' | 'BL' | 'BR' } (corners)\n     */\n    this.position = options.position || 'TL';\n\n    /**\n     * @private\n     * @type {string} - tooltip on hover on plugin button\n     */\n    this.tooltip_ = options.tooltip || getValue('tooltip');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.reverse_ = options.reverse || false;\n\n    /**\n     * Text to search\n     * @private\n     * @type {string}\n     */\n    this.locationID_ = (options.locationID && options.locationID.replace(/\\^/g, '&')) || '';\n\n    /**\n     * Text to search\n     * @private\n     * @type {string}\n     */\n    this.requestStreet_ = (options.requestStreet && options.requestStreet.replace(/\\^/g, '&')) || '';\n\n    let geocoderCoords = options.geocoderCoords;\n    if (M.utils.isString(geocoderCoords)) {\n      geocoderCoords = geocoderCoords.split(',');\n      geocoderCoords = [Number.parseFloat(geocoderCoords[0]),\n        Number.parseFloat(geocoderCoords[1]),\n      ];\n    }\n    /**\n     * Geocoder reverse coordinates\n     *\n     * @private\n     * @type {number}\n     */\n    this.geocoderCoords_ = geocoderCoords || [];\n\n    /**\n     * Zoom to do\n     *\n     * @private\n     * @type {string / number}\n     */\n    this.zoom_ = 16;\n    if (options.zoom !== undefined) {\n      this.zoom_ = parseInt(options.zoom, 10);\n    }\n\n    /**\n     * This variable indicates Nomenclator SearchAssistant service url\n     * @private\n     * @type {string}\n     */\n    this.searchPosition = options.searchPosition || 'nomenclator,geocoder';\n\n    /**\n     * This variable indicates Nomenclator SearchAssistant service url\n     * @private\n     * @type {string}\n     */\n    this.pointStyle = options.pointStyle || 'pinBlanco';\n  }\n\n  /**\n   * Return plugin language\n   *\n   * @public\n   * @function\n   * @param {string} lang type language\n   * @api stable\n   */\n  static getJSONTranslations(lang) {\n    if (lang === 'en' || lang === 'es') {\n      return (lang === 'en') ? en : es;\n    }\n    return M.language.getTranslation(lang).ignsearch;\n  }\n\n  /**\n   * This function adds this plugin into the map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map the map to add the plugin\n   * @api\n   */\n  addTo(map) {\n    this.controls_.push(new IGNSearchControl(\n      this.servicesToSearch,\n      this.maxResults,\n      this.noProcess,\n      this.countryCode,\n      this.urlCandidates,\n      this.urlFind,\n      this.urlReverse,\n      this.urlPrefix,\n      this.urlAssistant,\n      this.urlDispatcher,\n      this.resultVisibility,\n      this.reverse_,\n      this.locationID_,\n      this.requestStreet_,\n      this.geocoderCoords_,\n      this.zoom_,\n      this.searchPosition,\n      this.pointStyle,\n      this.nomenclatorSearchType,\n    ));\n    this.controls_[0].on('ignsearch:entityFound', (extent) => {\n      this.fire('ignsearch:entityFound', [extent]);\n    });\n    this.map_ = map;\n    this.panel_ = new M.ui.Panel('panelIGNSearch', {\n      collapsible: this.collapsible,\n      position: M.ui.position[this.position],\n      collapsed: this.isCollapsed,\n      className: 'ign-search-panel',\n      collapsedButtonClass: 'icon-ignsearch',\n      tooltip: this.tooltip_,\n    });\n    this.panel_.addControls(this.controls_);\n    map.addPanels(this.panel_);\n  }\n\n  /**\n   * This function sets geometry visibility on map (visible|invisible).\n   * @public\n   * @function\n   * @param {boolean} flag\n   * @api\n   */\n  setResultVisibility(flag) {\n    this.controls_[0].setResultVisibility(flag);\n  }\n\n  /**\n   * Name of the plugin\n   *\n   * @getter\n   * @function\n   */\n  get name() {\n    return 'ignsearch';\n  }\n\n  /**\n   * Reverse parameter\n   *\n   * @getter\n   * @function\n   */\n  get reverse() {\n    return this.reverse_;\n  }\n\n  /**\n   * Reverse geocoder coordinates\n   *\n   * @getter\n   * @function\n   */\n  get geocoderCoords() {\n    return this.controls_[0].geocoderCoords;\n  }\n\n  /**\n   * Text to search\n   * @getter\n   * @function\n   */\n  get requestStreet() {\n    return this.controls_[0].requestStreet;\n  }\n\n  /**\n   * Text to search\n   * @getter\n   * @function\n   */\n  get locationID() {\n    return this.controls_[0].locationID;\n  }\n\n  /**\n   * Get the API REST Parameters of the plugin\n   *\n   * @function\n   * @public\n   * @api\n   */\n  getAPIRest() {\n    return `${this.name}=${this.servicesToSearch}*${this.maxResults}*${this.noProcess}*${this.countryCode}*${this.resultVisibility}*${this.isCollapsed}*${this.collapsible}*${this.position}*${this.reverse}*${this.requestStreet.replace(/&/g, '^')}*${this.locationID}*${this.geocoderCoords}*${this.zoom}*${this.searchPosition}*${this.pointStyle}`;\n  }\n\n  /**\n   * This function destroys this plugin\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  destroy() {\n    this.map_.removeControls(this.controls_);\n    this.map_ = null;\n    this.control_ = null;\n    this.controls_ = null;\n    this.panel_ = null;\n  }\n}\n","import M$plugin$IGNSearch from './/facade/js/ignsearch';\nimport M$control$IGNSearchControl from './/facade/js/ignsearchcontrol';\nimport M$impl$control$IGNSearchControl from './/impl/ol/js/ignsearchcontrol';\n\nif (!window.M.plugin) window.M.plugin = {};\nif (!window.M.control) window.M.control = {};\nif (!window.M.impl) window.M.impl = {};\nif (!window.M.impl.control) window.M.impl.control = {};\nwindow.M.plugin.IGNSearch = M$plugin$IGNSearch;\nwindow.M.control.IGNSearchControl = M$control$IGNSearchControl;\nwindow.M.impl.control.IGNSearchControl = M$impl$control$IGNSearchControl;\n"],"sourceRoot":""}