{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/templates/ignsearch.html","webpack:///./src/templates/results.html","webpack:///./src/impl/ol/js/ignsearchcontrol.js","webpack:///./src/facade/js/ignsearchcontrol.js","webpack:///./src/facade/js/i18n/language.js","webpack:///./src/facade/js/constants.js","webpack:///./src/facade/js/ignsearch.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","typingTimer","IGNSearchControl","_M$impl$Control","_inherits","M","impl","Control","_super","_createSuper","_classCallCheck","apply","arguments","map","html","_get","_getPrototypeOf","scale","wmts3857scales","newScale","reduce","prev","curr","Math","abs","olView","this","facadeMap_","getMapImpl","getView","newResolution","getMaxResolution","pow","indexOf","setResolution","coordinates","source","destiny","ol","proj","getTransform","transformFunc","translations","en","es","getLang","res","language","getTranslation","lang","ignsearch","getValue","keyPath","length","undefined","translation","utils","isNullOrEmpty","console","warn","concat","split","current","_M$Control","servicesToSearch","maxResults","noProcess","countryCode","urlCandidates","urlFind","urlReverse","urlPrefix","urlAssistant","urlDispatcher","resultVisibility","reverse","locationID","requestStreet","geocoderCoords","zoom","searchPosition","pointStyle","nomenclatorSearchType","_this","isUndefined","IGNSearchImplControl","exception","resultVisibility_","reverseActivated","urlParse","_this2","destroyMapLayers","Promise","success","template","compileSync","vars","deleteresults","obtener","direccion","tooltip_input","resultsBox","querySelector","searchInput","addEventListener","clearResultsAndGeometry","e","createTimeout","clearTimeout","activateDeactivateReverse","document","clearResults","clickReverseEvent","on","evt","CLICK","showReversePopUp","changePlaceholder","style","display","ADDED_TO_MAP","point","Point","radius","icon","form","class","rotation","rotate","offset","color","opacity","simple","Polygon","fill","drawNomenclatorResult","proxy","remote","then","geoJsonData","text","substring","removeLayers","clickedElementLayer","featureJSON","JSON","parse","geometry","fixCoordinatesPath","properties","lat","lng","layer","GeoJSON","type","features","displayInLayerSwitcher","createGeometryStyles","setStyle","setZIndex","addLayers","fullAddress","createFullAddress","perfectResult","state","showSearchPopUp","fake","err","reprojCoords","getImpl","reproject","getProjection","code","coord","window","alert","getLayers","removePopup","_this3","origin","etrs89pointCoordinates","params","urlToGet","mapCoordinates","dataCoordinates","returnData","showPopUp","_this4","setTimeout","searchInputValue","control","_this5","firstResult","target","replace","searchValue","innerHTML","classList","add","fontSize","nomenclatorCandidates","geocoderCandidates","regExpCoord","test","searchCoordinates","nomenclatorFinished","candidatesFinished","getNomenclatorData","showCandidatesResults","getCandidatesData","_this6","allCandidates","j","push","remove","parragraph","createElement","infoMsg","createTextNode","appendChild","compiledResult","results","places","elementList","querySelectorAll","forEach","listElement","goToLocation","item","click","_this7","datosCoordenadas","urlSinJSON","geoJsonData2","includes","hol","numFirstValue","val","stroke","width","zoomInLocation","popup","jsonResult","via","tip_via","address","portal","portalNumber","muni","toUpperCase","locationId","_this8","zoomIn","requestPlace","addParameters","request","query","sourcename","outputformat","latLngString","location","resultTitle","title","latLngArray","latitude","parseFloat","longitude","newGeojson","inputValue","resultsArray","_this9","newInputVal","encodeURIComponent","resolve","_this10","thisElement","splice","elem","cps","elementsData","_this11","id","element","getAttribute","parenthesisIndex","_this12","currentElement","selectedObject","findClickedItem","getFindData","drawGeocoderResultProv","drawGeocoderResult","service","_this13","resultsList","getElementById","Vector","calculateMaxExtent","extent","setBbox","setScale","setZoom","fire","filter","feature","setOfCoordinates","flag","placeholder","border","src","concatUrlPaths","config","THEME_URL","exactResult","exitState","destinyProj","destinySource","newCoordinates","mapcoords","featureCoordinates","addTab","featureTabOpts","content","toFixed","getPopup","Popup","myPopUp","panMapIfOutOfView","addPopup","geographicNameType","IGNSEARCH_TYPES_CONFIGURATION","IGNSearch","_M$Plugin","Plugin","options","map_","controls_","isCollapsed","collapsible","position","tooltip_","tooltip","reverse_","locationID_","requestStreet_","isString","Number","geocoderCoords_","zoom_","parseInt","panel_","ui","Panel","collapsed","className","collapsedButtonClass","addControls","addPanels","setResultVisibility","removeControls","control_","plugin","M$plugin$IGNSearch","M$control$IGNSearchControl","M$impl$control$IGNSearchControl"],"mappings":"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","file":"ignsearch.ol.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","module.exports = \"<div id=\\\"div-contenedor\\\" class=\\\"m-control m-container m-ignsearch\\\" title=\\\"\\\">\\n    <div class=\\\"search-panel\\\">\\n        <input type=\\\"text\\\" id=\\\"m-ignsearch-search-input\\\" class=\\\"m-input-search\\\" title=\\\"{{translations.tooltip_input}}\\\" placeholder=\\\"{{translations.direccion}}\\\" />\\n        <button id=\\\"m-ignsearch-locate-button\\\" title=\\\"{{translations.obtener}}\\\">\\n            <span class=\\\"icon-locate\\\" />\\n        </button>\\n        <button id=\\\"m-ignsearch-clear-button\\\" class=\\\"m-button-limpiar\\\" title=\\\"{{translations.deleteresults}}\\\">\\n            <span class=\\\"icon-remove\\\" />\\n        </button>\\n    </div>\\n    <div id=\\\"m-ignsearch-results\\\">\\n        <!-- Here goes the list of search results -->\\n    </div>\\n</div>\\n\";","module.exports = \"<ul id=\\\"m-ignsearch-results-list\\\">\\n    {{#each places}}\\n        {{#if this.address}}\\n            {{#printType this.type this.address this.id this.municipality this.cps}}\\n            {{/printType}}\\n        {{else}}\\n            {{#printType this.type this.title this.id this.municipality this.cps}}\\n            {{/printType}}\\n        {{/if}}\\n    {{/each}}\\n</ul>\\n\";","/**\n * @module M/impl/control/IGNSearchControl\n */\nexport default class IGNSearchControl extends M.impl.Control {\n  /**\n   * This function adds the control to the specified map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the plugin\n   * @param {HTMLElement} html of the plugin\n   * @api stable\n   */\n  addTo(map, html) {\n    super.addTo(map, html);\n  }\n  /**\n   * This function sets a new scale to the map.\n   * Developed for WGS 84 / Pseudo - Mercator 3857 projection.\n   * @private\n   * @function\n   */\n  setScale(scale) {\n    const wmts3857scales = [\n      559082264.0287178,\n      279541132.0143589,\n      139770566.0071794,\n      69885283.00358972,\n      34942641.50179486,\n      17471320.75089743,\n      8735660.375448715,\n      4367830.187724357,\n      2183915.093862179,\n      1091957.546931089,\n      545978.7734655447,\n      272989.3867327723,\n      136494.6933663862,\n      68247.34668319309,\n      34123.67334159654,\n      17061.83667079827,\n      8530.918335399136,\n      4265.459167699568,\n      2132.729583849784,\n    ];\n    // const wmts3857resolutions = [\n    //   156543.0339280410,\n    //   78271.51696402048,\n    //   39135.75848201023,\n    //   19567.87924100512,\n    //   9783.939620502561,\n    //   4891.969810251280,\n    //   2445.984905125640,\n    //   1222.992452562820,\n    //   611.4962262814100,\n    //   305.7481131407048,\n    //   152.8740565703525,\n    //   76.43702828517624,\n    //   38.21851414258813,\n    //   19.10925707129406,\n    //   9.554628535647032,\n    //   4.777314267823516,\n    //   2.388657133911758,\n    //   1.194328566955879,\n    //   0.5971642834779395,\n    // ];\n    // Finds closest standard scale\n    const newScale = wmts3857scales.reduce((prev, curr) => {\n      return (Math.abs(curr - scale) < Math.abs(prev - scale) ? curr : prev);\n    });\n    const olMap = this.facadeMap_.getMapImpl();\n    const olView = olMap.getView();\n    const newResolution = olView.getMaxResolution() / (2 ** wmts3857scales.indexOf(newScale));\n    olView.setResolution(newResolution);\n    // 4.777314267823516); // resolution for scale 17016, table page 120\n    // const dpiToCM = M.units.DOTS_PER_INCH / 2.54;\n    // const resolution = (scale / dpiToCM) / 100;\n    // olView.setResolution(resolution);\n  }\n  /**\n   * This function reprojects given coordinates to given projection.\n   * @private\n   * @function\n   * @param { Array <number> } coordinates - [x,y]\n   * @param { string } source - 'EPSG:4326'\n   * @param { string } destiny - 'EPSG:4326'\n   */\n  reproject(coordinates, source, destiny) {\n    const transformFunc = ol.proj.getTransform(source, destiny);\n    return transformFunc(coordinates);\n  }\n}\n","/**\n * @module M/control/IGNSearchControl\n */\nimport IGNSearchImplControl from '../../impl/ol/js/ignsearchcontrol';\nimport template from '../../templates/ignsearch';\nimport results from '../../templates/results';\nimport { getValue } from './i18n/language';\n\nlet typingTimer;\n/**\n * @classdesc\n * This class creates an input for searching locations on a map.\n * It uses Instituto Geográfico Nacional services Geocoder and Nomenclator\n * to search user's input location and return coordinates on click.\n */\nexport default class IGNSearchControl extends M.Control {\n  /*\n   * @constructor\n   * @extends {M.Control}\n   * @api\n   */\n  constructor(\n    servicesToSearch,\n    maxResults,\n    noProcess,\n    countryCode,\n    urlCandidates,\n    urlFind,\n    urlReverse,\n    urlPrefix,\n    urlAssistant,\n    urlDispatcher,\n    resultVisibility,\n    reverse,\n    locationID,\n    requestStreet,\n    geocoderCoords,\n    zoom,\n    searchPosition,\n    pointStyle,\n    nomenclatorSearchType,\n  ) {\n    if (M.utils.isUndefined(IGNSearchImplControl)) {\n      M.exception('La implementación usada no puede crear controles IGNSearchControl');\n    }\n    const impl = new IGNSearchImplControl();\n    super(impl, 'IGNSearch');\n    // Class properties\n    /**\n     * This variable indicates which services should be searched\n     * (geocoder, nomenclator or both)\n     * @private\n     * @type {string} - 'g' | 'n' | 'gn'\n     */\n    this.servicesToSearch = servicesToSearch;\n    /**\n     * This variable sets the maximun results returned by a service\n     * (if both services are searched the maximum results will be twice this number)\n     * @private\n     * @type {number}\n     */\n    this.maxResults = maxResults;\n    /**\n     * This variables indicates which entities shouldn't be searched\n     * @private\n     * @type {string} - 'municipio' | 'poblacion' | 'toponimo' | 'municipio,poblacion' | etc\n     */\n    this.noProcess = noProcess;\n    /**\n     * This variable indicates the country code.\n     * @private\n     * @type {string} - 'es'\n     */\n    this.countryCode = countryCode;\n    /**\n     * This variable indicates Geocoder Candidates service url\n     * @private\n     * @type {string}\n     */\n    this.urlCandidates = urlCandidates;\n    /**\n     * This variable indicates Geocoder Find service url\n     * @private\n     * @type {string}\n     */\n    this.urlFind = urlFind;\n    /**\n     * This variable indicates Geocoder Reverse service url\n     * @private\n     * @type {string}\n     */\n    this.urlReverse = urlReverse;\n    /**\n     * This variable indicates Nomenclator url prefix\n     * @private\n     * @type {string}\n     */\n    this.urlPrefix = urlPrefix;\n    /**\n     * This variable indicates Nomenclator SearchAssistant service url\n     * @private\n     * @type {string}\n     */\n    this.urlAssistant = urlAssistant;\n    /**\n     * This variable indicates Nomenclator Dispatcher service url\n     * @private\n     * @type {string}\n     */\n    this.urlDispatcher = urlDispatcher;\n    /**\n     * This variable indicates whether result geometry should be drawn on map.\n     * @private\n     * @type {boolean}\n     */\n    this.resultVisibility_ = resultVisibility;\n    /**\n     * This variable indicates which entity types should be searched on Nomenclator service.\n     * @private\n     * @type {Array<string>}\n     */\n    this.nomenclatorSearchType = nomenclatorSearchType;\n    /**\n     * Text to search\n     * @private\n     * @type {string}\n     */\n    this.searchPosition = searchPosition;\n    /**\n     * This variable indicates whether reverse geocoder button should be available.\n     * @private\n     * @type {Boolean}\n     */\n    this.reverse = reverse;\n    /**\n     * This variable indicates whether reverse geocoder button is activated.\n     * @private\n     * @type {Boolean}\n     */\n    this.reverseActivated = false;\n    /**\n     * Text to search\n     * @private\n     * @type {string}\n     */\n    this.locationID = locationID;\n    /**\n     * Text to search\n     * @private\n     * @type {string}\n     */\n    this.requestStreet = requestStreet;\n    /**\n     * Reverse geocoder coordinates\n     * @private\n     * @type {string}\n     */\n    this.geocoderCoords = geocoderCoords;\n\n    /**\n     * Zoom\n     *\n     * @private\n     * @type {number}\n     */\n    this.zoom = zoom;\n\n    /**\n     * Reverse geocoder coordinates\n     * @private\n     * @type {string}\n     */\n    this.urlParse = null;\n\n    /**\n     * This variable indicates Nomenclator url prefix\n     * @private\n     * @type {string}\n     */\n    this.pointStyle = pointStyle;\n  }\n  /**\n   * This function creates the view\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the control\n   * @api\n   */\n  createView(map) {\n    this.map = map;\n    this.destroyMapLayers();\n    return new Promise((success) => {\n      const html = M.template.compileSync(template, {\n        vars: {\n          translations: {\n            deleteresults: getValue('deleteresults'),\n            obtener: getValue('obtener'),\n            direccion: getValue('direccion'),\n            tooltip_input: getValue('tooltip_input'),\n          },\n        },\n      });\n      this.html = html;\n      this.resultsBox = html.querySelector('#m-ignsearch-results');\n      this.searchInput = this.html.querySelector('#m-ignsearch-search-input');\n      html.querySelector('#m-ignsearch-clear-button').addEventListener('click', this.clearResultsAndGeometry.bind(this));\n      html.querySelector('#m-ignsearch-search-input').addEventListener('keyup', e => this.createTimeout(e));\n      html.querySelector('#m-ignsearch-search-input').addEventListener('keydown', () => {\n        clearTimeout(typingTimer);\n      });\n      html.querySelector('#m-ignsearch-search-input').addEventListener('keydown', () => {\n        clearTimeout(typingTimer);\n      });\n      html.querySelector('#m-ignsearch-locate-button').addEventListener('click', this.activateDeactivateReverse.bind(this));\n      document.querySelector('.ign-search-panel>.m-panel-btn').addEventListener('click', this.clearResults.bind(this));\n      this.clickReverseEvent = this.map.on(M.evt.CLICK, e => this.showReversePopUp(e));\n      this.changePlaceholder();\n      if (!this.reverse) {\n        html.querySelector('#m-ignsearch-locate-button').style.display = 'none';\n      }\n      this.on(M.evt.ADDED_TO_MAP, () => {\n        if (this.locationID && this.locationID.length > 0) {\n          this.point = new M.style.Point({\n            radius: 5,\n            icon: {\n              form: 'none',\n              class: 'g-cartografia-pin',\n              radius: 12,\n              rotation: 0,\n              rotate: false,\n              offset: [0, -12],\n              color: '#f00',\n              opacity: 1,\n            },\n          });\n          this.simple = new M.style.Polygon({\n            fill: {\n              color: 'black',\n              opacity: 0,\n            },\n          });\n          this.drawNomenclatorResult(this.locationID, false);\n        }\n        if (this.requestStreet && this.requestStreet.length > 0) {\n          M.proxy(false);\n          M.remote.get(this.requestStreet).then((res) => {\n            const geoJsonData = res.text.substring(9, res.text.length - 1);\n            this.map.removeLayers(this.clickedElementLayer);\n            const featureJSON = JSON.parse(geoJsonData);\n            featureJSON.geometry.coordinates = this.fixCoordinatesPath(featureJSON);\n            // Center coordinates\n            this.coordinates = `${featureJSON.properties.lat}, ${featureJSON.properties.lng}`;\n            // New layer with geometry\n            this.clickedElementLayer = new M.layer.GeoJSON({\n              name: getValue('searchresult'),\n              source: {\n                type: 'FeatureCollection',\n                features: [featureJSON],\n              },\n            }, { displayInLayerSwitcher: false });\n            this.clickedElementLayer.displayInLayerSwitcher = false;\n\n            this.createGeometryStyles();\n\n            if (featureJSON.geometry.type === 'Point') {\n              this.clickedElementLayer.setStyle(this.point);\n            }\n\n            // Change zIndex value\n            this.clickedElementLayer.setZIndex(9999999999999999999);\n\n            // Stops showing polygon geometry\n            if (!this.resultVisibility_) {\n              this.clickedElementLayer.setStyle(this.simple);\n            }\n            this.map.addLayers(this.clickedElementLayer);\n            // show popup for streets\n            if (featureJSON.properties.type === 'callejero' || featureJSON.properties.type === 'portal') {\n              const fullAddress = this.createFullAddress(featureJSON.properties);\n\n              const coordinates = [featureJSON.properties.lat, featureJSON.properties.lng];\n              const perfectResult = featureJSON.properties.state;\n              this.showSearchPopUp(fullAddress, coordinates, perfectResult, { fake: true });\n            }\n\n            M.proxy(true);\n          }).catch((err) => {\n            M.proxy(true);\n          });\n        }\n\n        if (this.geocoderCoords && this.geocoderCoords.length === 2) {\n          this.activateDeactivateReverse();\n          const reprojCoords = this.getImpl().reproject(this.geocoderCoords, 'EPSG:4326', map.getProjection().code);\n          this.showReversePopUp({\n            coord: reprojCoords,\n            fake: true,\n          });\n        }\n      });\n\n      // eslint-disable-next-line no-alert\n      window.alert('Este plugin está obsoleto. Por favor, utilice la nueva versión del mismo: IGNSearchLocator');\n      success(html);\n    });\n  }\n\n  /**\n   * This function remove search layers.\n   *\n   * @public\n   * @function\n   * @api\n   *\n   */\n  destroyMapLayers() {\n    for (let i = 0; i < this.map.getLayers().length; i += 1) {\n      if (this.map.getLayers()[i].name === getValue('searchresult')) {\n        this.map.removeLayers(this.map.getLayers()[i]);\n        this.map.removePopup();\n      }\n    }\n  }\n\n\n  /**\n   * This function toggles reverse geocoder button activation.\n   *\n   * @public\n   * @function\n   * @api\n   *\n   */\n  activateDeactivateReverse() {\n    if (!this.reverseActivated) {\n      this.reverseActivated = true;\n      document.querySelector('#m-ignsearch-locate-button span').style.color = '#71a7d3';\n    } else {\n      this.reverseActivated = false;\n      document.querySelector('#m-ignsearch-locate-button span').style.color = '#7A7A73';\n    }\n  }\n  /**\n   * This function shows information tooltip on clicked point.\n   * @param {Event} e - Event\n   */\n  showReversePopUp(e) {\n    if (this.reverseActivated) {\n      // Reproject coordinates to ETRS89 on decimal grades (+ North latitude and East longitude)\n      const origin = this.map.getProjection().code;\n      const destiny = 'EPSG:4258';\n      const etrs89pointCoordinates = this.getImpl()\n        .reproject([e.coord[0], e.coord[1]], origin, destiny);\n      // Params:\n      // lon, lat\n      // type (only if refcatastral) = 'refcatastral'\n      const params = `lon=${etrs89pointCoordinates[0]}&lat=${etrs89pointCoordinates[1]}`;\n      const urlToGet = `${this.urlReverse}?${params}`;\n      const mapCoordinates = e.coord;\n      this.geocoderCoords = etrs89pointCoordinates;\n      const dataCoordinates = [etrs89pointCoordinates[1], etrs89pointCoordinates[0]];\n      let fullAddress = '';\n      M.proxy(false);\n      M.remote.get(urlToGet).then((res) => {\n        if (res.text !== null) {\n          const returnData = JSON.parse(res.text);\n          fullAddress = this.createFullAddress(returnData);\n        } else {\n          fullAddress = getValue('exception.exists');\n        }\n        this.showPopUp(fullAddress, mapCoordinates, dataCoordinates, null, true, e);\n      });\n\n      M.proxy(true);\n    }\n  }\n\n  /**\n   * This function sets a timeout between keypress and search.\n   * @public\n   * @function\n   * @param {e} event that triggers the method\n   * @api\n   */\n  createTimeout(e) {\n    clearTimeout(typingTimer);\n    typingTimer = setTimeout(() => this.searchInputValue(e), 500);\n  }\n  /**\n   * This function gets activation button\n   *\n   * @public\n   * @function\n   * @param {HTML} html of control\n   * @api\n   */\n  getActivationButton(html) {\n    return html.querySelector('.m-ignsearch button');\n  }\n  /**\n   * This function compares controls\n   *\n   * @public\n   * @function\n   * @param {M.Control} control to compare\n   * @api\n   */\n  equals(control) {\n    return control instanceof IGNSearchControl;\n  }\n  /**\n   * This function\n   * 1.- Takes user's input\n   * 2.- Searches for ocurrences on IGN sources\n   * 3.- Returns results as items in a drop-down list (returns address)\n   * 4.- Onclick on an item goes to its coordinates\n   * @public\n   * @function\n   * @param {event} e - event that triggers this method\n   * @api\n   */\n  searchInputValue(e, firstResult = false) {\n    // const { value } = e.target;\n    const value = e.target.value.replace(',', ' ');\n    this.searchValue = value;\n    if (value.length <= 2) {\n      this.resultsBox.innerHTML = '';\n    } else {\n      this.resultsBox.innerHTML = '';\n      // Adds animation class during loading\n      this.resultsBox.classList.add('g-cartografia-spinner');\n      this.resultsBox.style.fontSize = '24px';\n\n      this.nomenclatorCandidates = [];\n      this.geocoderCandidates = [];\n\n      const regExpCoord = /[+-]?\\d+\\.\\d+(\\s|,|(,\\s))[+-]?\\d+\\.\\d+/;\n      // Checks if input content represents coordinates, else searches text\n      if (regExpCoord.test(value)) {\n        // searches coordinates point (TO DO) if coordinates are entered\n        this.searchCoordinates(value);\n      } else {\n        // saves on allCandidates search results from Nomenclator (CommunicationPoolservlet)\n        this.nomenclatorFinished = false;\n        this.candidatesFinished = false;\n        this.getNomenclatorData(value, this.nomenclatorCandidates).then(() => {\n          // saves on allCandidates search results from CartoCiudad (geocoder)\n          this.nomenclatorFinished = true;\n          this.showCandidatesResults(firstResult);\n        });\n\n        this.getCandidatesData(value, this.geocoderCandidates).then(() => {\n          this.candidatesFinished = true;\n          this.showCandidatesResults(firstResult);\n        });\n      }\n    }\n  }\n\n  showCandidatesResults(firstResult) {\n    this.allCandidates = [];\n    for (let i = 0; i < this.searchPosition.split(',').length; i += 1) {\n      if (this.searchPosition.split(',')[i] === 'nomenclator') {\n        for (let j = 0; j < this.nomenclatorCandidates.length; j += 1) {\n          this.allCandidates.push(this.nomenclatorCandidates[j]);\n        }\n      }\n      if (this.searchPosition.split(',')[i] === 'geocoder') {\n        for (let j = 0; j < this.geocoderCandidates.length; j += 1) {\n          this.allCandidates.push(this.geocoderCandidates[j]);\n        }\n      }\n    }\n\n    // Service doesn't find results\n    if (this.allCandidates.length === 0 && this.nomenclatorFinished && this.candidatesFinished) {\n      // Clears previous search\n      this.resultsBox.innerHTML = '';\n      // remove animation class and return to normal font size after loading\n      this.resultsBox.classList.remove('g-cartografia-spinner');\n      this.resultsBox.style.fontSize = '1em';\n      const parragraph = document.createElement('p');\n      const infoMsg = document.createTextNode(getValue('exception.results'));\n      parragraph.classList.add('m-ignsearch-noresults');\n      parragraph.appendChild(infoMsg);\n      this.resultsBox.appendChild(parragraph);\n    } else if (this.allCandidates.length > 0) {\n      // Clears previous search\n      this.resultsBox.innerHTML = '';\n      // remove animation class and return to normal font size after loading\n      this.resultsBox.classList.remove('g-cartografia-spinner');\n      this.resultsBox.style.fontSize = '1em';\n      const compiledResult = M.template.compileSync(results, {\n        vars: {\n          places: this.allCandidates,\n        },\n      });\n\n      const elementList = compiledResult.querySelectorAll('li');\n      elementList.forEach((listElement) => {\n        listElement.addEventListener('click', () => {\n          this.goToLocation(listElement);\n        });\n      });\n      if (firstResult === true && elementList.length > 0) {\n        elementList.item(0).click();\n      }\n\n      this.resultsBox.appendChild(compiledResult);\n    }\n  }\n\n  /**\n   * This function removes last search layer and adds new layer with current result (from geocoder)\n   * features to map, zooms in result, edits popup information and shows a message saying\n   *  if it's a perfect result or an approximation.\n   * @public\n   * @function\n   * @param {Object} geoJsonData - clicked result object\n   * @api\n   */\n  drawGeocoderResultProv(geoJsonData) {\n    this.map.removeLayers(this.clickedElementLayer);\n    M.proxy(false);\n    M.remote.get(this.urlParse).then((res) => {\n      const urlSinJSON = res.text.substring(9, res.text.length - 1);\n\n      let geoJsonData2 = geoJsonData;\n\n      let datosGeometria;\n      let datosCoordenadas;\n      if (urlSinJSON.includes('MULTIPOLYGON (((')) {\n        if (geoJsonData2.includes('\"type\":\"MultiPolygon\"')) {\n          datosGeometria = urlSinJSON.split('(((');\n          datosCoordenadas = datosGeometria[1].split('), (');\n\n\n          if (geoJsonData2.includes(']]]')) {\n            geoJsonData2 = geoJsonData2.replace(']]]', ']]]]');\n          }\n\n          for (let i = 0; i < datosCoordenadas.length; i += 1) {\n            const hol = datosCoordenadas[i].substring(0, 9).replace('(', '');\n\n            if (geoJsonData.includes('[[['.concat(hol))) {\n              geoJsonData2 = geoJsonData2.replace('[[['.concat(hol), '[[[['.concat(hol));\n            } else if (geoJsonData.includes(']],[['.concat(hol))) {\n              geoJsonData2 = geoJsonData2.replace(']],[['.concat(hol), ']]],[[['.concat(hol));\n            } else if (geoJsonData.includes('],['.concat(hol))) {\n              geoJsonData2 = geoJsonData2.replace('],['.concat(hol), ']],[['.concat(hol));\n            }\n          }\n        }\n      } else if (urlSinJSON.includes('POLYGON ((')) {\n        if (geoJsonData2.includes('\"type\":\"Polygon\"')) {\n          datosGeometria = urlSinJSON.split('((');\n          datosCoordenadas = datosGeometria[1].split('), (');\n\n\n          if (geoJsonData2.includes(']]')) {\n            geoJsonData2 = geoJsonData2.replace(']]', ']]]');\n          }\n\n          geoJsonData2 = geoJsonData2.replace('Polygon', 'MultiPolygon');\n\n          for (let i = 0; i < datosCoordenadas.length; i += 1) {\n            const numFirstValue = datosCoordenadas[i].split(' ');\n            const val = datosCoordenadas[i].substring(0, numFirstValue[0].length).replace('(', '');\n\n            if (geoJsonData.includes('[[['.concat(val))) {\n              geoJsonData2 = geoJsonData2.replace('[[['.concat(val), '[[[['.concat(val));\n            } else if (geoJsonData.includes('],['.concat(val))) {\n              geoJsonData2 = geoJsonData2.replace('],['.concat(val), ']],[['.concat(val));\n            }\n          }\n        } else if (geoJsonData2.includes('\"type\":\"MultiPolygon\"')) {\n          geoJsonData2 = geoJsonData2.replace(']]],[[', ']],[[');\n          geoJsonData2 = geoJsonData2.replace('\"type\":\"MultiPolygon\"', '\"type\":\"Polygon\"');\n        }\n      }\n\n      if (geoJsonData2.includes('MultiMultiPolygon')) {\n        geoJsonData2 = geoJsonData2.replace('MultiMultiPolygon', 'MultiPolygon');\n      }\n      const featureJSON = JSON.parse(geoJsonData2);\n\n      // featureJSON.geometry.coordinates = this.fixCoordinatesPath(featureJSON);\n      // Center coordinates\n      this.coordinates = `${featureJSON.properties.lat}, ${featureJSON.properties.lng}`;\n      // New layer with geometry\n      this.clickedElementLayer = new M.layer.GeoJSON({\n        name: getValue('searchresult'),\n        source: {\n          type: 'FeatureCollection',\n          features: [featureJSON],\n        },\n      }, { displayInLayerSwitcher: false });\n      this.clickedElementLayer.displayInLayerSwitcher = false;\n\n      if (featureJSON.geometry.type === 'Point') {\n        this.clickedElementLayer.setStyle(this.point);\n      }\n\n      if (featureJSON.geometry.type.indexOf('Polygon') > -1) {\n        this.clickedElementLayer.setStyle(new M.style.Polygon({\n          fill: {\n            color: '#3399CC',\n            opacity: 0,\n          },\n          stroke: {\n            color: '#3399CC',\n            width: 2,\n          },\n          radius: 5,\n        }));\n      }\n\n      // Change zIndex value\n      this.clickedElementLayer.setZIndex(9999999999999999999);\n\n      // Stops showing polygon geometry\n      if (!this.resultVisibility_) {\n        this.clickedElementLayer.setStyle(this.simple);\n      }\n      this.map.addLayers(this.clickedElementLayer);\n      this.zoomInLocation('g', featureJSON.geometry.type, this.zoom);\n      // show popup for streets\n      if (featureJSON.properties.type === 'callejero' ||\n        featureJSON.properties.type === 'portal') {\n        const fullAddress = this.createFullAddress(featureJSON.properties);\n\n        const coordinates = [featureJSON.properties.lat, featureJSON.properties.lng];\n        const perfectResult = featureJSON.properties.state;\n        this.showSearchPopUp(fullAddress, coordinates, perfectResult);\n      }\n    });\n\n    M.proxy(true);\n  }\n\n  drawGeocoderResult(geoJsonData) {\n    this.map.removeLayers(this.clickedElementLayer);\n    const featureJSON = JSON.parse(geoJsonData);\n    featureJSON.geometry.coordinates = this.fixCoordinatesPath(featureJSON);\n    // Center coordinates\n    this.coordinates = `${featureJSON.properties.lat}, ${featureJSON.properties.lng}`;\n    // New layer with geometry\n    this.clickedElementLayer = new M.layer.GeoJSON({\n      name: getValue('searchresult'),\n      source: {\n        type: 'FeatureCollection',\n        features: [featureJSON],\n      },\n    }, { displayInLayerSwitcher: false });\n    this.clickedElementLayer.displayInLayerSwitcher = false;\n    if (featureJSON.geometry.type === 'Point') {\n      this.clickedElementLayer.setStyle(this.point);\n    }\n\n    // Change zIndex value\n    this.clickedElementLayer.setZIndex(9999999999999999999);\n\n    // Stops showing polygon geometry\n    if (!this.resultVisibility_) {\n      this.clickedElementLayer.setStyle(this.simple);\n    } else if (featureJSON.geometry.type.indexOf('Polygon') > -1) {\n      this.clickedElementLayer.setStyle(new M.style.Polygon({\n        fill: {\n          color: '#3399CC',\n          opacity: 0,\n        },\n        stroke: {\n          color: '#3399CC',\n          width: 2,\n        },\n        radius: 5,\n      }));\n    }\n\n    this.map.addLayers(this.clickedElementLayer);\n    this.zoomInLocation('g', featureJSON.geometry.type, this.zoom);\n    // show popup for streets\n    if (featureJSON.properties.type === 'callejero' ||\n      featureJSON.properties.type === 'portal') {\n      const fullAddress = this.createFullAddress(featureJSON.properties);\n      const coordinates = [featureJSON.properties.lat, featureJSON.properties.lng];\n      const perfectResult = featureJSON.properties.state;\n      this.showSearchPopUp(fullAddress, coordinates, perfectResult);\n    } else if (this.popup !== undefined) {\n      this.map.removePopup(this.popup);\n    }\n  }\n\n\n  /**\n   * This function takes data from an entity and returns the complete address\n   * @param {string} jsonResult - json string with entity data\n   */\n  createFullAddress(jsonResult) {\n    const via = (jsonResult.tip_via === null ||\n      jsonResult.tip_via === undefined) ? '' : jsonResult.tip_via;\n    const address = (jsonResult.address === null ||\n      jsonResult.address === undefined) ? '' : jsonResult.address;\n    const portal = (jsonResult.portalNumber === null ||\n      jsonResult.portalNumber === undefined ||\n      jsonResult.portalNumber === 0) ? '' : jsonResult.portalNumber;\n    const muni = (jsonResult.muni === null ||\n      jsonResult.muni === undefined) ? '' : jsonResult.muni;\n    return `${via} ${address} ${portal}, ${muni.toUpperCase()}`;\n  }\n  /**\n   * This function removes last search layer and adds new layer\n   * with current result (from nomenclator) features to map and zooms in result.\n   * @public\n   * @function\n   * @param {string} locationId - id of the location object\n   * @api\n   */\n  drawNomenclatorResult(locationId, zoomIn = true) {\n    this.requestStreet = '';\n    this.requestPlace = M.utils.addParameters(this.urlDispatcher, {\n      request: 'OpenQuerySource',\n      query: `<ogc:Filter><ogc:FeatureId fid=\"${locationId}\"/></ogc:Filter>`,\n      sourcename: `${this.urlPrefix}communicationsPoolServlet/sourceAccessWFS-INSPIRE-NGBE.rdf`,\n      outputformat: 'application/json',\n    });\n    this.locationID = locationId;\n    M.proxy(true);\n    M.remote.get(this.requestPlace).then((res) => {\n      const latLngString = JSON.parse(res.text).results[0].location;\n      const resultTitle = JSON.parse(res.text).results[0].title;\n      const latLngArray = latLngString.split(' ');\n      const latitude = parseFloat(latLngArray[0]);\n      const longitude = parseFloat(latLngArray[1]);\n      this.map.removeLayers(this.clickedElementLayer);\n      const newGeojson = {\n        name: getValue('searchresult'),\n        source: {\n          type: 'FeatureCollection',\n          features: [{\n            type: 'Feature',\n            geometry: {\n              type: 'Point',\n              coordinates: [\n                longitude, latitude,\n              ],\n            },\n            properties: {\n              name: resultTitle,\n            },\n          }],\n        },\n      };\n      this.clickedElementLayer = new M.layer.GeoJSON(newGeojson, { displayInLayerSwitcher: false });\n      this.clickedElementLayer.displayInLayerSwitcher = false;\n      this.clickedElementLayer.setStyle(this.point);\n\n      // Change zIndex value\n      this.clickedElementLayer.setZIndex(9999999999999999999);\n      // Stops showing polygon geometry\n      if (!this.resultVisibility_) {\n        this.clickedElementLayer.setStyle(this.simple);\n      }\n      this.map.addLayers(this.clickedElementLayer);\n      if (zoomIn === true) {\n        this.zoomInLocation('n', 'Point', this.zoom);\n      }\n    });\n  }\n  /**\n   * This function gets user input, searches for coincidences and adds each one to the given array.\n   * @public\n   * @function\n   * @param {string} inputValue search text written by user\n   * @param { Array < Object > } resultsArray search result candidates from IGN services\n   * @api\n   */\n  getCandidatesData(inputValue, resultsArray) {\n    const newInputVal = window.encodeURIComponent(inputValue);\n    return new Promise((resolve) => {\n      if (this.servicesToSearch !== 'n') {\n        let params = `q=${newInputVal}&limit=${this.maxResults + 5}&no_process=${this.noProcess}`;\n        params += `&countrycode=${this.countryCode}&autocancel=true`;\n        const urlToGet = `${this.urlCandidates}?${params}`;\n        M.proxy(false);\n        M.remote.get(urlToGet).then((res) => {\n          const returnData = JSON.parse(res.text.substring(9, res.text.length - 1));\n          for (let i = 0; i < returnData.length; i += 1) {\n            resultsArray.push(returnData[i]);\n          }\n          resolve();\n        });\n\n        M.proxy(true);\n      } else {\n        resolve();\n      }\n    });\n  }\n  /**\n   * This function adds search coincidences on Nomenclator to array\n   * @public\n   * @function\n   * @param {string} inputValue location searched by user\n   * @param {Array <Object>} resultsArray search results\n   * @api\n   */\n  getNomenclatorData(inputValue, resultsArray) {\n    const newInputVal = window.encodeURIComponent(inputValue);\n    return new Promise((resolve) => {\n      if (this.servicesToSearch !== 'g') {\n        const params = `maxresults=${this.maxResults - 5}&name_equals=${newInputVal}`;\n        const urlToGet = `${this.urlAssistant}?${params}`;\n        M.proxy(true);\n        M.remote.get(urlToGet).then((res) => {\n          const temporalData = (res.text !== '' && res.text !== null) ? JSON.parse(res.text) : { results: [] };\n          const returnData = temporalData.results;\n          for (let i = 0; i < returnData.length; i += 1) {\n            // avoid nameplaces not included in this.nomenclatorSearchType\n            if (this.nomenclatorSearchType.indexOf(returnData[i].type) >= 0) {\n              resultsArray.push(returnData[i]);\n            }\n          }\n          // move 'Núcleos de población' to start\n          for (let i = 0; i < resultsArray.length; i += 1) {\n            if (resultsArray[i].type === 'Núcleos de población') {\n              const thisElement = resultsArray.splice(i, 1);\n              resultsArray.splice(0, 0, thisElement);\n            }\n          }\n\n          resultsArray.forEach((elem) => {\n            // eslint-disable-next-line no-param-reassign\n            elem.cps = true;\n          });\n\n          resolve();\n        });\n      } else {\n        resolve();\n      }\n    });\n  }\n  /**\n   * This function gets address of selected item and returns geojson data (with coordinates)\n   * Only for Geocoder service\n   * @public\n   * @function\n   * @param {string} listElement element from drop-down list(\"li\")\n   * @param {Array <Object> } elementsData search results\n   * @api\n   */\n  getFindData(listElement, elementsData) {\n    return new Promise((resolve) => {\n      let id;\n      let type;\n      let portal;\n      let via;\n      let address;\n      elementsData.forEach((element) => {\n        if (listElement.getAttribute('id') === element.id) {\n          id = `&id=${element.id}`;\n          type = `&type=${element.type}`;\n          portal = (element.portalNumber !== 0 && element.portalNumber !== undefined) ?\n            `&portal=${element.portalNumber}` : '';\n          via = element.tip_via !== '' ? `&tip_via=${element.tip_via}` : '';\n        }\n      });\n      address = listElement.innerHTML;\n      if (listElement.innerHTML.includes('(')) {\n        const parenthesisIndex = listElement.innerHTML.indexOf('(');\n        address = listElement.innerHTML.substring(0, parenthesisIndex);\n      }\n      const params = `${type}${via}${id}${portal}&outputformat=geojson`;\n      // const params = `${type}${via}${id}${portal}`;\n\n      const urlToGet = `${this.urlFind}?q=${address}${params}`;\n\n      this.urlParse = urlToGet.replace('&outputformat=geojson', '');\n\n      this.requestStreet = urlToGet;\n      this.locationID = '';\n      M.proxy(false);\n      M.remote.get(urlToGet).then((res) => {\n        const geoJsonData = res.text.substring(9, res.text.length - 1);\n        resolve(geoJsonData);\n      });\n\n      M.proxy(true);\n    });\n  }\n  /**\n   * This function zooms in clicked location and draws geometry\n   * @public\n   * @function\n   * @param {Object} listElement clicked result information\n   * @api\n   */\n  goToLocation(listElement) {\n    const text = listElement.querySelector('#info').innerHTML;\n    this.html.querySelector('#m-ignsearch-search-input').value = text;\n    this.currentElement = listElement; // <li>\n    const selectedObject = this.findClickedItem(listElement, this.allCandidates); // json\n    this.createGeometryStyles();\n    // if item comes from geocoder\n    if (Object.prototype.hasOwnProperty.call(selectedObject, 'address')) {\n      this.getFindData(listElement, this.allCandidates).then((geoJsonData) => {\n        if (geoJsonData.includes('\"tip_via\":null') && (geoJsonData.includes('\"type\":\"Municipio\"') || geoJsonData.includes('\"type\":\"municipio\"') || geoJsonData.includes('\"type\":\"Provincia\"') || geoJsonData.includes('\"type\":\"provincia\"') || geoJsonData.includes('\"type\":\"comunidad autonoma\"'))) {\n          this.drawGeocoderResultProv(geoJsonData);\n          this.map.removePopup();\n        } else {\n          this.drawGeocoderResult(geoJsonData);\n        }\n      });\n    } else { // if item comes from nomenclator\n      this.drawNomenclatorResult(selectedObject.id);\n    }\n    this.resultsBox.innerHTML = '';\n  }\n  /**\n   * This function zooms in MaxExtent of clicked element\n   * @public\n   * @function\n   * @param {string} service { 'g' | 'n' }\n   * @param { string } type of geometry in which we zoom\n   * @api\n   */\n  zoomInLocation(service, type, zoom) {\n    this.resultsList = document.getElementById('m-ignsearch-results-list');\n    if (this.clickedElementLayer instanceof M.layer.Vector) {\n      this.clickedElementLayer.calculateMaxExtent().then((extent) => {\n        this.map.setBbox(extent);\n        if (service === 'n' || type === 'Point') {\n          this.setScale(17061); // last scale requested by our client: 2000\n        }\n        // En el caso de que se haga una búsqueda de Provincias o CCAA, se dejaría el zoom que\n        // calcula el servicio para no afectar en la visualización de la geometría.\n        if (type === 'Point') {\n          this.map.setZoom(zoom);\n        }\n        this.fire('ignsearch:entityFound', [extent]);\n      });\n    }\n  }\n  /**\n   * This function returns clicked location object\n   * @public\n   * @function\n   * @param { string } listElement <li>Location</li>\n   * @param { Array < Object > } allCandidates possible locations\n   * @api\n   */\n  findClickedItem(listElement, allCandidates) {\n    return allCandidates.filter(element => element.id === listElement.getAttribute('id'))[0];\n  }\n  /**\n   * This function fixes path to get to this feature's coordinates\n   * @public\n   * @function\n   * @param {feature} feature with geometry information for the given location\n   * @api\n   */\n  fixCoordinatesPath(feature) {\n    let coordinates;\n    if (feature.geometry.type === 'Point') {\n      coordinates = feature.geometry.coordinates[0][0];\n    } else if (feature.geometry.type === 'MultiPolygon') {\n      coordinates = [feature.geometry.coordinates];\n    } else if (feature.geometry.type === 'LineString') {\n      coordinates = feature.geometry.coordinates[0];\n    } else {\n      coordinates = feature.geometry.coordinates;\n    }\n    return coordinates;\n  }\n\n  /* Given a set of coordinates (lat, long),\n    searches for the corresponding place\n  */\n  searchCoordinates(setOfCoordinates) {\n    // const latLongSeparationRegExp = /(\\s+|,|,\\s)/;\n    // setOfCoordinates.replace(latLongSeparationRegExp, ' ');\n    // const latFromSet = setOfCoordinates.split(' ')[0];\n    // const longFromSet = setOfCoordinates.split(' ')[1];\n    return new Promise((resolve) => {\n      // TODO\n      // if lat,long separation character/s are not a space, it turns into a space\n      // const latLongSeparationRegExp = /(\\s+|,|,\\s)/;\n      // setOfCoordinates.replace(latLongSeparationRegExp, ' ');\n      // const latFromSet = setOfCoordinates.split(' ')[0];\n      // const longFromSet = setOfCoordinates.split(' ')[1];\n      // // geocoder service\n      // const urlToGet = `${this.urlReverse}?lat=${latFromSet}&lon=${longFromSet}`;\n      // M.remote.get(urlToGet).then((res) => {\n      //   const parsedResponse = JSON.parse(res.text);\n      //   const coordinatesSetAddress = parsedResponse.address;\n      //   resolve();\n      // });\n      resolve();\n    });\n  }\n  /**\n   * This function clears drawn geometry from map.\n   * @public\n   * @function\n   * @api\n   */\n  clearResults() {\n    this.searchInput.value = '';\n    this.resultsBox.innerHTML = '';\n    this.searchValue = '';\n  }\n  /**\n   * This function clears input content, results box, popup and shown geometry.\n   * @public\n   * @function\n   * @api\n   */\n  clearResultsAndGeometry() {\n    this.clearResults();\n    if (this.clickedElementLayer !== undefined) {\n      this.clickedElementLayer.setStyle(this.simple);\n      this.map.removeLayers(this.clickedElementLayer);\n    }\n    this.map.removePopup(this.popup, [\n      this.lng,\n      this.lat,\n    ]);\n  }\n  /**\n   * This function sets geometry visibility on map (visible|invisible).\n   * @public\n   * @function\n   * @param {boolean} flag\n   * @api\n   */\n  setResultVisibility(flag) {\n    this.resultVisibility_ = flag;\n  }\n  /**\n   * This function changes input placeholder based on services choice\n   * @public\n   * @function\n   * @api\n   */\n  changePlaceholder() {\n    if (this.servicesToSearch === 'g') {\n      this.searchInput.placeholder = getValue('direccion');\n    } else if (this.servicesToSearch === 'n') {\n      this.searchInput.placeholder = 'Topónimo';\n    }\n  }\n  /**\n   * This function creates some geometry styles.\n   * @public\n   * @function\n   * @api\n   */\n  createGeometryStyles() {\n    // Shows pin on drawn point\n\n    if (this.pointStyle === 'pinBlanco') {\n      this.point = new M.style.Point({\n        radius: 5,\n        icon: {\n          form: 'none',\n          class: 'g-cartografia-pin',\n          radius: 12,\n          rotation: 0,\n          rotate: false,\n          offset: [0, -12],\n          color: '#f00',\n          border: '5px solid green',\n          opacity: 1,\n        },\n      });\n    } else if (this.pointStyle === 'pinRojo') {\n      this.point = new M.style.Point({\n        radius: 5,\n        icon: {\n          src: M.utils.concatUrlPaths([M.config.THEME_URL, '/img/pinign.svg']),\n        },\n      });\n    } else if (this.pointStyle === 'pinMorado') {\n      this.point = new M.style.Point({\n        radius: 5,\n        icon: {\n          src: M.utils.concatUrlPaths([M.config.THEME_URL, '/img/m-pin-24.svg']),\n        },\n      });\n    }\n\n    // Style for hiding geometry\n    this.simple = new M.style.Polygon({\n      fill: {\n        color: 'black',\n        opacity: 0,\n      },\n    });\n  }\n  /**\n    * This\n    function inserts a popUp with information about the searched location\n      (and whether it 's an exact result or an approximation)\n    * @param { string } fullAddress location address(street, portal, etc.)\n    * @param { Array } coordinates latitude[0] and longitude[1] coordinates\n    * @param { boolean } exactResult indicating\n    if the given result is a perfect match\n    */\n  showSearchPopUp(fullAddress, coordinates, exactResult, e = {}) {\n    const destinyProj = this.map.getProjection().code;\n    const destinySource = 'EPSG:4326';\n    const newCoordinates = this.getImpl()\n      .reproject([coordinates[1], coordinates[0]], destinySource, destinyProj);\n\n    let exitState;\n    if (exactResult !== 1) {\n      exitState = getValue('aprox');\n    } else {\n      exitState = getValue('exact');\n    }\n    this.showPopUp(fullAddress, newCoordinates, coordinates, exitState, false, e);\n  }\n  /**\n   * This function inserts a popup on the map with information about its location.\n   * @param { string } fullAddress location address(street, portal, etc.)\n   * @param { Array } mapCoordinates latitude[0] and longitude[1] coordinates on map projection\n   * @param { Array } featureCoordinates latitude[0] and longitude[1] coordinates from feature\n   * @param { string } exitState indicating if the given result is a perfect match\n   */\n  showPopUp(fullAddress, mapcoords, featureCoordinates, exitState = null, addTab = true, e = {}) {\n    const featureTabOpts = { content: '', icon: 'icon-locate' };\n    if (exitState !== null) {\n      featureTabOpts.content += `<div><b>${exitState}</b></div>`;\n    }\n    featureTabOpts.content += `<div>${fullAddress}</div>\n                <div class='ignsearch-popup'>Lat: ${featureCoordinates[0].toFixed(6)}</div>\n                <div class='ignsearch-popup'> Lon: ${featureCoordinates[1].toFixed(6)} </div>`;\n    if (this.map.getPopup() instanceof M.Popup && addTab === true) {\n      this.popup = this.map.getPopup();\n      this.popup.addTab(featureTabOpts);\n    } else {\n      const myPopUp = new M.Popup({ panMapIfOutOfView: !e.fake });\n      myPopUp.addTab(featureTabOpts);\n\n      this.map.addPopup(myPopUp, [\n        mapcoords[0],\n        mapcoords[1],\n      ]);\n      this.popup = myPopUp;\n    }\n    this.lat = mapcoords[1];\n    this.lng = mapcoords[0];\n  }\n  /**\n   * This function sets given scale to map\n   * @public\n   * @function\n   * @param { number } scale to which the map will zoom in\n   *   (5000 if we want 1: 5000)\n   * @api\n   */\n  setScale(scale) {\n    this.getImpl().setScale(scale);\n  }\n}\n","import en from './en';\nimport es from './es';\n\n/**\n * Default object with es and en translate.\n *\n * @const\n * @type {object}\n */\nconst translations = {\n  en,\n  es,\n};\n\nconst getLang = () => {\n  let res = 'es';\n  if (typeof M.language.getLang === 'function') {\n    res = M.language.getLang();\n  }\n\n  return res;\n};\n\n/**\n * This function sets a new language translate.\n * @param {string} lang\n * @param {JSON} json\n * @public\n * @api\n */\nexport const addTranslation = (lang, json) => {\n  translations[lang] = json;\n};\n\n/**\n * This function gets a language translate.\n *\n * @param {string} lang\n * @return {JSON}\n * @public\n * @api\n */\nexport const getTranslation = (lang) => {\n  if (lang === 'es' || lang === 'en') {\n    return translations[lang];\n  }\n  return M.language.getTranslation(lang).ignsearch;\n};\n\n/**\n * This function gets a language value from key\n *\n * @public\n * @param {string}\n * @param {string}\n * @return {string}\n * @public\n * @api\n */\n\nexport const getValue = (keyPath, lang = getLang()) => {\n  const translation = getTranslation(lang);\n  let value = '';\n  if (M.utils.isNullOrEmpty(translation)) {\n    /* eslint-disable no-console */\n    console.warn(`The translation '${lang}' has not been defined.`);\n  } else {\n    value = keyPath.split('.').reduce((prev, current) => prev[current], translation);\n  }\n\n  return value;\n};\n","const geographicNameType = [\n  'Estado',\n  // 'Comunidad autónoma',\n  // 'Ciudad con estatuto de autonomía',\n  // 'Provincia',\n  // 'Municipio',\n  // 'EATIM',\n  'Isla administrativa',\n  'Comarca administrativa',\n  'Jurisdicción',\n  // 'Capital de Estado',\n  // 'Capital de comunidad autónoma y ciudad con estatuto de autonomía',\n  // 'Capital de provincia',\n  // 'Capital de municipio',\n  // 'Capital de EATIM',\n  // 'Entidad colectiva',\n  // 'Entidad menor de población',\n  'Distrito municipal',\n  // 'Barrio',\n  // 'Entidad singular',\n  'Construcción/instalación abierta',\n  'Edificación',\n  'Vértice Geodésico',\n  // 'Hitos de demarcación territorial',\n  // 'Hitos en vías de comunicación',\n  'Alineación montañosa',\n  'Montaña',\n  'Paso de montaña',\n  'Llanura',\n  'Depresión',\n  'Vertientes',\n  'Comarca geográfica',\n  'Paraje',\n  'Elemento puntual del paisaje',\n  'Saliente costero',\n  'Playa',\n  'Isla',\n  'Otro relieve costero',\n  // 'Parque Nacional y Natural',\n  'Espacio protegido restante',\n  // 'Aeropuerto',\n  // 'Aeródromo',\n  // 'Pista de aviación y helipuerto',\n  // 'Puerto de Estado',\n  'Instalación portuaria',\n  // 'Carretera',\n  'Camino y vía pecuaria',\n  // 'Vía urbana',\n  // 'Ferrocarril',\n  'Curso natural de agua',\n  'Masa de agua',\n  'Curso artificial de agua',\n  'Embalse',\n  'Hidrónimo puntual',\n  'Glaciares',\n  'Mar',\n  'Entrante costero y estrecho marítimo',\n  'Relieve submarino',\n];\nexport default geographicNameType;\n","/**\n * @module M/plugin/IGNSearch\n */\nimport '../assets/css/ignsearch';\nimport '../assets/css/fonts';\nimport IGNSearchControl from './ignsearchcontrol';\nimport geographicNameType from './constants';\nimport { getValue } from './i18n/language';\n\nimport es from './i18n/es';\nimport en from './i18n/en';\n\n/** IGNSearch List Control\n*\n* @private\n* @type {object}\n*/\nconst IGNSEARCH_TYPES_CONFIGURATION = [\n  'Estado',\n  // 'Comunidad aut\\u00F3noma',\n  // 'Ciudad con estatuto de autonom\\u00EDa',\n  // 'Provincia',\n  // 'Municipio',\n  // 'EATIM',\n  'Isla administrativa',\n  'Comarca administrativa',\n  'Jurisdicci\\u00F3n',\n  // 'Capital de Estado',\n  // 'Capital de comunidad aut\\u00F3noma y ciudad con estatuto de autonom\\u00EDa',\n  // 'Capital de provincia',\n  // 'Capital de municipio',\n  // 'Capital de EATIM',\n  // 'Entidad colectiva',\n  // 'Entidad menor de poblaci\\u00F3n',\n  // 'Distrito municipal',\n  // 'Barrio',\n  // 'Entidad singular',\n  // 'Construcci\\u00F3n/instalaci\\u00F3n abierta',\n  // 'Edificaci\\u00F3n',\n  'V\\u00E9rtice Geod\\u00E9sico',\n  // 'Hitos de demarcaci\\u00F3n territorial',\n  // 'Hitos en v\\u00EDas de comunicaci\\u00F3n',\n  'Alineaci\\u00F3n monta\\u00F1osa',\n  'Monta\\u00F1a',\n  'Paso de monta\\u00F1a',\n  'Llanura',\n  'Depresi\\u00F3n',\n  'Vertientes',\n  'Comarca geogr\\u00E1fica',\n  'Paraje',\n  'Elemento puntual del paisaje',\n  'Saliente costero',\n  'Playa',\n  'Isla',\n  'Otro relieve costero',\n  // 'Parque Nacional y Natural',\n  // 'Espacio protegido restante',\n  // 'Aeropuerto',\n  // 'Aer\\u00F3dromo',\n  // 'Pista de aviaci\\u00F3n y helipuerto',\n  // 'Puerto de Estado',\n  // 'Instalaci\\u00F3n portuaria',\n  // 'Carretera',\n  // 'Camino y v\\u00EDa pecuaria',\n  // 'V\\u00EDa urbana',\n  // 'Ferrocarril',\n  'Curso natural de agua',\n  'Masa de agua',\n  'Curso artificial de agua',\n  // 'Embalse',\n  'Hidr\\u00F3nimo puntual',\n  'Glaciares',\n  'Mar',\n  'Entrante costero y estrecho mar\\u00EDtimo',\n  'Relieve submarino',\n];\n\nexport default class IGNSearch extends M.Plugin {\n  /**\n   * @classdesc\n   * Main facade plugin object. This class creates a plugin\n   * object which has an implementation Object\n   *\n   * @constructor\n   * @extends {M.Plugin}\n   * @param {Object} impl implementation object\n   * @api\n   */\n  constructor(options) {\n    super();\n    /**\n     * Facade of the map\n     * @private\n     * @type {M.Map}\n     */\n    this.map_ = null;\n\n    /**\n     * Array of controls\n     * @private\n     * @type {Array<M.Control>}\n     */\n    this.controls_ = [];\n\n    /**\n     * This variable indicates which services should be searched\n     * (geocoder, nomenclator or both)\n     * @private\n     * @type {string} - 'g' | 'n' | 'gn'\n     */\n    this.servicesToSearch = options.servicesToSearch || 'gn';\n\n    /**\n     * This variable sets the maximun results returned by a service\n     * (if both services are searched the maximum results will be twice this number)\n     * @private\n     * @type {number}\n     */\n    this.maxResults = options.maxResults || 10;\n\n    /**\n     * This variables indicates which entities shouldn't be searched\n     * @private\n     * @type {string} - 'municipio' | 'poblacion' | 'toponimo' | 'municipio,poblacion' | etc\n     */\n    this.noProcess = options.noProcess || 'poblacion';\n\n    /**\n     * This variable indicates the country code.\n     * @private\n     * @type {string} - 'es'\n     */\n    this.countryCode = options.countryCode || 'es';\n\n    /**\n     * This variable indicates Geocoder Candidates service url\n     * @private\n     * @type {string}\n     */\n    this.urlCandidates = options.urlCandidates || 'https://www.cartociudad.es/geocoder/api/geocoder/candidatesJsonp';\n\n    /**\n     * This variable indicates Geocoder Find service url\n     * @private\n     * @type {string}\n     */\n    this.urlFind = options.urlFind || 'https://www.cartociudad.es/geocoder/api/geocoder/findJsonp';\n\n    /**\n     * This variable indicates Geocoder Reverse service url\n     * @private\n     * @type {string}\n     */\n    this.urlReverse = options.urlReverse || 'https://www.cartociudad.es/geocoder/api/geocoder/reverseGeocode';\n\n    /**\n     * This variable indicates Nomenclator url prefix\n     * @private\n     * @type {string}\n     */\n    this.urlPrefix = options.urlPrefix || 'http://www.idee.es/';\n\n    /**\n     * This variable indicates Nomenclator SearchAssistant service url\n     * @private\n     * @type {string}\n     */\n    this.urlAssistant = options.urlAssistant || 'https://www.idee.es/communicationsPoolServlet/SearchAssistant';\n\n    /**\n     * This variable indicates Nomenclator Dispatcher service url\n     * @private\n     * @type {string}\n     */\n    this.urlDispatcher = options.urlDispatcher || 'https://www.idee.es/communicationsPoolServlet/Dispatcher';\n\n    /**\n     * This variable indicates which entity types should be searched on Nomenclator service.\n     * @private\n     * @type {Array<string>}\n     */\n    this.nomenclatorSearchType = IGNSEARCH_TYPES_CONFIGURATION || geographicNameType;\n\n    /**\n     * This variable indicates whether result geometry should be drawn on map.\n     * @private\n     * @type {boolean}\n     */\n    this.resultVisibility = options.resultVisibility || true;\n\n    /**\n     * This variable indicates whether the plugin can be collapsed.\n     * @private\n     * @type {boolean}\n     */\n    this.isCollapsed = options.isCollapsed || false;\n\n    /**\n     * This variable indicates whether the plugin can be collapsible.\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible = options.collapsible || false;\n\n\n    /**\n     * This variable indicates plugin's position on window\n     * @private\n     * @type {string} { 'TL' | 'TR' | 'BL' | 'BR' } (corners)\n     */\n    this.position = options.position || 'TL';\n\n    /**\n     * @private\n     * @type {string} - tooltip on hover on plugin button\n     */\n    this.tooltip_ = options.tooltip || getValue('tooltip');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.reverse_ = options.reverse || false;\n\n    /**\n     * Text to search\n     * @private\n     * @type {string}\n     */\n    this.locationID_ = (options.locationID && options.locationID.replace(/\\^/g, '&')) || '';\n\n    /**\n     * Text to search\n     * @private\n     * @type {string}\n     */\n    this.requestStreet_ = (options.requestStreet && options.requestStreet.replace(/\\^/g, '&')) || '';\n\n    let geocoderCoords = options.geocoderCoords;\n    if (M.utils.isString(geocoderCoords)) {\n      geocoderCoords = geocoderCoords.split(',');\n      geocoderCoords = [Number.parseFloat(geocoderCoords[0]),\n        Number.parseFloat(geocoderCoords[1]),\n      ];\n    }\n    /**\n     * Geocoder reverse coordinates\n     *\n     * @private\n     * @type {number}\n     */\n    this.geocoderCoords_ = geocoderCoords || [];\n\n    /**\n     * Zoom to do\n     *\n     * @private\n     * @type {string / number}\n     */\n    this.zoom_ = 16;\n    if (options.zoom !== undefined) {\n      this.zoom_ = parseInt(options.zoom, 10);\n    }\n\n    /**\n     * This variable indicates Nomenclator SearchAssistant service url\n     * @private\n     * @type {string}\n     */\n    this.searchPosition = options.searchPosition || 'nomenclator,geocoder';\n\n    /**\n     * This variable indicates Nomenclator SearchAssistant service url\n     * @private\n     * @type {string}\n     */\n    this.pointStyle = options.pointStyle || 'pinBlanco';\n  }\n\n  /**\n   * Return plugin language\n   *\n   * @public\n   * @function\n   * @param {string} lang type language\n   * @api stable\n   */\n  static getJSONTranslations(lang) {\n    if (lang === 'en' || lang === 'es') {\n      return (lang === 'en') ? en : es;\n    }\n    return M.language.getTranslation(lang).ignsearch;\n  }\n\n  /**\n   * This function adds this plugin into the map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map the map to add the plugin\n   * @api\n   */\n  addTo(map) {\n    this.controls_.push(new IGNSearchControl(\n      this.servicesToSearch,\n      this.maxResults,\n      this.noProcess,\n      this.countryCode,\n      this.urlCandidates,\n      this.urlFind,\n      this.urlReverse,\n      this.urlPrefix,\n      this.urlAssistant,\n      this.urlDispatcher,\n      this.resultVisibility,\n      this.reverse_,\n      this.locationID_,\n      this.requestStreet_,\n      this.geocoderCoords_,\n      this.zoom_,\n      this.searchPosition,\n      this.pointStyle,\n      this.nomenclatorSearchType,\n    ));\n    this.controls_[0].on('ignsearch:entityFound', (extent) => {\n      this.fire('ignsearch:entityFound', [extent]);\n    });\n    this.map_ = map;\n    this.panel_ = new M.ui.Panel('panelIGNSearch', {\n      collapsible: this.collapsible,\n      position: M.ui.position[this.position],\n      collapsed: this.isCollapsed,\n      className: 'ign-search-panel',\n      collapsedButtonClass: 'icon-ignsearch',\n      tooltip: this.tooltip_,\n    });\n    this.panel_.addControls(this.controls_);\n    map.addPanels(this.panel_);\n  }\n\n  /**\n   * This function sets geometry visibility on map (visible|invisible).\n   * @public\n   * @function\n   * @param {boolean} flag\n   * @api\n   */\n  setResultVisibility(flag) {\n    this.controls_[0].setResultVisibility(flag);\n  }\n\n  /**\n   * Name of the plugin\n   *\n   * @getter\n   * @function\n   */\n  get name() {\n    return 'ignsearch';\n  }\n\n  /**\n   * Reverse parameter\n   *\n   * @getter\n   * @function\n   */\n  get reverse() {\n    return this.reverse_;\n  }\n\n  /**\n   * Reverse geocoder coordinates\n   *\n   * @getter\n   * @function\n   */\n  get geocoderCoords() {\n    return this.controls_[0].geocoderCoords;\n  }\n\n  /**\n   * Text to search\n   * @getter\n   * @function\n   */\n  get requestStreet() {\n    return this.controls_[0].requestStreet;\n  }\n\n  /**\n   * Text to search\n   * @getter\n   * @function\n   */\n  get locationID() {\n    return this.controls_[0].locationID;\n  }\n\n  /**\n   * Get the API REST Parameters of the plugin\n   *\n   * @function\n   * @public\n   * @api\n   */\n  getAPIRest() {\n    return `${this.name}=${this.servicesToSearch}*${this.maxResults}*${this.noProcess}*${this.countryCode}*${this.resultVisibility}*${this.isCollapsed}*${this.collapsible}*${this.position}*${this.reverse}*${this.requestStreet.replace(/&/g, '^')}*${this.locationID}*${this.geocoderCoords}*${this.zoom}*${this.searchPosition}*${this.pointStyle}`;\n  }\n\n  /**\n   * This function destroys this plugin\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  destroy() {\n    this.map_.removeControls(this.controls_);\n    this.map_ = null;\n    this.control_ = null;\n    this.controls_ = null;\n    this.panel_ = null;\n  }\n}\n","import M$plugin$IGNSearch from './/facade/js/ignsearch';\nimport M$control$IGNSearchControl from './/facade/js/ignsearchcontrol';\nimport M$impl$control$IGNSearchControl from './/impl/ol/js/ignsearchcontrol';\n\nif (!window.M.plugin) window.M.plugin = {};\nif (!window.M.control) window.M.control = {};\nif (!window.M.impl) window.M.impl = {};\nif (!window.M.impl.control) window.M.impl.control = {};\nwindow.M.plugin.IGNSearch = M$plugin$IGNSearch;\nwindow.M.control.IGNSearchControl = M$control$IGNSearchControl;\nwindow.M.impl.control.IGNSearchControl = M$impl$control$IGNSearchControl;\n"],"sourceRoot":""}