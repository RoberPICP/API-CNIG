{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/templates/viewshed.html","webpack:///./src/impl/ol/js/viewshedcontrol.js","webpack:///./src/facade/js/i18n/language.js","webpack:///./src/facade/js/viewshedcontrol.js","webpack:///./src/facade/js/viewshed.js","webpack:///./src/index.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","ViewShedControl","_M$impl$Control","_inherits","M","impl","Control","_super","_createSuper","_classCallCheck","apply","arguments","map","html","this","facadeMap_","_get","_getPrototypeOf","coords","srsTarget","ol","proj","transform","getProjection","code","source","point","features","format","GeoJSON","readFeatures","featureProjection","featuresToFacade","pointFeature","Feature","type","id","geometry","coordinates","layer","Vector","legend","extract","addFeatures","addLayers","setStyle","style","Point","radius","fill","color","stroke","width","forEach","f","Polygon","opacity","implFeatures","feature","olFeature2Facade","utils","isNullOrEmpty","length","getGeometry","pointView","View","center","zoom","getMapImpl","setView","extent","getFeaturesExtent","getView","fit","duration","minResolution","translations","en","es","getLang","res","language","getTranslation","lang","viewshed","getValue","keyPath","undefined","translation","console","warn","concat","split","reduce","prev","current","_M$Control","parameters","_this","ViewShedImplControl","element_","url_","url","_this2","Promise","success","fail","template","compileSync","vars","tooltip","active_viewshed","clear","querySelector","addEventListener","activate","activated","deactivate","on","evt","CLICK","analizeVisibility","classList","add","document","checkEscKey","removeEventListener","removePopup","un","remove","_this3","getLayers","filter","removeLayers","coord","getImpl","transformCoordinates","config","dialog","info","setTimeout","backgroundColor","remote","then","response","JSON","parse","text","valid","response2","loadGeoJSONLayer","centerFeatures","err","error","control","ViewShed","_M$Plugin","Plugin","options","map_","controls_","position_","position","collapsed_","collapsed","collapsible_","collapsible","metadata_","api","metadata","name_","push","panel_","ui","Panel","className","collapsedButtonClass","addControls","addPanels","that","ADDED_TO_MAP","fire","plugin","removeControls","_ref","window","M$plugin$ViewShed","M$control$ViewShedControl","M$impl$control$ViewShedControl"],"mappings":"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","file":"viewshed.ol.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 6);\n","module.exports = \"<div class=\\\"m-control m-container m-viewshed-container\\\">\\n    <button id='m-viewshed-calculate-btn' class=\\\"m-viewshed-btn icon-pin\\\" title=\\\"{{translations.active_viewshed}}\\\"></button>\\n    <button id='m-viewshed-clear-btn' class=\\\"m-viewshed-btn icon-clear\\\" title=\\\"{{translations.clear}}\\\"></button>\\n</div>\\n\";","/**\n * @module M/impl/control/ViewShedControl\n */\nexport default class ViewShedControl extends M.impl.Control {\n  /**\n   * This function adds the control to the specified map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the plugin\n   * @param {HTMLElement} html of the plugin\n   * @api stable\n   */\n  addTo(map, html) {\n    this.facadeMap_ = map;\n    super.addTo(map, html);\n  }\n\n  /**\n   * Transform coordinates\n   * @public\n   * @function\n   * @param {*} coords, srsTarget, srsOrigin\n   */\n  transformCoordinates(coords, srsTarget) {\n    return ol.proj.transform(coords, this.facadeMap_.getProjection().code, srsTarget);\n  }\n\n  /**\n   * Loads GeoJSON layer\n   * @public\n   * @function\n   * @param {*} source, layerName\n   */\n  loadGeoJSONLayer(source, point) {\n    let features = new ol.format.GeoJSON()\n      .readFeatures(source, { featureProjection: this.facadeMap_.getProjection().code });\n\n    features = this.featuresToFacade(features);\n    const pointFeature = new M.Feature('clickedPoint', {\n      type: 'Feature',\n      id: 'clickedPoint',\n      geometry: {\n        type: 'Point',\n        coordinates: point,\n      },\n    });\n\n    const layer = new M.layer.Vector({ name: 'viewresult', legend: 'viewresult', extract: false });\n    layer.addFeatures(features);\n    layer.addFeatures([pointFeature]);\n    this.facadeMap_.addLayers(layer);\n    pointFeature.setStyle(new M.style.Point({\n      radius: 7,\n      fill: {\n        color: 'red',\n      },\n      stroke: {\n        color: 'white',\n        width: 2,\n      },\n    }));\n\n    features.forEach((f) => {\n      f.setStyle(new M.style.Polygon({\n        fill: {\n          color: '#71a7d3',\n          opacity: 0.5,\n        },\n        stroke: {\n          color: '#71a7d3',\n          width: 2,\n        },\n      }));\n    });\n\n    return features;\n  }\n\n  /**\n   * Converts Openlayers features to Mapea features.\n   * @public\n   * @function\n   * @api\n   * @param {Array<OL.Feature>} implFeatures\n   * @returns {Array<M.Feature>}\n   */\n  featuresToFacade(implFeatures) {\n    return implFeatures.map((feature) => {\n      return M.impl.Feature.olFeature2Facade(feature);\n    });\n  }\n\n  /**\n   * Centers on features\n   * @public\n   * @function\n   * @api\n   * @param {*} features -\n   */\n  centerFeatures(features) {\n    if (!M.utils.isNullOrEmpty(features)) {\n      if ((features.length === 1) && (features[0].getGeometry().type === 'Point')) {\n        const pointView = new ol.View({\n          center: features[0].getGeometry().coordinates,\n          zoom: 15,\n        });\n        this.facadeMap_.getMapImpl().setView(pointView);\n      } else {\n        const extent = M.impl.utils.getFeaturesExtent(features);\n        this.facadeMap_.getMapImpl().getView().fit(extent, {\n          duration: 500,\n          minResolution: 1,\n        });\n      }\n    }\n  }\n}\n","import en from './en';\nimport es from './es';\n\n/**\n * Default object with es and en translate.\n *\n * @const\n * @type {object}\n */\nconst translations = {\n  en,\n  es,\n};\n\nconst getLang = () => {\n  let res = 'es';\n  if (typeof M.language.getLang === 'function') {\n    res = M.language.getLang();\n  }\n\n  return res;\n};\n\n/**\n * This function sets a new language translate.\n * @param {string} lang\n * @param {JSON} json\n * @public\n * @api\n */\nexport const addTranslation = (lang, json) => {\n  translations[lang] = json;\n};\n\n/**\n * This function gets a language translate.\n *\n * @param {string} lang\n * @return {JSON}\n * @public\n * @api\n */\nexport const getTranslation = (lang) => {\n  if (lang === 'es' || lang === 'en') {\n    return translations[lang];\n  }\n  return M.language.getTranslation(lang).viewshed;\n};\n\n/**\n * This function gets a language value from key\n *\n * @public\n * @param {string}\n * @param {string}\n * @return {string}\n * @public\n * @api\n */\n\nexport const getValue = (keyPath, lang = getLang()) => {\n  const translation = getTranslation(lang);\n  let value = '';\n  if (M.utils.isNullOrEmpty(translation)) {\n    /* eslint-disable no-console */\n    console.warn(`The translation '${lang}' has not been defined.`);\n  } else {\n    value = keyPath.split('.').reduce((prev, current) => prev[current], translation);\n  }\n\n  return value;\n};\n","/**\n * @module M/control/ViewShedControl\n */\n\nimport ViewShedImplControl from 'impl/viewshedcontrol';\nimport template from 'templates/viewshed';\nimport { getValue } from './i18n/language';\n\n\nexport default class ViewShedControl extends M.Control {\n  /**\n   * @classdesc\n   * Main constructor of the class. Creates a PluginControl\n   * control\n   *\n   * @constructor\n   * @extends {M.Control}\n   * @api stable\n   */\n  constructor(parameters) {\n    const impl = new ViewShedImplControl();\n    super(impl, 'ViewShed');\n\n    this.facadeMap_ = null;\n\n    /**\n     * Main control's html element\n     * @private\n     * @type {HTMLElement}\n     */\n    this.element_ = null;\n\n    /**\n     * Geoprocess URL\n     *\n     * @private\n     * @type {string}\n     */\n    this.url_ = parameters.url;\n  }\n\n  /**\n   * This function creates the view\n   *\n   * @public\n   * @function\n   * @param {M.Map} map to add the control\n   * @api stable\n   */\n  createView(map) {\n    this.facadeMap_ = map;\n    return new Promise((success, fail) => {\n      const html = M.template.compileSync(template, {\n        vars: {\n          translations: {\n            tooltip: getValue('tooltip'),\n            active_viewshed: getValue('active_viewshed'),\n            clear: getValue('clear'),\n          },\n        },\n      });\n      this.element_ = html;\n      html.querySelector('#m-viewshed-clear-btn').addEventListener('click', this.clear.bind(this));\n      html.querySelector('#m-viewshed-calculate-btn').addEventListener('click', this.activate.bind(this));\n      success(html);\n    });\n  }\n\n  /**\n   * This function is called on the control activation\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  activate() {\n    if (this.activated) {\n      this.deactivate();\n    } else {\n      this.facadeMap_.on(M.evt.CLICK, this.analizeVisibility, this);\n      this.activated = true;\n      this.element_.querySelector('#m-viewshed-calculate-btn').classList.add('activated');\n      document.addEventListener('keydown', this.checkEscKey.bind(this));\n    }\n  }\n\n  checkEscKey(evt) {\n    if (evt.key === 'Escape') {\n      this.deactivate();\n      document.removeEventListener('keydown', this.checkEscKey);\n    }\n  }\n\n  /**\n   * This function is called on the control deactivation\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  deactivate() {\n    this.facadeMap_.removePopup();\n    this.facadeMap_.un(M.evt.CLICK, this.analizeVisibility, this);\n    this.activated = false;\n    this.element_.querySelector('#m-viewshed-calculate-btn').classList.remove('activated');\n  }\n\n  /**\n   * This function throws analysis of visibility area and shows result\n   *\n   * @private\n   * @function\n   * @param {ol.MapBrowserPointerEvent} evt - Browser point event\n   */\n  analizeVisibility(evt) {\n    const remove = this.facadeMap_.getLayers().filter((layer) => {\n      return layer.type === 'Vector' && layer.name === 'viewresult';\n    });\n\n    this.facadeMap_.removeLayers(remove);\n    const coord = this.getImpl().transformCoordinates(evt.coord, 'EPSG:4326');\n    const config = `<div class=\"m-viewshed-message\">${getValue('calculating')}...<br/><br/><p class=\"m-viewshed-loading\"><span class=\"icon-spinner\" /></p></div>`;\n    M.dialog.info(config);\n    setTimeout(() => {\n      document.querySelector('div.m-mapea-container div.m-dialog div.m-title').style.backgroundColor = '#71a7d3';\n      const button = document.querySelector('div.m-dialog.info div.m-button > button');\n      button.remove();\n    }, 10);\n\n    M.remote.get(`${this.url_}/api/operations/checkCoordinates?x=${coord[0]}&y=${coord[1]}`).then((response) => {\n      const res = JSON.parse(response.text);\n      if (res.valid === true) {\n        const url = `${this.url_}/api/operations/viewshed?x=${coord[0]}&y=${coord[1]}&distance=0.1`;\n        M.remote.get(url).then((response2) => {\n          document.querySelector('div.m-mapea-container div.m-dialog').remove();\n          const features = this.getImpl().loadGeoJSONLayer(response2.text, evt.coord);\n          this.getImpl().centerFeatures(features);\n        }).catch((err) => {\n          document.querySelector('div.m-mapea-container div.m-dialog').remove();\n          M.dialog.error(getValue('error_query'));\n        });\n      } else {\n        document.querySelector('div.m-mapea-container div.m-dialog').remove();\n        M.dialog.error(getValue('outbox'), getValue('warning'));\n      }\n    }).catch((err) => {\n      document.querySelector('div.m-mapea-container div.m-dialog').remove();\n      M.dialog.error(getValue('error_query'));\n    });\n  }\n\n  /**\n   * This function clears the layer with the area\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  clear() {\n    const remove = this.facadeMap_.getLayers().filter((layer) => {\n      return layer.type === 'Vector' && layer.name === 'viewresult';\n    });\n\n    this.facadeMap_.removeLayers(remove);\n    this.deactivate();\n  }\n\n  /**\n   * This function compares controls\n   *\n   * @public\n   * @function\n   * @param {M.Control} control to compare\n   * @api\n   */\n  equals(control) {\n    return control instanceof ViewShedControl;\n  }\n}\n","/**\n * @module M/plugin/ViewShed\n */\nimport 'assets/css/fonts';\nimport 'assets/css/viewshed';\nimport ViewShedControl from './viewshedcontrol';\nimport api from '../../api';\nimport { getValue } from './i18n/language';\n\nimport es from './i18n/es';\nimport en from './i18n/en';\n\nexport default class ViewShed extends M.Plugin {\n  /**\n   * @classdesc\n   * Main facade plugin object. This class creates a plugin\n   * object which has an implementation Object\n   *\n   * @constructor\n   * @extends {M.Plugin}\n   * @param {Object} impl implementation object\n   * @api stable\n   */\n  constructor(options = {}) {\n    super();\n\n    /**\n     * Facade of the map\n     * @private\n     * @type {M.Map}\n     */\n    this.map_ = null;\n\n    /**\n     * Array of controls\n     * @private\n     * @type {Array<M.Control>}\n     */\n    this.controls_ = [];\n\n    /**\n     * Position of the plugin\n     *\n     * @private\n     * @type {string} - TL | TR | BL | BR\n     */\n    this.position_ = options.position || 'TL';\n\n    /**\n     * Option to allow the plugin to be collapsed or not\n     * @private\n     * @type {Boolean}\n     */\n    this.collapsed_ = options.collapsed;\n    if (this.collapsed_ === undefined) this.collapsed_ = true;\n\n    /**\n     * Option to allow the plugin to be collapsible or not\n     * @private\n     * @type {Boolean}\n     */\n    this.collapsible_ = options.collapsible;\n    if (this.collapsible_ === undefined) this.collapsible_ = true;\n\n    /**\n     * Geoprocess URL\n     *\n     * @private\n     * @type {string}\n     */\n    this.url_ = options.url || 'http://sigc.desarrollo.guadaltel.es/geoprocess-services';\n\n    /**\n     * Metadata from api.json\n     * @private\n     * @type {Object}\n     */\n    this.metadata_ = api.metadata;\n\n    /**\n     * Name of the plugin\n     * @private\n     * @type {String}\n     */\n    this.name_ = 'viewshed';\n  }\n\n  /**\n   * Return plugin language\n   *\n   * @public\n   * @function\n   * @param {string} lang type language\n   * @api stable\n   */\n  static getJSONTranslations(lang) {\n    if (lang === 'en' || lang === 'es') {\n      return (lang === 'en') ? en : es;\n    }\n    return M.language.getTranslation(lang).viewshed;\n  }\n\n  /**\n   * This function adds this plugin into the map\n   *\n   * @public\n   * @function\n   * @param {M.Map} map the map to add the plugin\n   * @api stable\n   */\n  addTo(map) {\n    this.controls_.push(new ViewShedControl({ url: this.url_ }));\n    this.map_ = map;\n    this.panel_ = new M.ui.Panel('panelViewShed', {\n      className: 'm-viewshed-container',\n      collapsed: this.collapsed_,\n      collapsible: this.collapsible_,\n      position: M.ui.position[this.position_],\n      tooltip: getValue('tooltip'),\n      collapsedButtonClass: 'icon-viewshed',\n    });\n    this.panel_.addControls(this.controls_);\n    map.addPanels(this.panel_);\n\n    const that = this;\n    this.controls_[0].on(M.evt.ADDED_TO_MAP, () => {\n      that.fire(M.evt.ADDED_TO_MAP);\n    });\n  }\n\n  /**\n   * @getter\n   * @public\n   */\n  get name() {\n    return 'viewshed';\n  }\n\n  /**\n   * This function returns the position\n   *\n   * @public\n   * @return {string}\n   * @api\n   */\n  get position() {\n    return this.position_;\n  }\n\n  /**\n   * Get the API REST Parameters of the plugin\n   *\n   * @function\n   * @public\n   * @api\n   */\n  getAPIRest() {\n    return `${this.name_}=${this.position_}`;\n  }\n\n  /**\n   * This function compares plugins\n   *\n   * @public\n   * @function\n   * @param {M.Plugin} plugin to compare\n   * @api\n   */\n  equals(plugin) {\n    return plugin instanceof ViewShed;\n  }\n\n  /**\n   * This function gets metadata plugin\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  getMetadata() {\n    return this.metadata_;\n  }\n\n  /**\n   * This function destroys this plugin\n   *\n   * @public\n   * @function\n   * @api stable\n   */\n  destroy() {\n    this.map_.removeControls(this.controls_);\n    [this.map_, this.controls_, this.panel_] = [null, null, null];\n  }\n}\n","import M$plugin$ViewShed from './/facade/js/viewshed';\nimport M$control$ViewShedControl from './/facade/js/viewshedcontrol';\nimport M$impl$control$ViewShedControl from './/impl/ol/js/viewshedcontrol';\n\nif (!window.M.plugin) window.M.plugin = {};\nif (!window.M.control) window.M.control = {};\nif (!window.M.impl) window.M.impl = {};\nif (!window.M.impl.control) window.M.impl.control = {};\nwindow.M.plugin.ViewShed = M$plugin$ViewShed;\nwindow.M.control.ViewShedControl = M$control$ViewShedControl;\nwindow.M.impl.control.ViewShedControl = M$impl$control$ViewShedControl;\n"],"sourceRoot":""}